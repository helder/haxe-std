{"sourceRoot":"","names":[],"mappings":"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","version":3,"file":"JsonParser.js.map","sources":["../../../../../../../haxe/versions/4.1.4/std/js/_std/haxe/Exception.hx","../../../../../../../haxe/versions/4.1.4/std/StringBuf.hx","../../../../../../../haxe/versions/4.1.4/std/js/_std/Std.hx","../../../../../../../haxe/versions/4.1.4/std/js/_std/HxOverrides.hx","../../../../../../../haxe/versions/4.1.4/std/haxe/format/JsonParser.hx"],"sourcesContent":["package haxe;\n\nimport js.lib.Error;\n\n@:coreApi\nclass Exception extends NativeException {\n\tpublic var message(get,never):String;\n\tpublic var stack(get,never):CallStack;\n\tpublic var previous(get,never):Null<Exception>;\n\tpublic var native(get,never):Any;\n\n\t@:ifFeature(\"haxe.Exception.get_stack\")\n\t@:noCompletion var __skipStack:Int;\n\t@:noCompletion var __exceptionStack(get,set):Null<CallStack>;\n\t@:noCompletion var __nativeException:Any;\n\t@:noCompletion var __previousException:Null<Exception>;\n\n\tstatic function caught(value:Any):Exception {\n\t\tif(Std.isOfType(value, Exception)) {\n\t\t\treturn value;\n\t\t} else if(Std.isOfType(value, Error)) {\n\t\t\treturn new Exception((cast value:Error).message, null, value);\n\t\t} else {\n\t\t\treturn new ValueException(value, null, value);\n\t\t}\n\t}\n\n\tstatic function thrown(value:Any):Any {\n\t\tif(Std.isOfType(value, Exception)) {\n\t\t\treturn (value:Exception).native;\n\t\t} else if(Std.isOfType(value, Error)) {\n\t\t\treturn value;\n\t\t} else {\n\t\t\tvar e = new ValueException(value);\n\t\t\tuntyped __feature__(\"haxe.Exception.get_stack\", e.__shiftStack());\n\t\t\treturn e;\n\t\t}\n\t}\n\n\tpublic function new(message:String, ?previous:Exception, ?native:Any) {\n\t\tsuper(message);\n\t\t(cast this).message = message;\n\t\t__previousException = previous;\n\t\t__nativeException = native != null ? native : this;\n\t\tuntyped __feature__('haxe.Exception.stack', {\n\t\t\t__skipStack = 0;\n\t\t\tvar old = js.Syntax.code('Error.prepareStackTrace');\n\t\t\tjs.Syntax.code('Error.prepareStackTrace = function(e) { return e.stack; }');\n\t\t\tif(Std.isOfType(native, Error)) {\n\t\t\t\t(cast this).stack = native.stack;\n\t\t\t} else {\n\t\t\t\tvar e:Error = null;\n\t\t\t\tif ((cast Error).captureStackTrace) {\n\t\t\t\t\t(cast Error).captureStackTrace(this, Exception);\n\t\t\t\t\te = cast this;\n\t\t\t\t} else {\n\t\t\t\t\te = new Error();\n\t\t\t\t\t//Internet Explorer provides call stack only if error was thrown\n\t\t\t\t\tif(js.Syntax.typeof(e.stack) == \"undefined\") {\n\t\t\t\t\t\tjs.Syntax.code('try { throw {0}; } catch(_) {}', e);\n\t\t\t\t\t\t__skipStack++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t(cast this).stack = e.stack;\n\t\t\t}\n\t\t\tjs.Syntax.code('Error.prepareStackTrace = {0}', old);\n\t\t});\n\t}\n\n\tfunction unwrap():Any {\n\t\treturn __nativeException;\n\t}\n\n\tpublic function toString():String {\n\t\treturn message;\n\t}\n\n\tpublic function details():String {\n\t\treturn inline CallStack.exceptionToString(this);\n\t}\n\n\t@:noCompletion\n\t@:ifFeature(\"haxe.Exception.get_stack\")\n\tinline function __shiftStack():Void {\n\t\t__skipStack++;\n\t}\n\n\tfunction get_message():String {\n\t\treturn (cast this:Error).message;\n\t}\n\n\tfunction get_previous():Null<Exception> {\n\t\treturn __previousException;\n\t}\n\n\tfinal function get_native():Any {\n\t\treturn __nativeException;\n\t}\n\n\tfunction get_stack():CallStack {\n\t\treturn switch __exceptionStack {\n\t\t\tcase null:\n\t\t\t\t__exceptionStack = NativeStackTrace.toHaxe(NativeStackTrace.normalize((cast this).stack), __skipStack);\n\t\t\tcase s: s;\n\t\t}\n\t}\n\n\t@:noCompletion\n\tfunction setProperty(name:String, value:Any):Void {\n\t\ttry {\n\t\t\tjs.lib.Object.defineProperty(this, name, {value:value});\n\t\t} catch(e:Exception) {\n\t\t\tjs.Syntax.code('{0}[{1}] = {2}', this, name, value);\n\t\t}\n\t}\n\n\t@:noCompletion\n\tinline function get___exceptionStack():CallStack {\n\t\treturn (cast this).__exceptionStack;\n\t}\n\n\t@:noCompletion\n\tinline function set___exceptionStack(value:CallStack):CallStack {\n\t\tsetProperty('__exceptionStack', value);\n\t\treturn value;\n\t}\n\n\t@:noCompletion\n\tinline function get___skipStack():Int {\n\t\treturn (cast this).__skipStack;\n\t}\n\n\t@:noCompletion\n\tinline function set___skipStack(value:Int):Int {\n\t\tsetProperty('__skipStack', value);\n\t\treturn value;\n\t}\n\n\t@:noCompletion\n\tinline function get___nativeException():Any {\n\t\treturn (cast this).__nativeException;\n\t}\n\n\t@:noCompletion\n\tinline function set___nativeException(value:Any):Any {\n\t\tsetProperty('__nativeException', value);\n\t\treturn value;\n\t}\n\n\t@:noCompletion\n\tinline function get___previousException():Null<Exception> {\n\t\treturn (cast this).__previousException;\n\t}\n\n\t@:noCompletion\n\tinline function set___previousException(value:Null<Exception>):Null<Exception> {\n\t\tsetProperty('__previousException', value);\n\t\treturn value;\n\t}\n}\n\n@:dox(hide)\n@:noCompletion\n@:native('Error')\nprivate extern class NativeException {\n\t// private var message:String; //redefined in haxe.Exception\n\t// private var stack(default, null):String; //redefined in haxe.Exception\n\n\tfunction new(?message:String);\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tA String buffer is an efficient way to build a big string by appending small\n\telements together.\n\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\n\tit can be passed as argument to functions which modify it by appending more\n\tvalues.\n**/\nclass StringBuf {\n\tvar b:String;\n\n\t/**\n\t\tThe length of `this` StringBuf in characters.\n\t**/\n\tpublic var length(get, never):Int;\n\n\t/**\n\t\tCreates a new StringBuf instance.\n\n\t\tThis may involve initialization of the internal buffer.\n\t**/\n\tpublic inline function new() {\n\t\tb = \"\";\n\t}\n\n\tinline function get_length():Int {\n\t\treturn b.length;\n\t}\n\n\t/**\n\t\tAppends the representation of `x` to `this` StringBuf.\n\n\t\tThe exact representation of `x` may vary per platform. To get more\n\t\tconsistent behavior, this function should be called with\n\t\tStd.string(x).\n\n\t\tIf `x` is null, the String \"null\" is appended.\n\t**/\n\tpublic inline function add<T>(x:T):Void {\n\t\tb += x;\n\t}\n\n\t/**\n\t\tAppends the character identified by `c` to `this` StringBuf.\n\n\t\tIf `c` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic inline function addChar(c:Int):Void {\n\t\tb += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tAppends a substring of `s` to `this` StringBuf.\n\n\t\tThis function expects `pos` and `len` to describe a valid substring of\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\n\t\t`this.add(s.substr(pos,len))` can be used instead.\n\n\t\tIf `s` or `pos` are null, the result is unspecified.\n\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\n\t\tof `s`.\n\t**/\n\tpublic inline function addSub(s:String, pos:Int, ?len:Int):Void {\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\n\t}\n\n\t/**\n\t\tReturns the content of `this` StringBuf as String.\n\n\t\tThe buffer is not emptied by this operation.\n\t**/\n\tpublic inline function toString():String {\n\t\treturn b;\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport js.Boot;\nimport js.Syntax;\n\n@:keepInit\n@:coreApi class Std {\n\tpublic static inline function is(v:Dynamic, t:Dynamic):Bool {\n\t\treturn isOfType(v, t);\n\t}\n\n\tpublic static inline function isOfType(v:Dynamic, t:Dynamic):Bool {\n\t\treturn @:privateAccess js.Boot.__instanceof(v, t);\n\t}\n\n\tpublic static inline function downcast<T:{}, S:T>(value:T, c:Class<S>):S@:privateAccess {\n\t\treturn if (js.Boot.__downcastCheck(value, c)) cast value else null;\n\t}\n\n\t@:deprecated('Std.instance() is deprecated. Use Std.downcast() instead.')\n\tpublic static inline function instance<T:{}, S:T>(value:T, c:Class<S>):S {\n\t\treturn downcast(value, c);\n\t}\n\n\t@:pure\n\tpublic static function string(s:Dynamic):String {\n\t\treturn @:privateAccess js.Boot.__string_rec(s, \"\");\n\t}\n\n\tpublic static inline function int(x:Float):Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\t@:pure\n\tpublic static function parseInt(x:String):Null<Int> {\n\t\tif(x != null) {\n\t\t\tfor(i in 0...x.length) {\n\t\t\t\tvar c = StringTools.fastCodeAt(x, i);\n\t\t\t\tif(c <= 8 || (c >= 14 && c != ' '.code && c != '-'.code)) {\n\t\t\t\t\tvar nc = StringTools.fastCodeAt(x, i + 1);\n\t\t\t\t\tvar v = js.Lib.parseInt(x, (nc == \"x\".code || nc == \"X\".code) ? 16 : 10);\n\t\t\t\t\treturn Math.isNaN(v) ? null : cast v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static inline function parseFloat(x:String):Float {\n\t\treturn js.Syntax.code(\"parseFloat({0})\", x);\n\t}\n\n\tpublic static function random(x:Int):Int {\n\t\treturn x <= 0 ? 0 : Math.floor(Math.random() * x);\n\t}\n\n\tstatic function __init__():Void\n\t\tuntyped {\n\t\t\t__feature__(\"js.Boot.getClass\", String.prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"String\"] = String, String));\n\t\t\t__feature__(\"js.Boot.isClass\", String.__name__ = __feature__(\"Type.getClassName\", \"String\", true));\n\t\t\t__feature__(\"Type.resolveClass\", $hxClasses[\"Array\"] = Array);\n\t\t\t__feature__(\"js.Boot.isClass\", Array.__name__ = __feature__(\"Type.getClassName\", \"Array\", true));\n\t\t\t__feature__(\"Date.*\", {\n\t\t\t\t__feature__(\"js.Boot.getClass\",\n\t\t\t\t\tjs.Syntax.code('Date').prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"Date\"] = js.Syntax.code('Date'), js.Syntax.code('Date')));\n\t\t\t\t__feature__(\"js.Boot.isClass\", js.Syntax.code('Date').__name__ = \"Date\");\n\t\t\t});\n\t\t\t__feature__(\"Int.*\", js.Syntax.code('var Int = { };'));\n\t\t\t__feature__(\"Dynamic.*\", js.Syntax.code('var Dynamic = { };'));\n\t\t\t__feature__(\"Float.*\", js.Syntax.code('var Float = Number'));\n\t\t\t__feature__(\"Bool.*\", js.Syntax.code('var Bool = Boolean'));\n\t\t\t__feature__(\"Class.*\", js.Syntax.code('var Class = { };'));\n\t\t\t__feature__(\"Enum.*\", js.Syntax.code('var Enum = { };'));\n\t\t\t#if (js_es < 5)\n\t\t\t__feature__(\"Array.map\", if (Array.prototype.map == null) Array.prototype.map = function(f) {\n\t\t\t\tvar a = [];\n\t\t\t\tfor (i in 0...__this__.length)\n\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\treturn a;\n\t\t\t});\n\t\t\t__feature__(\"Array.filter\", if (Array.prototype.filter == null) Array.prototype.filter = function(f) {\n\t\t\t\tvar a = [];\n\t\t\t\tfor (i in 0...__this__.length) {\n\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\tif (f(e))\n\t\t\t\t\t\ta.push(e);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t});\n\t\t\t#end\n\t\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\tstatic function dateStr(date:Date):String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear() + \"-\" + (if (m < 10) \"0\" + m else \"\" + m) + \"-\" + (if (d < 10) \"0\" + d else \"\" + d) + \" \"\n\t\t\t+ (if (h < 10) \"0\" + h else \"\" + h) + \":\" + (if (mi < 10) \"0\" + mi else \"\" + mi) + \":\" + (if (s < 10) \"0\" + s else \"\" + s);\n\t}\n\n\tstatic function strDate(s:String):Date {\n\t\tswitch (s.length) {\n\t\t\tcase 8: // hh:mm:ss\n\t\t\t\tvar k = s.split(\":\");\n\t\t\t\tvar d = js.Syntax.construct(Date);\n\t\t\t\t(cast d)[cast \"setTime\"](0);\n\t\t\t\t(cast d)[cast \"setUTCHours\"](k[0]);\n\t\t\t\t(cast d)[cast \"setUTCMinutes\"](k[1]);\n\t\t\t\t(cast d)[cast \"setUTCSeconds\"](k[2]);\n\t\t\t\treturn d;\n\t\t\tcase 10: // YYYY-MM-DD\n\t\t\t\tvar k = s.split(\"-\");\n\t\t\t\treturn new Date(cast k[0], (cast k[1]) - 1, cast k[2], 0, 0, 0);\n\t\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\t\tvar k = s.split(\" \");\n\t\t\t\tvar y = k[0].split(\"-\");\n\t\t\t\tvar t = k[1].split(\":\");\n\t\t\t\treturn new Date(cast y[0], (cast y[1]) - 1, cast y[2], cast t[0], cast t[1], cast t[2]);\n\t\t\tdefault:\n\t\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\t@:pure\n\tstatic function cca(s:String, index:Int):Null<Int> {\n\t\tvar x = (cast s).charCodeAt(index);\n\t\tif (x != x) // fast isNaN\n\t\t\treturn js.Lib.undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\t@:pure\n\tstatic function substr(s:String, pos:Int, ?len:Int):String {\n\t\tif (len == null) {\n\t\t\tlen = s.length;\n\t\t} else if (len < 0) {\n\t\t\tif (pos == 0)\n\t\t\t\tlen = s.length + len;\n\t\t\telse\n\t\t\t\treturn \"\";\n\t\t}\n\n\t\t#if (js_es < 5)\n\t\tif (pos < 0) {\n\t\t\tpos = s.length + pos;\n\t\t\tif (pos < 0)\n\t\t\t\tpos = 0;\n\t\t}\n\t\t#end\n\n\t\treturn (cast s).substr(pos, len);\n\t}\n\n\t@:pure\n\tstatic function indexOf<T>(a:Array<T>, obj:T, i:Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0)\n\t\t\t\ti = 0;\n\t\t}\n\t\twhile (i < len) {\n\t\t\tif (js.Syntax.strictEq(a[i], obj))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t@:pure\n\tstatic function lastIndexOf<T>(a:Array<T>, obj:T, i:Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0) {\n\t\t\tif (js.Syntax.strictEq(a[i], obj))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>(a:Array<T>, obj:T) {\n\t\tvar i = a.indexOf(obj);\n\t\tif (i == -1)\n\t\t\treturn false;\n\t\ta.splice(i, 1);\n\t\treturn true;\n\t}\n\n\t@:pure\n\tstatic function iter<T>(a:Array<T>):Iterator<T>\n\t\tuntyped {\n\t\t\treturn {\n\t\t\t\tcur: 0,\n\t\t\t\tarr: a,\n\t\t\t\thasNext: function() {\n\t\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t\t},\n\t\t\t\tnext: function() {\n\t\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t@:ifFeature(\"anon_read.keyValueIterator\", \"dynamic_read.keyValueIterator\", \"closure_read.keyValueIterator\")\n\tstatic function keyValueIter<T>( a : Array<T> ) {\n\t\treturn new haxe.iterators.ArrayKeyValueIterator(a);\n\t}\n\n\t@:pure\n\tstatic function now(): Float return js.lib.Date.now();\n\n\tstatic function __init__()\n\t\tuntyped {\n\t\t\t#if (js_es < 5)\n\t\t\t__feature__('HxOverrides.indexOf',\n\t\t\t\tif (Array.prototype.indexOf) js.Syntax.code(\"HxOverrides\").indexOf = function(a, o, i) return Array.prototype.indexOf.call(a, o, i));\n\t\t\t__feature__('HxOverrides.lastIndexOf',\n\t\t\t\tif (Array.prototype.lastIndexOf) js.Syntax.code(\"HxOverrides\").lastIndexOf = function(a, o, i) return Array.prototype.lastIndexOf.call(a, o, i));\n\t\t\t#end\n\n\t\t\t__feature__('HxOverrides.now',\n\t\t\t\tif (js.Syntax.typeof(performance) != 'undefined' && js.Syntax.typeof(performance.now) == 'function') {\n\t\t\t\t\tHxOverrides.now = performance.now.bind(performance);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.format;\n\n/**\n\tAn implementation of JSON parser in Haxe.\n\n\tThis class is used by `haxe.Json` when native JSON implementation\n\tis not available.\n\n\t@see https://haxe.org/manual/std-Json-parsing.html\n**/\nclass JsonParser {\n\t/**\n\t\tParses given JSON-encoded `str` and returns the resulting object.\n\n\t\tJSON objects are parsed into anonymous structures and JSON arrays\n\t\tare parsed into `Array<Dynamic>`.\n\n\t\tIf given `str` is not valid JSON, an exception will be thrown.\n\n\t\tIf `str` is null, the result is unspecified.\n\t**/\n\tstatic public inline function parse(str:String):Dynamic {\n\t\treturn new JsonParser(str).doParse();\n\t}\n\n\tvar str:String;\n\tvar pos:Int;\n\n\tfunction new(str:String) {\n\t\tthis.str = str;\n\t\tthis.pos = 0;\n\t}\n\n\tfunction doParse():Dynamic {\n\t\tvar result = parseRec();\n\t\tvar c;\n\t\twhile (!StringTools.isEof(c = nextChar())) {\n\t\t\tswitch (c) {\n\t\t\t\tcase ' '.code, '\\r'.code, '\\n'.code, '\\t'.code:\n\t\t\t\t// allow trailing whitespace\n\t\t\t\tdefault:\n\t\t\t\t\tinvalidChar();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction parseRec():Dynamic {\n\t\twhile (true) {\n\t\t\tvar c = nextChar();\n\t\t\tswitch (c) {\n\t\t\t\tcase ' '.code, '\\r'.code, '\\n'.code, '\\t'.code:\n\t\t\t\t// loop\n\t\t\t\tcase '{'.code:\n\t\t\t\t\tvar obj = {}, field = null, comma:Null<Bool> = null;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tvar c = nextChar();\n\t\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\t\tcase ' '.code, '\\r'.code, '\\n'.code, '\\t'.code:\n\t\t\t\t\t\t\t// loop\n\t\t\t\t\t\t\tcase '}'.code:\n\t\t\t\t\t\t\t\tif (field != null || comma == false)\n\t\t\t\t\t\t\t\t\tinvalidChar();\n\t\t\t\t\t\t\t\treturn obj;\n\t\t\t\t\t\t\tcase ':'.code:\n\t\t\t\t\t\t\t\tif (field == null)\n\t\t\t\t\t\t\t\t\tinvalidChar();\n\t\t\t\t\t\t\t\tReflect.setField(obj, field, parseRec());\n\t\t\t\t\t\t\t\tfield = null;\n\t\t\t\t\t\t\t\tcomma = true;\n\t\t\t\t\t\t\tcase ','.code:\n\t\t\t\t\t\t\t\tif (comma) comma = false else invalidChar();\n\t\t\t\t\t\t\tcase '\"'.code:\n\t\t\t\t\t\t\t\tif (field != null || comma) invalidChar();\n\t\t\t\t\t\t\t\tfield = parseString();\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tinvalidChar();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tcase '['.code:\n\t\t\t\t\tvar arr = [], comma:Null<Bool> = null;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tvar c = nextChar();\n\t\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\t\tcase ' '.code, '\\r'.code, '\\n'.code, '\\t'.code:\n\t\t\t\t\t\t\t// loop\n\t\t\t\t\t\t\tcase ']'.code:\n\t\t\t\t\t\t\t\tif (comma == false) invalidChar();\n\t\t\t\t\t\t\t\treturn arr;\n\t\t\t\t\t\t\tcase ','.code:\n\t\t\t\t\t\t\t\tif (comma) comma = false else invalidChar();\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tif (comma) invalidChar();\n\t\t\t\t\t\t\t\tpos--;\n\t\t\t\t\t\t\t\tarr.push(parseRec());\n\t\t\t\t\t\t\t\tcomma = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tcase 't'.code:\n\t\t\t\t\tvar save = pos;\n\t\t\t\t\tif (nextChar() != 'r'.code || nextChar() != 'u'.code || nextChar() != 'e'.code) {\n\t\t\t\t\t\tpos = save;\n\t\t\t\t\t\tinvalidChar();\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\tcase 'f'.code:\n\t\t\t\t\tvar save = pos;\n\t\t\t\t\tif (nextChar() != 'a'.code || nextChar() != 'l'.code || nextChar() != 's'.code || nextChar() != 'e'.code) {\n\t\t\t\t\t\tpos = save;\n\t\t\t\t\t\tinvalidChar();\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\tcase 'n'.code:\n\t\t\t\t\tvar save = pos;\n\t\t\t\t\tif (nextChar() != 'u'.code || nextChar() != 'l'.code || nextChar() != 'l'.code) {\n\t\t\t\t\t\tpos = save;\n\t\t\t\t\t\tinvalidChar();\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\tcase '\"'.code:\n\t\t\t\t\treturn parseString();\n\t\t\t\tcase '0'.code, '1'.code, '2'.code, '3'.code, '4'.code, '5'.code, '6'.code, '7'.code, '8'.code, '9'.code, '-'.code:\n\t\t\t\t\treturn parseNumber(c);\n\t\t\t\tdefault:\n\t\t\t\t\tinvalidChar();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString() {\n\t\tvar start = pos;\n\t\tvar buf:StringBuf = null;\n\t\t#if target.unicode\n\t\tvar prev = -1;\n\t\tinline function cancelSurrogate() {\n\t\t\t// invalid high surrogate (not followed by low surrogate)\n\t\t\tbuf.addChar(0xFFFD);\n\t\t\tprev = -1;\n\t\t}\n\t\t#end\n\t\twhile (true) {\n\t\t\tvar c = nextChar();\n\t\t\tif (c == '\"'.code)\n\t\t\t\tbreak;\n\t\t\tif (c == '\\\\'.code) {\n\t\t\t\tif (buf == null) {\n\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t}\n\t\t\t\tbuf.addSub(str, start, pos - start - 1);\n\t\t\t\tc = nextChar();\n\t\t\t\t#if target.unicode\n\t\t\t\tif (c != \"u\".code && prev != -1)\n\t\t\t\t\tcancelSurrogate();\n\t\t\t\t#end\n\t\t\t\tswitch (c) {\n\t\t\t\t\tcase \"r\".code:\n\t\t\t\t\t\tbuf.addChar(\"\\r\".code);\n\t\t\t\t\tcase \"n\".code:\n\t\t\t\t\t\tbuf.addChar(\"\\n\".code);\n\t\t\t\t\tcase \"t\".code:\n\t\t\t\t\t\tbuf.addChar(\"\\t\".code);\n\t\t\t\t\tcase \"b\".code:\n\t\t\t\t\t\tbuf.addChar(8);\n\t\t\t\t\tcase \"f\".code:\n\t\t\t\t\t\tbuf.addChar(12);\n\t\t\t\t\tcase \"/\".code, '\\\\'.code, '\"'.code:\n\t\t\t\t\t\tbuf.addChar(c);\n\t\t\t\t\tcase 'u'.code:\n\t\t\t\t\t\tvar uc:Int = Std.parseInt(\"0x\" + str.substr(pos, 4));\n\t\t\t\t\t\tpos += 4;\n\t\t\t\t\t\t#if !target.unicode\n\t\t\t\t\t\tif (uc <= 0x7F)\n\t\t\t\t\t\t\tbuf.addChar(uc);\n\t\t\t\t\t\telse if (uc <= 0x7FF) {\n\t\t\t\t\t\t\tbuf.addChar(0xC0 | (uc >> 6));\n\t\t\t\t\t\t\tbuf.addChar(0x80 | (uc & 63));\n\t\t\t\t\t\t} else if (uc <= 0xFFFF) {\n\t\t\t\t\t\t\tbuf.addChar(0xE0 | (uc >> 12));\n\t\t\t\t\t\t\tbuf.addChar(0x80 | ((uc >> 6) & 63));\n\t\t\t\t\t\t\tbuf.addChar(0x80 | (uc & 63));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuf.addChar(0xF0 | (uc >> 18));\n\t\t\t\t\t\t\tbuf.addChar(0x80 | ((uc >> 12) & 63));\n\t\t\t\t\t\t\tbuf.addChar(0x80 | ((uc >> 6) & 63));\n\t\t\t\t\t\t\tbuf.addChar(0x80 | (uc & 63));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t#else\n\t\t\t\t\t\tif (prev != -1) {\n\t\t\t\t\t\t\tif (uc < 0xDC00 || uc > 0xDFFF)\n\t\t\t\t\t\t\t\tcancelSurrogate();\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tbuf.addChar(((prev - 0xD800) << 10) + (uc - 0xDC00) + 0x10000);\n\t\t\t\t\t\t\t\tprev = -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (uc >= 0xD800 && uc <= 0xDBFF)\n\t\t\t\t\t\t\tprev = uc;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tbuf.addChar(uc);\n\t\t\t\t\t\t#end\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow \"Invalid escape sequence \\\\\" + String.fromCharCode(c) + \" at position \" + (pos - 1);\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t}\n\t\t\t#if !(target.unicode)\n\t\t\t// ensure utf8 chars are not cut\n\t\t\telse if (c >= 0x80) {\n\t\t\t\tpos++;\n\t\t\t\tif (c >= 0xFC)\n\t\t\t\t\tpos += 4;\n\t\t\t\telse if (c >= 0xF8)\n\t\t\t\t\tpos += 3;\n\t\t\t\telse if (c >= 0xF0)\n\t\t\t\t\tpos += 2;\n\t\t\t\telse if (c >= 0xE0)\n\t\t\t\t\tpos++;\n\t\t\t}\n\t\t\t#end\n\t\telse if (StringTools.isEof(c))\n\t\t\tthrow \"Unclosed string\";\n\t\t}\n\t\t#if target.unicode\n\t\tif (prev != -1)\n\t\t\tcancelSurrogate();\n\t\t#end\n\t\tif (buf == null) {\n\t\t\treturn str.substr(start, pos - start - 1);\n\t\t} else {\n\t\t\tbuf.addSub(str, start, pos - start - 1);\n\t\t\treturn buf.toString();\n\t\t}\n\t}\n\n\tinline function parseNumber(c:Int):Dynamic {\n\t\tvar start = pos - 1;\n\t\tvar minus = c == '-'.code, digit = !minus, zero = c == '0'.code;\n\t\tvar point = false, e = false, pm = false, end = false;\n\t\twhile (true) {\n\t\t\tc = nextChar();\n\t\t\tswitch (c) {\n\t\t\t\tcase '0'.code:\n\t\t\t\t\tif (zero && !point)\n\t\t\t\t\t\tinvalidNumber(start);\n\t\t\t\t\tif (minus) {\n\t\t\t\t\t\tminus = false;\n\t\t\t\t\t\tzero = true;\n\t\t\t\t\t}\n\t\t\t\t\tdigit = true;\n\t\t\t\tcase '1'.code, '2'.code, '3'.code, '4'.code, '5'.code, '6'.code, '7'.code, '8'.code, '9'.code:\n\t\t\t\t\tif (zero && !point)\n\t\t\t\t\t\tinvalidNumber(start);\n\t\t\t\t\tif (minus)\n\t\t\t\t\t\tminus = false;\n\t\t\t\t\tdigit = true;\n\t\t\t\t\tzero = false;\n\t\t\t\tcase '.'.code:\n\t\t\t\t\tif (minus || point || e)\n\t\t\t\t\t\tinvalidNumber(start);\n\t\t\t\t\tdigit = false;\n\t\t\t\t\tpoint = true;\n\t\t\t\tcase 'e'.code, 'E'.code:\n\t\t\t\t\tif (minus || zero || e)\n\t\t\t\t\t\tinvalidNumber(start);\n\t\t\t\t\tdigit = false;\n\t\t\t\t\te = true;\n\t\t\t\tcase '+'.code, '-'.code:\n\t\t\t\t\tif (!e || pm)\n\t\t\t\t\t\tinvalidNumber(start);\n\t\t\t\t\tdigit = false;\n\t\t\t\t\tpm = true;\n\t\t\t\tdefault:\n\t\t\t\t\tif (!digit)\n\t\t\t\t\t\tinvalidNumber(start);\n\t\t\t\t\tpos--;\n\t\t\t\t\tend = true;\n\t\t\t}\n\t\t\tif (end)\n\t\t\t\tbreak;\n\t\t}\n\n\t\tvar f = Std.parseFloat(str.substr(start, pos - start));\n\t\tvar i = Std.int(f);\n\t\treturn if (i == f) i else f;\n\t}\n\n\tinline function nextChar() {\n\t\treturn StringTools.fastCodeAt(str, pos++);\n\t}\n\n\tfunction invalidChar() {\n\t\tpos--; // rewind\n\t\tthrow \"Invalid char \" + StringTools.fastCodeAt(str, pos) + \" at position \" + pos;\n\t}\n\n\tfunction invalidNumber(start:Int) {\n\t\tthrow \"Invalid number at position \" + start + \": \" + str.substr(start, pos - start);\n\t}\n}\n"]}