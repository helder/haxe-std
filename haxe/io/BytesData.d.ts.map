{"sourceRoot":"","names":[],"mappings":";AAqCA,wBCZO","version":3,"file":"BytesData.d.ts.map","sources":["../../../../../../../haxe/versions/4.0.3/std/haxe/io/BytesData.hx","../../../../../../../haxe/versions/4.0.3/std/js/lib/ArrayBuffer.hx"],"sourcesContent":["/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.io;\n\n#if neko\ntypedef BytesData = neko.NativeString;\n#elseif flash\ntypedef BytesData = flash.utils.ByteArray;\n#elseif cpp\ntypedef BytesData = Array<cpp.UInt8>;\n#elseif java\ntypedef BytesData = java.NativeArray<java.StdTypes.Int8>;\n#elseif cs\ntypedef BytesData = cs.NativeArray<cs.StdTypes.UInt8>;\n#elseif python\ntypedef BytesData = python.Bytearray;\n#elseif js\ntypedef BytesData = js.lib.ArrayBuffer;\n#elseif hl\nclass BytesDataImpl {\n\tpublic var bytes:hl.Bytes;\n\tpublic var length:Int;\n\n\tpublic function new(b, length) {\n\t\tthis.bytes = b;\n\t\tthis.length = length;\n\t}\n}\n\n@:forward(bytes, length)\nabstract BytesDataAbstract(BytesDataImpl) {\n\tpublic inline function new(b, length) {\n\t\tthis = new BytesDataImpl(b, length);\n\t}\n\n\t@:arrayAccess inline function get(i:Int)\n\t\treturn this.bytes[i];\n\n\t@:arrayAccess inline function set(i:Int, v:Int)\n\t\treturn this.bytes[i] = v;\n\n\t@:to inline function toBytes():hl.Bytes {\n\t\treturn this == null ? null : this.bytes;\n\t}\n}\n\ntypedef BytesData = BytesDataAbstract;\n#else\ntypedef BytesData = Array<Int>;\n#end\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.lib;\n\n@:native(\"ArrayBuffer\")\nextern class ArrayBuffer {\n\tstatic function isView(value:Dynamic):Bool;\n\n\tfinal byteLength:Int;\n\n\t/** @throws DOMError */\n\tfunction new(length:Int):Void;\n\n\tfunction slice(begin:Int, ?end:Int):ArrayBuffer;\n}\n\n#if (js_es <= 5)\n@:ifFeature('js.lib.ArrayBuffer.slice')\nprivate class ArrayBufferCompat {\n\tstatic function sliceImpl(begin, ?end) {\n\t\tvar u = new js.lib.Uint8Array(js.Lib.nativeThis, begin, end == null ? null : (end - begin));\n\t\tvar resultArray = new js.lib.Uint8Array(u.byteLength);\n\t\tresultArray.set(u);\n\t\treturn resultArray.buffer;\n\t}\n\n\tstatic function __init__():Void\n\t\tuntyped {\n\t\t\t// IE10 ArrayBuffer.slice polyfill\n\t\t\tif (__js__(\"ArrayBuffer\").prototype.slice == null)\n\t\t\t\t__js__(\"ArrayBuffer\").prototype.slice = sliceImpl;\n\t\t}\n}\n#end\n"]}