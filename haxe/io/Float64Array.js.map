{"sourceRoot":"","names":[],"mappings":"QA8BA;QCzBA;;ACsBA;;;CAGC;;;CACA;;;CAEA;cACQ,iBAAqB,UAD7B;;;CAIA,yBACC;EAAO;;CAGR,uBACC;EAAO,OAAyB;;CAGnB,yBACb;EAAO,aAAK;;CAGC,gCACb;EAAO,aAAK,SAAS;;CAGtB,wCACC;EAAO,OAAS,eAAc,OAAO,WAAU,QAAO,eAAc,QAAQ;;CAG7E,iDACC;EAAO,OAAS,eAAc,OAAO;;CAGtC,sBACC;EAAO;;CAGR,mBACC;EAAO,OAAK;;CAGb,0BAA2D,kBAA6B,CACvF;KAAI,WAAU,MACb;YAAS,WAAW;IACrB;KAAI,OAAM,KAAK,SAAS,KAAK,MAAM,SAAS,UAC3C;0BAAM;IACP;KAAI,QAAO,KAAK,UAAU,UACzB;GAAO,OAAS,iBAAqB;IAC9B;+BAAiB,UAAzB;UAAQ,MACR,AAAY;aAAI;mBAAhB;QAAK,CAAO,KAAI,KAAhB,CAAY;kBACX;KAAE,OAAO,EAAE,MAAM;IAClB;EAAO;;CAGR,kCAAoE,kBAA6B,CAChG;KAAI,WAAU,MACb;YAAS,AAAC,eAAe,WAAY;IACtC;EAAO,OAAS,iBAAqB,qBAAiB,SAAS;;;;;;;;;;;AAzDhE,uCAA6C","version":3,"file":"Float64Array.js.map","sources":["../../../../../../../haxe/versions/4.1.2/std/haxe/io/Error.hx","../../../../../../../haxe/versions/4.1.2/std/js/_std/haxe/Exception.hx","../../../../../../../haxe/versions/4.1.2/std/js/_std/haxe/io/Float64Array.hx"],"sourcesContent":["/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.io;\n\n/**\n\tThe possible IO errors that can occur\n**/\n#if eval\n@:keep\n#end\nenum Error {\n\t/** The IO is set into nonblocking mode and some data cannot be read or written **/\n\tBlocked;\n\n\t/** An integer value is outside its allowed range **/\n\tOverflow;\n\n\t/** An operation on Bytes is outside of its valid range **/\n\tOutsideBounds;\n\n\t/** Other errors **/\n\tCustom(e:Dynamic);\n}\n","package haxe;\n\nimport js.lib.Error;\n\n@:coreApi\nclass Exception extends NativeException {\n\tpublic var message(get,never):String;\n\tpublic var stack(get,never):CallStack;\n\tpublic var previous(get,never):Null<Exception>;\n\tpublic var native(get,never):Any;\n\n\t@:ifFeature(\"haxe.Exception.get_stack\")\n\t@:noCompletion var __skipStack:Int;\n\t@:noCompletion var __exceptionStack(get,set):Null<CallStack>;\n\t@:noCompletion var __nativeException:Any;\n\t@:noCompletion var __previousException:Null<Exception>;\n\n\tstatic function caught(value:Any):Exception {\n\t\tif(Std.isOfType(value, Exception)) {\n\t\t\treturn value;\n\t\t} else if(Std.isOfType(value, Error)) {\n\t\t\treturn new Exception((cast value:Error).message, null, value);\n\t\t} else {\n\t\t\treturn new ValueException(value, null, value);\n\t\t}\n\t}\n\n\tstatic function thrown(value:Any):Any {\n\t\tif(Std.isOfType(value, Exception)) {\n\t\t\treturn (value:Exception).native;\n\t\t} else if(Std.isOfType(value, Error)) {\n\t\t\treturn value;\n\t\t} else {\n\t\t\tvar e = new ValueException(value);\n\t\t\tuntyped __feature__(\"haxe.Exception.get_stack\", e.__shiftStack());\n\t\t\treturn e;\n\t\t}\n\t}\n\n\tpublic function new(message:String, ?previous:Exception, ?native:Any) {\n\t\tsuper(message);\n\t\t(cast this).message = message;\n\t\t__previousException = previous;\n\t\t__nativeException = native != null ? native : this;\n\t\tuntyped __feature__('haxe.Exception.stack', {\n\t\t\t__skipStack = 0;\n\t\t\tvar old = js.Syntax.code('Error.prepareStackTrace');\n\t\t\tjs.Syntax.code('Error.prepareStackTrace = function(e) { return e.stack; }');\n\t\t\tif(Std.isOfType(native, Error)) {\n\t\t\t\t(cast this).stack = native.stack;\n\t\t\t} else {\n\t\t\t\tvar e:Error = null;\n\t\t\t\tif ((cast Error).captureStackTrace) {\n\t\t\t\t\t(cast Error).captureStackTrace(this, Exception);\n\t\t\t\t\te = cast this;\n\t\t\t\t} else {\n\t\t\t\t\te = new Error();\n\t\t\t\t\t//Internet Explorer provides call stack only if error was thrown\n\t\t\t\t\tif(js.Syntax.typeof(e.stack) == \"undefined\") {\n\t\t\t\t\t\tjs.Syntax.code('try { throw {0}; } catch(_) {}', e);\n\t\t\t\t\t\t__skipStack++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t(cast this).stack = e.stack;\n\t\t\t}\n\t\t\tjs.Syntax.code('Error.prepareStackTrace = {0}', old);\n\t\t});\n\t}\n\n\tfunction unwrap():Any {\n\t\treturn __nativeException;\n\t}\n\n\tpublic function toString():String {\n\t\treturn message;\n\t}\n\n\tpublic function details():String {\n\t\treturn inline CallStack.exceptionToString(this);\n\t}\n\n\t@:noCompletion\n\t@:ifFeature(\"haxe.Exception.get_stack\")\n\tinline function __shiftStack():Void {\n\t\t__skipStack++;\n\t}\n\n\tfunction get_message():String {\n\t\treturn (cast this:Error).message;\n\t}\n\n\tfunction get_previous():Null<Exception> {\n\t\treturn __previousException;\n\t}\n\n\tfinal function get_native():Any {\n\t\treturn __nativeException;\n\t}\n\n\tfunction get_stack():CallStack {\n\t\treturn switch __exceptionStack {\n\t\t\tcase null:\n\t\t\t\t__exceptionStack = NativeStackTrace.toHaxe(NativeStackTrace.normalize((cast this).stack), __skipStack);\n\t\t\tcase s: s;\n\t\t}\n\t}\n\n\t@:noCompletion\n\tfunction setProperty(name:String, value:Any):Void {\n\t\ttry {\n\t\t\tjs.lib.Object.defineProperty(this, name, {value:value});\n\t\t} catch(e:Exception) {\n\t\t\tjs.Syntax.code('{0}[{1}] = {2}', this, name, value);\n\t\t}\n\t}\n\n\t@:noCompletion\n\tinline function get___exceptionStack():CallStack {\n\t\treturn (cast this).__exceptionStack;\n\t}\n\n\t@:noCompletion\n\tinline function set___exceptionStack(value:CallStack):CallStack {\n\t\tsetProperty('__exceptionStack', value);\n\t\treturn value;\n\t}\n\n\t@:noCompletion\n\tinline function get___skipStack():Int {\n\t\treturn (cast this).__skipStack;\n\t}\n\n\t@:noCompletion\n\tinline function set___skipStack(value:Int):Int {\n\t\tsetProperty('__skipStack', value);\n\t\treturn value;\n\t}\n\n\t@:noCompletion\n\tinline function get___nativeException():Any {\n\t\treturn (cast this).__nativeException;\n\t}\n\n\t@:noCompletion\n\tinline function set___nativeException(value:Any):Any {\n\t\tsetProperty('__nativeException', value);\n\t\treturn value;\n\t}\n\n\t@:noCompletion\n\tinline function get___previousException():Null<Exception> {\n\t\treturn (cast this).__previousException;\n\t}\n\n\t@:noCompletion\n\tinline function set___previousException(value:Null<Exception>):Null<Exception> {\n\t\tsetProperty('__previousException', value);\n\t\treturn value;\n\t}\n}\n\n@:dox(hide)\n@:noCompletion\n@:native('Error')\nprivate extern class NativeException {\n\t// private var message:String; //redefined in haxe.Exception\n\t// private var stack(default, null):String; //redefined in haxe.Exception\n\n\tfunction new(?message:String);\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.io;\n\ntypedef Float64ArrayData = js.lib.Float64Array;\n\n@:coreApi\nabstract Float64Array(Float64ArrayData) {\n\tpublic static inline var BYTES_PER_ELEMENT = 8;\n\n\tpublic var length(get, never):Int;\n\tpublic var view(get, never):ArrayBufferView;\n\n\tpublic inline function new(elements:Int):Void {\n\t\tthis = new Float64ArrayData(elements);\n\t}\n\n\tinline function get_length():Int {\n\t\treturn this.length;\n\t}\n\n\tpublic inline function get_view():ArrayBufferView {\n\t\treturn ArrayBufferView.fromData(this);\n\t}\n\n\t@:arrayAccess public inline function get(index:Int):Float {\n\t\treturn this[index];\n\t}\n\n\t@:arrayAccess public inline function set(index:Int, value:Float):Float {\n\t\treturn this[index] = value;\n\t}\n\n\tpublic inline function sub(begin:Int, ?length:Int):Float64Array {\n\t\treturn fromData(this.subarray(begin, length == null ? this.length : begin + length));\n\t}\n\n\tpublic inline function subarray(?begin:Int, ?end:Int):Float64Array {\n\t\treturn fromData(this.subarray(begin, end));\n\t}\n\n\tpublic inline function getData():Float64ArrayData {\n\t\treturn this;\n\t}\n\n\tpublic static inline function fromData(d:Float64ArrayData):Float64Array {\n\t\treturn cast d;\n\t}\n\n\tpublic static function fromArray(a:Array<Float>, pos:Int = 0, ?length:Int):Float64Array {\n\t\tif (length == null)\n\t\t\tlength = a.length - pos;\n\t\tif (pos < 0 || length < 0 || pos + length > a.length)\n\t\t\tthrow Error.OutsideBounds;\n\t\tif (pos == 0 && length == a.length)\n\t\t\treturn fromData(new Float64ArrayData(a));\n\t\tvar i = new Float64Array(a.length);\n\t\tfor (idx in 0...length)\n\t\t\ti[idx] = a[idx + pos];\n\t\treturn i;\n\t}\n\n\tpublic static function fromBytes(bytes:haxe.io.Bytes, bytePos:Int = 0, ?length:Int):Float64Array {\n\t\tif (length == null)\n\t\t\tlength = (bytes.length - bytePos) >> 3;\n\t\treturn fromData(new Float64ArrayData(bytes.getData(), bytePos, length));\n\t}\n}\n"]}