{"sourceRoot":"","names":[],"mappings":"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","version":3,"file":"Template.js.map","sources":["../../../../../../haxe/versions/4.1.5/std/haxe/iterators/ArrayIterator.hx","../../../../../../haxe/versions/4.1.5/std/haxe/ds/List.hx","../../../../../../haxe/versions/4.1.5/std/js/_std/haxe/NativeStackTrace.hx","../../../../../../haxe/versions/4.1.5/std/js/_std/haxe/Exception.hx","../../../../../../haxe/haxe_libraries/genes/0.3.2/github/c0832e2c0971599e5139e57795981c7a450426d6/src/genes/Register.hx","../../../../../../haxe/versions/4.1.5/std/StringBuf.hx","../../../../../../haxe/versions/4.1.5/std/js/_std/Std.hx","../../../../../../haxe/versions/4.1.5/std/js/_std/Reflect.hx","../../../../../../haxe/versions/4.1.5/std/js/_std/HxOverrides.hx","../../../../../../haxe/versions/4.1.5/std/js/_std/EReg.hx","../../../../../../haxe/versions/4.1.5/std/haxe/Template.hx"],"sourcesContent":["/*\n * Copyright (C)2005-2018 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.iterators;\n\n/**\n\tThis iterator is used only when `Array<T>` is passed to `Iterable<T>`\n**/\nclass ArrayIterator<T> {\n\tfinal array:Array<T>;\n\tvar current:Int = 0;\n\n\t/**\n\t\tCreate a new `ArrayIterator`.\n\t**/\n\t#if !hl inline #end\n\tpublic function new(array:Array<T>) {\n\t\tthis.array = array;\n\t}\n\n\t/**\n\t\tSee `Iterator.hasNext`\n\t**/\n\t#if !hl inline #end\n\tpublic function hasNext() {\n\t\treturn current < array.length;\n\t}\n\n\t/**\n\t\tSee `Iterator.next`\n\t**/\n\t#if !hl inline #end\n\tpublic function next() {\n\t\treturn array[current++];\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n/**\n\tA linked-list of elements. The list is composed of element container objects\n\tthat are chained together. It is optimized so that adding or removing an\n\telement does not imply copying the whole list content every time.\n\n\t@see https://haxe.org/manual/std-List.html\n**/\nclass List<T> {\n\tprivate var h:ListNode<T>;\n\tprivate var q:ListNode<T>;\n\n\t/**\n\t\tThe length of `this` List.\n\t**/\n\tpublic var length(default, null):Int;\n\n\t/**\n\t\tCreates a new empty list.\n\t**/\n\tpublic function new() {\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tAdds element `item` at the end of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function add(item:T) {\n\t\tvar x = ListNode.create(item, null);\n\t\tif (h == null)\n\t\t\th = x;\n\t\telse\n\t\t\tq.next = x;\n\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tAdds element `item` at the beginning of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function push(item:T) {\n\t\tvar x = ListNode.create(item, h);\n\t\th = x;\n\t\tif (q == null)\n\t\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function first():Null<T> {\n\t\treturn if (h == null) null else h.item;\n\t}\n\n\t/**\n\t\tReturns the last element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function last():Null<T> {\n\t\treturn if (q == null) null else q.item;\n\t}\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThe element is removed from `this` List.\n\t**/\n\tpublic function pop():Null<T> {\n\t\tif (h == null)\n\t\t\treturn null;\n\t\tvar x = h.item;\n\t\th = h.next;\n\t\tif (h == null)\n\t\t\tq = null;\n\t\tlength--;\n\t\treturn x;\n\t}\n\n\t/**\n\t\tTells if `this` List is empty.\n\t**/\n\tpublic function isEmpty():Bool {\n\t\treturn (h == null);\n\t}\n\n\t/**\n\t\tEmpties `this` List.\n\n\t\tThis function does not traverse the elements, but simply sets the\n\t\tinternal references to null and `this.length` to 0.\n\t**/\n\tpublic function clear():Void {\n\t\th = null;\n\t\tq = null;\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tRemoves the first occurrence of `v` in `this` List.\n\n\t\tIf `v` is found by checking standard equality, it is removed from `this`\n\t\tList and the function returns true.\n\n\t\tOtherwise, false is returned.\n\t**/\n\tpublic function remove(v:T):Bool {\n\t\tvar prev:ListNode<T> = null;\n\t\tvar l = h;\n\t\twhile (l != null) {\n\t\t\tif (l.item == v) {\n\t\t\t\tif (prev == null)\n\t\t\t\t\th = l.next;\n\t\t\t\telse\n\t\t\t\t\tprev.next = l.next;\n\t\t\t\tif (q == l)\n\t\t\t\t\tq = prev;\n\t\t\t\tlength--;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tprev = l;\n\t\t\tl = l.next;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tReturns an iterator on the elements of the list.\n\t**/\n\tpublic inline function iterator():ListIterator<T> {\n\t\treturn new ListIterator<T>(h);\n\t}\n\n\t/**\n\t\tReturns an iterator of the List indices and values.\n\t**/\n\t@:pure @:runtime public inline function keyValueIterator():ListKeyValueIterator<T> {\n\t\treturn new ListKeyValueIterator(h);\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List.\n\n\t\tThe result is enclosed in { } with the individual elements being\n\t\tseparated by a comma.\n\t**/\n\tpublic function toString() {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\ts.add(\"{\");\n\t\twhile (l != null) {\n\t\t\tif (first)\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(\", \");\n\t\t\ts.add(Std.string(l.item));\n\t\t\tl = l.next;\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List, with `sep` separating\n\t\teach element.\n\t**/\n\tpublic function join(sep:String) {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\twhile (l != null) {\n\t\t\tif (first)\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(sep);\n\t\t\ts.add(l.item);\n\t\t\tl = l.next;\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a list filtered with `f`. The returned list will contain all\n\t\telements for which `f(x) == true`.\n\t**/\n\tpublic function filter(f:T->Bool) {\n\t\tvar l2 = new List();\n\t\tvar l = h;\n\t\twhile (l != null) {\n\t\t\tvar v = l.item;\n\t\t\tl = l.next;\n\t\t\tif (f(v))\n\t\t\t\tl2.add(v);\n\t\t}\n\t\treturn l2;\n\t}\n\n\t/**\n\t\tReturns a new list where all elements have been converted by the\n\t\tfunction `f`.\n\t**/\n\tpublic function map<X>(f:T->X):List<X> {\n\t\tvar b = new List();\n\t\tvar l = h;\n\t\twhile (l != null) {\n\t\t\tvar v = l.item;\n\t\t\tl = l.next;\n\t\t\tb.add(f(v));\n\t\t}\n\t\treturn b;\n\t}\n}\n\n#if neko\nprivate extern class ListNode<T> extends neko.NativeArray<Dynamic> {\n\tvar item(get, set):T;\n\tvar next(get, set):ListNode<T>;\n\tprivate inline function get_item():T\n\t\treturn this[0];\n\tprivate inline function set_item(v:T):T\n\t\treturn this[0] = v;\n\tprivate inline function get_next():ListNode<T>\n\t\treturn this[1];\n\tprivate inline function set_next(v:ListNode<T>):ListNode<T>\n\t\treturn this[1] = v;\n\tinline static function create<T>(item:T, next:ListNode<T>):ListNode<T> {\n\t\treturn untyped __dollar__array(item, next);\n\t}\n}\n#else\nprivate class ListNode<T> {\n\tpublic var item:T;\n\tpublic var next:ListNode<T>;\n\n\tpublic function new(item:T, next:ListNode<T>) {\n\t\tthis.item = item;\n\t\tthis.next = next;\n\t}\n\n\textern public inline static function create<T>(item:T, next:ListNode<T>):ListNode<T> {\n\t\treturn new ListNode(item, next);\n\t}\n}\n#end\n\nprivate class ListIterator<T> {\n\tvar head:ListNode<T>;\n\n\tpublic inline function new(head:ListNode<T>) {\n\t\tthis.head = head;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn head != null;\n\t}\n\n\tpublic inline function next():T {\n\t\tvar val = head.item;\n\t\thead = head.next;\n\t\treturn val;\n\t}\n}\n\nprivate class ListKeyValueIterator<T> {\n\tvar idx:Int;\n\tvar head:ListNode<T>;\n\n\tpublic inline function new(head:ListNode<T>) {\n\t\tthis.head = head;\n\t\tthis.idx = 0;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn head != null;\n\t}\n\n\tpublic inline function next():{key:Int, value:T} {\n\t\tvar val = head.item;\n\t\thead = head.next;\n\t\treturn {value: val, key: idx++};\n\t}\n}\n","package haxe;\n\nimport js.Syntax;\nimport js.lib.Error;\nimport haxe.CallStack.StackItem;\n\n// https://v8.dev/docs/stack-trace-api\n@:native(\"Error\")\nprivate extern class V8Error {\n\tstatic var prepareStackTrace:(error:Error, structuredStackTrace:Array<V8CallSite>)->Any;\n}\n\ntypedef V8CallSite = {\n\tfunction getFunctionName():String;\n\tfunction getFileName():String;\n\tfunction getLineNumber():Int;\n\tfunction getColumnNumber():Int;\n}\n\n/**\n\tDo not use manually.\n**/\n@:dox(hide)\n@:noCompletion\n@:allow(haxe.Exception)\nclass NativeStackTrace {\n\tstatic var lastError:Error;\n\n\t// support for source-map-support module\n\t@:noCompletion\n\tpublic static var wrapCallSite:V8CallSite->V8CallSite;\n\n\t@:ifFeature('haxe.NativeStackTrace.exceptionStack')\n\tstatic public inline function saveStack(e:Error):Void {\n\t\tlastError = e;\n\t}\n\n\tstatic public function callStack():Any {\n\t\tvar e:Null<Error> = new Error('');\n\t\tvar stack = tryHaxeStack(e);\n\t\t//Internet Explorer provides call stack only if error was thrown\n\t\tif(Syntax.typeof(stack) == \"undefined\") {\n\t\t\ttry throw e catch(e:Exception) {}\n\t\t\tstack = e.stack;\n\t\t}\n\t\treturn normalize(stack, 2);\n\t}\n\n\tstatic public function exceptionStack():Any {\n\t\treturn normalize(tryHaxeStack(lastError));\n\t}\n\n\tstatic public function toHaxe(s:Null<Any>, skip:Int = 0):Array<StackItem> {\n\t\tif (s == null) {\n\t\t\treturn [];\n\t\t} else if (Syntax.typeof(s) == \"string\") {\n\t\t\t// Return the raw lines in browsers that don't support prepareStackTrace\n\t\t\tvar stack:Array<String> = (s:String).split(\"\\n\");\n\t\t\tif (stack[0] == \"Error\")\n\t\t\t\tstack.shift();\n\t\t\tvar m = [];\n\t\t\tfor (i in 0...stack.length) {\n\t\t\t\tif(skip > i) continue;\n\t\t\t\tvar line = stack[i];\n\t\t\t\tvar matched:Null<Array<String>> = Syntax.code('{0}.match(/^    at ([A-Za-z0-9_. ]+) \\\\(([^)]+):([0-9]+):([0-9]+)\\\\)$/)', line);\n\t\t\t\tif (matched != null) {\n\t\t\t\t\tvar path = matched[1].split(\".\");\n\t\t\t\t\tif(path[0] == \"$hxClasses\") {\n\t\t\t\t\t\tpath.shift();\n\t\t\t\t\t}\n\t\t\t\t\tvar meth = path.pop();\n\t\t\t\t\tvar file = matched[2];\n\t\t\t\t\tvar line = Std.parseInt(matched[3]);\n\t\t\t\t\tvar column = Std.parseInt(matched[4]);\n\t\t\t\t\tm.push(FilePos(meth == \"Anonymous function\" ? LocalFunction() : meth == \"Global code\" ? null : Method(path.join(\".\"), meth), file, line,\n\t\t\t\t\t\tcolumn));\n\t\t\t\t} else {\n\t\t\t\t\tm.push(Module(StringTools.trim(line))); // A little weird, but better than nothing\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn m;\n\t\t} else if(skip > 0 && Syntax.code('Array.isArray({0})', s)) {\n\t\t\treturn (s:Array<StackItem>).slice(skip);\n\t\t} else {\n\t\t\treturn cast s;\n\t\t}\n\t}\n\n\tstatic function tryHaxeStack(e:Null<Error>):Any {\n\t\tif (e == null) {\n\t\t\treturn [];\n\t\t}\n\t\t// https://v8.dev/docs/stack-trace-api\n\t\tvar oldValue = V8Error.prepareStackTrace;\n\t\tV8Error.prepareStackTrace = prepareHxStackTrace;\n\t\tvar stack = e.stack;\n\t\tV8Error.prepareStackTrace = oldValue;\n\t\treturn stack;\n\t}\n\n\tstatic function prepareHxStackTrace(e:Error, callsites:Array<V8CallSite>):Any {\n\t\tvar stack = [];\n\t\tfor (site in callsites) {\n\t\t\tif (wrapCallSite != null)\n\t\t\t\tsite = wrapCallSite(site);\n\t\t\tvar method = null;\n\t\t\tvar fullName = site.getFunctionName();\n\t\t\tif (fullName != null) {\n\t\t\t\tvar idx = fullName.lastIndexOf(\".\");\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tvar className = fullName.substring(0, idx);\n\t\t\t\t\tvar methodName = fullName.substring(idx + 1);\n\t\t\t\t\tmethod = Method(className, methodName);\n\t\t\t\t} else {\n\t\t\t\t\tmethod = Method(null, fullName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar fileName = site.getFileName();\n\t\t\tvar fileAddr = fileName == null ? -1 : fileName.indexOf(\"file:\");\n\t\t\tif (wrapCallSite != null && fileAddr > 0)\n\t\t\t\tfileName = fileName.substring(fileAddr + 6);\n\t\t\tstack.push(FilePos(method, fileName, site.getLineNumber(), site.getColumnNumber()));\n\t\t}\n\t\treturn stack;\n\t}\n\n\tstatic function normalize(stack:Any, skipItems:Int = 0):Any {\n\t\tif(Syntax.code('Array.isArray({0})', stack) && skipItems > 0) {\n\t\t\treturn (stack:Array<StackItem>).slice(skipItems);\n\t\t} else if(Syntax.typeof(stack) == \"string\") {\n\t\t\tswitch (stack:String).substring(0, 6) {\n\t\t\t\tcase 'Error:' | 'Error\\n': skipItems += 1;\n\t\t\t\tcase _:\n\t\t\t}\n\t\t\treturn skipLines(stack, skipItems);\n\t\t} else {\n\t\t\t//nothing we can do\n\t\t\treturn stack;\n\t\t}\n\t}\n\n\tstatic function skipLines(stack:String, skip:Int, pos:Int = 0):String {\n\t\treturn if(skip > 0) {\n\t\t\tpos = stack.indexOf('\\n', pos);\n\t\t\treturn pos < 0 ? '' : skipLines(stack, --skip, pos + 1);\n\t\t} else {\n\t\t\treturn stack.substring(pos);\n\t\t}\n\t}\n}","package haxe;\n\nimport js.lib.Error;\n\n@:coreApi\nclass Exception extends NativeException {\n\tpublic var message(get,never):String;\n\tpublic var stack(get,never):CallStack;\n\tpublic var previous(get,never):Null<Exception>;\n\tpublic var native(get,never):Any;\n\n\t@:ifFeature(\"haxe.Exception.get_stack\")\n\t@:noCompletion var __skipStack:Int;\n\t@:noCompletion var __exceptionStack(get,set):Null<CallStack>;\n\t@:noCompletion var __nativeException:Any;\n\t@:noCompletion var __previousException:Null<Exception>;\n\n\tstatic function caught(value:Any):Exception {\n\t\tif(Std.isOfType(value, Exception)) {\n\t\t\treturn value;\n\t\t} else if(Std.isOfType(value, Error)) {\n\t\t\treturn new Exception((cast value:Error).message, null, value);\n\t\t} else {\n\t\t\treturn new ValueException(value, null, value);\n\t\t}\n\t}\n\n\tstatic function thrown(value:Any):Any {\n\t\tif(Std.isOfType(value, Exception)) {\n\t\t\treturn (value:Exception).native;\n\t\t} else if(Std.isOfType(value, Error)) {\n\t\t\treturn value;\n\t\t} else {\n\t\t\tvar e = new ValueException(value);\n\t\t\tuntyped __feature__(\"haxe.Exception.get_stack\", e.__shiftStack());\n\t\t\treturn e;\n\t\t}\n\t}\n\n\tpublic function new(message:String, ?previous:Exception, ?native:Any) {\n\t\tsuper(message);\n\t\t(cast this).message = message;\n\t\t__previousException = previous;\n\t\t__nativeException = native != null ? native : this;\n\t\tuntyped __feature__('haxe.Exception.stack', {\n\t\t\t__skipStack = 0;\n\t\t\tvar old = js.Syntax.code('Error.prepareStackTrace');\n\t\t\tjs.Syntax.code('Error.prepareStackTrace = function(e) { return e.stack; }');\n\t\t\tif(Std.isOfType(native, Error)) {\n\t\t\t\t(cast this).stack = native.stack;\n\t\t\t} else {\n\t\t\t\tvar e:Error = null;\n\t\t\t\tif ((cast Error).captureStackTrace) {\n\t\t\t\t\t(cast Error).captureStackTrace(this, Exception);\n\t\t\t\t\te = cast this;\n\t\t\t\t} else {\n\t\t\t\t\te = new Error();\n\t\t\t\t\t//Internet Explorer provides call stack only if error was thrown\n\t\t\t\t\tif(js.Syntax.typeof(e.stack) == \"undefined\") {\n\t\t\t\t\t\tjs.Syntax.code('try { throw {0}; } catch(_) {}', e);\n\t\t\t\t\t\t__skipStack++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t(cast this).stack = e.stack;\n\t\t\t}\n\t\t\tjs.Syntax.code('Error.prepareStackTrace = {0}', old);\n\t\t});\n\t}\n\n\tfunction unwrap():Any {\n\t\treturn __nativeException;\n\t}\n\n\tpublic function toString():String {\n\t\treturn message;\n\t}\n\n\tpublic function details():String {\n\t\treturn inline CallStack.exceptionToString(this);\n\t}\n\n\t@:noCompletion\n\t@:ifFeature(\"haxe.Exception.get_stack\")\n\tinline function __shiftStack():Void {\n\t\t__skipStack++;\n\t}\n\n\tfunction get_message():String {\n\t\treturn (cast this:Error).message;\n\t}\n\n\tfunction get_previous():Null<Exception> {\n\t\treturn __previousException;\n\t}\n\n\tfinal function get_native():Any {\n\t\treturn __nativeException;\n\t}\n\n\t@:ifFeature('haxe.NativeStackTrace.exceptionStack')\n\tfunction get_stack():CallStack {\n\t\treturn switch __exceptionStack {\n\t\t\tcase null:\n\t\t\t\t__exceptionStack = NativeStackTrace.toHaxe(NativeStackTrace.normalize((cast this).stack), __skipStack);\n\t\t\tcase s: s;\n\t\t}\n\t}\n\n\t@:noCompletion\n\tfunction setProperty(name:String, value:Any):Void {\n\t\ttry {\n\t\t\tjs.lib.Object.defineProperty(this, name, {value:value});\n\t\t} catch(e:Exception) {\n\t\t\tjs.Syntax.code('{0}[{1}] = {2}', this, name, value);\n\t\t}\n\t}\n\n\t@:noCompletion\n\tinline function get___exceptionStack():CallStack {\n\t\treturn (cast this).__exceptionStack;\n\t}\n\n\t@:noCompletion\n\tinline function set___exceptionStack(value:CallStack):CallStack {\n\t\tsetProperty('__exceptionStack', value);\n\t\treturn value;\n\t}\n\n\t@:noCompletion\n\tinline function get___skipStack():Int {\n\t\treturn (cast this).__skipStack;\n\t}\n\n\t@:noCompletion\n\tinline function set___skipStack(value:Int):Int {\n\t\tsetProperty('__skipStack', value);\n\t\treturn value;\n\t}\n\n\t@:noCompletion\n\tinline function get___nativeException():Any {\n\t\treturn (cast this).__nativeException;\n\t}\n\n\t@:noCompletion\n\tinline function set___nativeException(value:Any):Any {\n\t\tsetProperty('__nativeException', value);\n\t\treturn value;\n\t}\n\n\t@:noCompletion\n\tinline function get___previousException():Null<Exception> {\n\t\treturn (cast this).__previousException;\n\t}\n\n\t@:noCompletion\n\tinline function set___previousException(value:Null<Exception>):Null<Exception> {\n\t\tsetProperty('__previousException', value);\n\t\treturn value;\n\t}\n}\n\n@:dox(hide)\n@:noCompletion\n@:native('Error')\nprivate extern class NativeException {\n\t// private var message:String; //redefined in haxe.Exception\n\t// private var stack(default, null):String; //redefined in haxe.Exception\n\n\tfunction new(?message:String);\n}\n","package genes;\n\nimport js.lib.Object;\nimport js.Syntax;\n\nclass Register {\n  @:keep @:native(\"$global\")\n  public static final _global = js.Syntax.code('typeof window != \"undefined\" ? window : typeof global != \"undefined\" ? global : typeof self != \"undefined\" ? self : this');\n\n  static final globals = {}\n\n  @:keep public static function global(name) {\n    return untyped globals[name] ? globals[name] : globals[name] = {};\n  }\n\n  @:keep public static function createStatic<T>(obj: {}, name: String,\n      get: () -> T) {\n    var value: T = null;\n    inline function init() {\n      if (get != null) {\n        value = get();\n        get = null;\n      }\n    }\n    Object.defineProperty(obj, name, {\n      enumerable: true,\n      get: () -> {\n        init();\n        return value;\n      },\n      set: v -> {\n        init();\n        value = v;\n      }\n    });\n  }\n\n  @:keep public static function iter<T>(a: Array<T>): Iterator<T> {\n    return untyped if (!Array.isArray(a))\n      js.Syntax.code('a.iterator()')\n    else untyped {\n      cur: 0,\n      arr: a,\n      hasNext: function() {\n        return __this__.cur < __this__.arr.length;\n      },\n      next: function() {\n        return __this__.arr[__this__.cur++];\n      }\n    }\n  }\n\n  @:keep public static function extend(superClass) {\n    Syntax.code('\n      function res() {\n        this.new.apply(this, arguments)\n      }\n      Object.setPrototypeOf(res.prototype, superClass.prototype)\n      return res\n    ');\n  }\n\n  @:keep public static function inherits(resolve, defer = false) {\n    Syntax.code('\n      function res() {\n        if (defer && resolve && res.__init__) res.__init__()\n        this.new.apply(this, arguments)\n      }\n      if (!defer) {\n        if (resolve && resolve.__init__) {\n          defer = true\n          res.__init__ = () => {\n            resolve.__init__()\n            Object.setPrototypeOf(res.prototype, resolve.prototype)\n            res.__init__ = undefined\n          } \n        } else if (resolve) {\n          Object.setPrototypeOf(res.prototype, resolve.prototype)\n        }\n      } else {\n        res.__init__ = () => {\n          const superClass = resolve()\n          if (superClass.__init__) superClass.__init__()\n          Object.setPrototypeOf(res.prototype, superClass.prototype)\n          res.__init__ = undefined\n        } \n      }\n      return res\n    ');\n  }\n\n  static var fid = 0;\n\n  @:keep public static function bind(o: Dynamic, m: Dynamic) {\n    if (m == null)\n      return null;\n    if (m.__id__ == null)\n      m.__id__ = fid++;\n    var f = null;\n    if (o.hx__closures__ == null)\n      o.hx__closures__ = {}\n    else\n      f = o.hx__closures__[m.__id__];\n    if (f == null) {\n      f = m.bind(o);\n      o.hx__closures__[m.__id__] = f;\n    }\n    return f;\n  }\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tA String buffer is an efficient way to build a big string by appending small\n\telements together.\n\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\n\tit can be passed as argument to functions which modify it by appending more\n\tvalues.\n**/\nclass StringBuf {\n\tvar b:String;\n\n\t/**\n\t\tThe length of `this` StringBuf in characters.\n\t**/\n\tpublic var length(get, never):Int;\n\n\t/**\n\t\tCreates a new StringBuf instance.\n\n\t\tThis may involve initialization of the internal buffer.\n\t**/\n\tpublic inline function new() {\n\t\tb = \"\";\n\t}\n\n\tinline function get_length():Int {\n\t\treturn b.length;\n\t}\n\n\t/**\n\t\tAppends the representation of `x` to `this` StringBuf.\n\n\t\tThe exact representation of `x` may vary per platform. To get more\n\t\tconsistent behavior, this function should be called with\n\t\tStd.string(x).\n\n\t\tIf `x` is null, the String \"null\" is appended.\n\t**/\n\tpublic inline function add<T>(x:T):Void {\n\t\tb += x;\n\t}\n\n\t/**\n\t\tAppends the character identified by `c` to `this` StringBuf.\n\n\t\tIf `c` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic inline function addChar(c:Int):Void {\n\t\tb += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tAppends a substring of `s` to `this` StringBuf.\n\n\t\tThis function expects `pos` and `len` to describe a valid substring of\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\n\t\t`this.add(s.substr(pos,len))` can be used instead.\n\n\t\tIf `s` or `pos` are null, the result is unspecified.\n\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\n\t\tof `s`.\n\t**/\n\tpublic inline function addSub(s:String, pos:Int, ?len:Int):Void {\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\n\t}\n\n\t/**\n\t\tReturns the content of `this` StringBuf as String.\n\n\t\tThe buffer is not emptied by this operation.\n\t**/\n\tpublic inline function toString():String {\n\t\treturn b;\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport js.Boot;\nimport js.Syntax;\n\n@:keepInit\n@:coreApi class Std {\n\tpublic static inline function is(v:Dynamic, t:Dynamic):Bool {\n\t\treturn isOfType(v, t);\n\t}\n\n\tpublic static inline function isOfType(v:Dynamic, t:Dynamic):Bool {\n\t\treturn @:privateAccess js.Boot.__instanceof(v, t);\n\t}\n\n\tpublic static inline function downcast<T:{}, S:T>(value:T, c:Class<S>):S@:privateAccess {\n\t\treturn if (js.Boot.__downcastCheck(value, c)) cast value else null;\n\t}\n\n\t@:deprecated('Std.instance() is deprecated. Use Std.downcast() instead.')\n\tpublic static inline function instance<T:{}, S:T>(value:T, c:Class<S>):S {\n\t\treturn downcast(value, c);\n\t}\n\n\t@:pure\n\tpublic static function string(s:Dynamic):String {\n\t\treturn @:privateAccess js.Boot.__string_rec(s, \"\");\n\t}\n\n\tpublic static inline function int(x:Float):Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\t@:pure\n\tpublic static function parseInt(x:String):Null<Int> {\n\t\tif(x != null) {\n\t\t\tfor(i in 0...x.length) {\n\t\t\t\tvar c = StringTools.fastCodeAt(x, i);\n\t\t\t\tif(c <= 8 || (c >= 14 && c != ' '.code && c != '-'.code)) {\n\t\t\t\t\tvar nc = StringTools.fastCodeAt(x, i + 1);\n\t\t\t\t\tvar v = js.Lib.parseInt(x, (nc == \"x\".code || nc == \"X\".code) ? 16 : 10);\n\t\t\t\t\treturn Math.isNaN(v) ? null : cast v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static inline function parseFloat(x:String):Float {\n\t\treturn js.Syntax.code(\"parseFloat({0})\", x);\n\t}\n\n\tpublic static function random(x:Int):Int {\n\t\treturn x <= 0 ? 0 : Math.floor(Math.random() * x);\n\t}\n\n\tstatic function __init__():Void\n\t\tuntyped {\n\t\t\t__feature__(\"js.Boot.getClass\", String.prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"String\"] = String, String));\n\t\t\t__feature__(\"js.Boot.isClass\", String.__name__ = __feature__(\"Type.getClassName\", \"String\", true));\n\t\t\t__feature__(\"Type.resolveClass\", $hxClasses[\"Array\"] = Array);\n\t\t\t__feature__(\"js.Boot.isClass\", Array.__name__ = __feature__(\"Type.getClassName\", \"Array\", true));\n\t\t\t__feature__(\"Date.*\", {\n\t\t\t\t__feature__(\"js.Boot.getClass\",\n\t\t\t\t\tjs.Syntax.code('Date').prototype.__class__ = __feature__(\"Type.resolveClass\", $hxClasses[\"Date\"] = js.Syntax.code('Date'), js.Syntax.code('Date')));\n\t\t\t\t__feature__(\"js.Boot.isClass\", js.Syntax.code('Date').__name__ = \"Date\");\n\t\t\t});\n\t\t\t__feature__(\"Int.*\", js.Syntax.code('var Int = { };'));\n\t\t\t__feature__(\"Dynamic.*\", js.Syntax.code('var Dynamic = { };'));\n\t\t\t__feature__(\"Float.*\", js.Syntax.code('var Float = Number'));\n\t\t\t__feature__(\"Bool.*\", js.Syntax.code('var Bool = Boolean'));\n\t\t\t__feature__(\"Class.*\", js.Syntax.code('var Class = { };'));\n\t\t\t__feature__(\"Enum.*\", js.Syntax.code('var Enum = { };'));\n\t\t\t#if (js_es < 5)\n\t\t\t__feature__(\"Array.map\", if (Array.prototype.map == null) Array.prototype.map = function(f) {\n\t\t\t\tvar a = [];\n\t\t\t\tfor (i in 0...__this__.length)\n\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\treturn a;\n\t\t\t});\n\t\t\t__feature__(\"Array.filter\", if (Array.prototype.filter == null) Array.prototype.filter = function(f) {\n\t\t\t\tvar a = [];\n\t\t\t\tfor (i in 0...__this__.length) {\n\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\tif (f(e))\n\t\t\t\t\t\ta.push(e);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t});\n\t\t\t#end\n\t\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\t@:pure\n\tpublic inline static function hasField(o:Dynamic, field:String):Bool {\n\t\treturn js.lib.Object.prototype.hasOwnProperty.call(o, field);\n\t}\n\n\t@:pure\n\tpublic static function field(o:Dynamic, field:String):Dynamic {\n\t\ttry\n\t\t\treturn o[cast field]\n\t\tcatch (e:Dynamic)\n\t\t\treturn null;\n\t}\n\n\tpublic inline static function setField(o:Dynamic, field:String, value:Dynamic):Void {\n\t\to[cast field] = value;\n\t}\n\n\tpublic static function getProperty(o:Dynamic, field:String):Dynamic\n\t\tuntyped {\n\t\t\tvar tmp;\n\t\t\treturn if (o == null) __define_feature__(\"Reflect.getProperty\",\n\t\t\t\tnull) else if (o.__properties__ && (tmp = o.__properties__[\"get_\" + field])) o[tmp]() else o[field];\n\t\t}\n\n\tpublic static function setProperty(o:Dynamic, field:String, value:Dynamic):Void\n\t\tuntyped {\n\t\t\tvar tmp;\n\t\t\tif (o.__properties__ && (tmp = o.__properties__[\"set_\" + field]))\n\t\t\t\to[tmp](value)\n\t\t\telse\n\t\t\t\to[field] = __define_feature__(\"Reflect.setProperty\", value);\n\t\t}\n\n\tpublic inline static function callMethod(o:Dynamic, func:haxe.Constraints.Function, args:Array<Dynamic>):Dynamic {\n\t\treturn (cast func : js.lib.Function).apply(o, args);\n\t}\n\n\tpublic static function fields(o:Dynamic):Array<String> {\n\t\tvar a = [];\n\t\tif (o != null)\n\t\t\tuntyped {\n\t\t\t\tvar hasOwnProperty = js.lib.Object.prototype.hasOwnProperty;\n\t\t\t\tjs.Syntax.code(\"for( var f in o ) {\");\n\t\t\t\tif (f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f))\n\t\t\t\t\ta.push(f);\n\t\t\t\tjs.Syntax.code(\"}\");\n\t\t\t}\n\t\treturn a;\n\t}\n\n\t@:access(js.Boot)\n\tpublic static function isFunction(f:Dynamic):Bool {\n\t\treturn js.Syntax.typeof(f) == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>(a:T, b:T):Int {\n\t\treturn (a == b) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods(f1:Dynamic, f2:Dynamic):Bool {\n\t\tif (f1 == f2)\n\t\t\treturn true;\n\t\tif (!isFunction(f1) || !isFunction(f2))\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\t@:access(js.Boot)\n\tpublic static function isObject(v:Dynamic):Bool {\n\t\tif (v == null)\n\t\t\treturn false;\n\t\tvar t = js.Syntax.typeof(v);\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null))\n\t\t\t|| (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue(v:Dynamic):Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField(o:Dynamic, field:String):Bool {\n\t\tif (!hasField(o, field))\n\t\t\treturn false;\n\t\tjs.Syntax.delete(o, field);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>(o:Null<T>):Null<T> {\n\t\tif (o == null)\n\t\t\treturn null;\n\t\tvar o2:Dynamic = {};\n\t\tfor (f in Reflect.fields(o))\n\t\t\tReflect.setField(o2, f, Reflect.field(o, f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function(f:Array<Dynamic>->Void):Dynamic {})\n\tpublic static function makeVarArgs(f:Array<Dynamic>->Dynamic):Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(js.Syntax.code(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\tstatic function dateStr(date:Date):String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear() + \"-\" + (if (m < 10) \"0\" + m else \"\" + m) + \"-\" + (if (d < 10) \"0\" + d else \"\" + d) + \" \"\n\t\t\t+ (if (h < 10) \"0\" + h else \"\" + h) + \":\" + (if (mi < 10) \"0\" + mi else \"\" + mi) + \":\" + (if (s < 10) \"0\" + s else \"\" + s);\n\t}\n\n\tstatic function strDate(s:String):Date {\n\t\tswitch (s.length) {\n\t\t\tcase 8: // hh:mm:ss\n\t\t\t\tvar k = s.split(\":\");\n\t\t\t\tvar d = js.Syntax.construct(Date);\n\t\t\t\t(cast d)[cast \"setTime\"](0);\n\t\t\t\t(cast d)[cast \"setUTCHours\"](k[0]);\n\t\t\t\t(cast d)[cast \"setUTCMinutes\"](k[1]);\n\t\t\t\t(cast d)[cast \"setUTCSeconds\"](k[2]);\n\t\t\t\treturn d;\n\t\t\tcase 10: // YYYY-MM-DD\n\t\t\t\tvar k = s.split(\"-\");\n\t\t\t\treturn new Date(cast k[0], (cast k[1]) - 1, cast k[2], 0, 0, 0);\n\t\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\t\tvar k = s.split(\" \");\n\t\t\t\tvar y = k[0].split(\"-\");\n\t\t\t\tvar t = k[1].split(\":\");\n\t\t\t\treturn new Date(cast y[0], (cast y[1]) - 1, cast y[2], cast t[0], cast t[1], cast t[2]);\n\t\t\tdefault:\n\t\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\t@:pure\n\tstatic function cca(s:String, index:Int):Null<Int> {\n\t\tvar x = (cast s).charCodeAt(index);\n\t\tif (x != x) // fast isNaN\n\t\t\treturn js.Lib.undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\t@:pure\n\tstatic function substr(s:String, pos:Int, ?len:Int):String {\n\t\tif (len == null) {\n\t\t\tlen = s.length;\n\t\t} else if (len < 0) {\n\t\t\tif (pos == 0)\n\t\t\t\tlen = s.length + len;\n\t\t\telse\n\t\t\t\treturn \"\";\n\t\t}\n\n\t\t#if (js_es < 5)\n\t\tif (pos < 0) {\n\t\t\tpos = s.length + pos;\n\t\t\tif (pos < 0)\n\t\t\t\tpos = 0;\n\t\t}\n\t\t#end\n\n\t\treturn (cast s).substr(pos, len);\n\t}\n\n\t@:pure\n\tstatic function indexOf<T>(a:Array<T>, obj:T, i:Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0)\n\t\t\t\ti = 0;\n\t\t}\n\t\twhile (i < len) {\n\t\t\tif (js.Syntax.strictEq(a[i], obj))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t@:pure\n\tstatic function lastIndexOf<T>(a:Array<T>, obj:T, i:Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0) {\n\t\t\tif (js.Syntax.strictEq(a[i], obj))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>(a:Array<T>, obj:T) {\n\t\tvar i = a.indexOf(obj);\n\t\tif (i == -1)\n\t\t\treturn false;\n\t\ta.splice(i, 1);\n\t\treturn true;\n\t}\n\n\t@:pure\n\tstatic function iter<T>(a:Array<T>):Iterator<T>\n\t\tuntyped {\n\t\t\treturn {\n\t\t\t\tcur: 0,\n\t\t\t\tarr: a,\n\t\t\t\thasNext: function() {\n\t\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t\t},\n\t\t\t\tnext: function() {\n\t\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t@:ifFeature(\"anon_read.keyValueIterator\", \"dynamic_read.keyValueIterator\", \"closure_read.keyValueIterator\")\n\tstatic function keyValueIter<T>( a : Array<T> ) {\n\t\treturn new haxe.iterators.ArrayKeyValueIterator(a);\n\t}\n\n\t@:pure\n\tstatic function now(): Float return js.lib.Date.now();\n\n\tstatic function __init__()\n\t\tuntyped {\n\t\t\t#if (js_es < 5)\n\t\t\t__feature__('HxOverrides.indexOf',\n\t\t\t\tif (Array.prototype.indexOf) js.Syntax.code(\"HxOverrides\").indexOf = function(a, o, i) return Array.prototype.indexOf.call(a, o, i));\n\t\t\t__feature__('HxOverrides.lastIndexOf',\n\t\t\t\tif (Array.prototype.lastIndexOf) js.Syntax.code(\"HxOverrides\").lastIndexOf = function(a, o, i) return Array.prototype.lastIndexOf.call(a, o, i));\n\t\t\t#end\n\n\t\t\t__feature__('HxOverrides.now',\n\t\t\t\tif (js.Syntax.typeof(performance) != 'undefined' && js.Syntax.typeof(performance.now) == 'function') {\n\t\t\t\t\tHxOverrides.now = performance.now.bind(performance);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\tvar r:HaxeRegExp;\n\n\tpublic inline function new(r:String, opt:String):Void {\n\t\tthis.r = new HaxeRegExp(r, opt.split(\"u\").join(\"\")); // 'u' (utf8) depends on page encoding\n\t}\n\n\tpublic function match(s:String):Bool {\n\t\tif (r.global)\n\t\t\tr.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched(n:Int):String {\n\t\treturn if (r.m != null && n >= 0 && n < r.m.length) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft():String {\n\t\tif (r.m == null)\n\t\t\tthrow \"No string matched\";\n\t\treturn r.s.substr(0, r.m.index);\n\t}\n\n\tpublic function matchedRight():String {\n\t\tif (r.m == null)\n\t\t\tthrow \"No string matched\";\n\t\tvar sz = r.m.index + r.m[0].length;\n\t\treturn r.s.substr(sz, r.s.length - sz);\n\t}\n\n\tpublic function matchedPos():{pos:Int, len:Int} {\n\t\tif (r.m == null)\n\t\t\tthrow \"No string matched\";\n\t\treturn {pos: r.m.index, len: r.m[0].length};\n\t}\n\n\tpublic function matchSub(s:String, pos:Int, len:Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match(len < 0 ? s.substr(pos) : s.substr(pos, len));\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split(s:String):Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn replace(s, d).split(d);\n\t}\n\n\tpublic inline function replace(s:String, by:String):String {\n\t\treturn (cast s).replace(r, by);\n\t}\n\n\tpublic function map(s:String, f:EReg->String):String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t} else\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n\n\tpublic static inline function escape(s:String):String {\n\t\treturn (cast s).replace(escapeRe, \"\\\\$&\");\n\t}\n\n\tstatic var escapeRe = new js.lib.RegExp(\"[.*+?^${}()|[\\\\]\\\\\\\\]\", \"g\");\n}\n\n@:native(\"RegExp\")\nprivate extern class HaxeRegExp extends js.lib.RegExp {\n\tvar m:js.lib.RegExp.RegExpMatch;\n\tvar s:String;\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe;\n\nimport haxe.ds.List;\n\nusing StringTools;\n\nprivate enum TemplateExpr {\n\tOpVar(v:String);\n\tOpExpr(expr:Void->Dynamic);\n\tOpIf(expr:Void->Dynamic, eif:TemplateExpr, eelse:TemplateExpr);\n\tOpStr(str:String);\n\tOpBlock(l:List<TemplateExpr>);\n\tOpForeach(expr:Void->Dynamic, loop:TemplateExpr);\n\tOpMacro(name:String, params:List<TemplateExpr>);\n}\n\nprivate typedef Token = {\n\tvar s:Bool;\n\tvar p:String;\n\tvar l:Array<String>;\n}\n\nprivate typedef ExprToken = {\n\tvar s:Bool;\n\tvar p:String;\n}\n\n/**\n\t`Template` provides a basic templating mechanism to replace values in a source\n\tString, and to have some basic logic.\n\n\tA complete documentation of the supported syntax is available at:\n\t<https://haxe.org/manual/std-template.html>\n**/\nclass Template {\n\tstatic var splitter = ~/(::[A-Za-z0-9_ ()&|!+=\\/><*.\"-]+::|\\$\\$([A-Za-z0-9_-]+)\\()/;\n\tstatic var expr_splitter = ~/(\\(|\\)|[ \\r\\n\\t]*\"[^\"]*\"[ \\r\\n\\t]*|[!+=\\/><*.&|-]+)/;\n\tstatic var expr_trim = ~/^[ ]*([^ ]+)[ ]*$/;\n\tstatic var expr_int = ~/^[0-9]+$/;\n\tstatic var expr_float = ~/^([+-]?)(?=\\d|,\\d)\\d*(,\\d*)?([Ee]([+-]?\\d+))?$/;\n\n\t/**\n\t\tGlobal replacements which are used across all `Template` instances. This\n\t\thas lower priority than the context argument of `execute()`.\n\t**/\n\tpublic static var globals:Dynamic = {};\n\n\t// To avoid issues with DCE, keep the array iterator.\n\t@:ifFeature(\"haxe.Template.run\") static var hxKeepArrayIterator = [].iterator();\n\n\tvar expr:TemplateExpr;\n\tvar context:Dynamic;\n\tvar macros:Dynamic;\n\tvar stack:List<Dynamic>;\n\tvar buf:StringBuf;\n\n\t/**\n\t\tCreates a new `Template` instance from `str`.\n\n\t\t`str` is parsed into tokens, which are stored for internal use. This\n\t\tmeans that multiple `execute()` operations on a single `Template` instance\n\t\tare more efficient than one `execute()` operations on multiple `Template`\n\t\tinstances.\n\n\t\tIf `str` is `null`, the result is unspecified.\n\t**/\n\tpublic function new(str:String) {\n\t\tvar tokens = parseTokens(str);\n\t\texpr = parseBlock(tokens);\n\t\tif (!tokens.isEmpty())\n\t\t\tthrow \"Unexpected '\" + tokens.first().s + \"'\";\n\t}\n\n\t/**\n\t\tExecutes `this` `Template`, taking into account `context` for\n\t\treplacements and `macros` for callback functions.\n\n\t\tIf `context` has a field `name`, its value replaces all occurrences of\n\t\t`::name::` in the `Template`. Otherwise `Template.globals` is checked instead,\n\t\tIf `name` is not a field of that either, `::name::` is replaced with `null`.\n\n\t\tIf `macros` has a field `name`, all occurrences of `$$name(args)` are\n\t\treplaced with the result of calling that field. The first argument is\n\t\talways the `resolve()` method, followed by the given arguments.\n\t\tIf `macros` has no such field, the result is unspecified.\n\n\t\tIf `context` is `null`, the result is unspecified. If `macros` is `null`,\n\t\tno macros are used.\n\t**/\n\tpublic function execute(context:Dynamic, ?macros:Dynamic):String {\n\t\tthis.macros = if (macros == null) {} else macros;\n\t\tthis.context = context;\n\t\tstack = new List();\n\t\tbuf = new StringBuf();\n\t\trun(expr);\n\t\treturn buf.toString();\n\t}\n\n\tfunction resolve(v:String):Dynamic {\n\t\tif (v == \"__current__\")\n\t\t\treturn context;\n\t\tvar value = Reflect.getProperty(context, v);\n\t\tif (value != null || Reflect.hasField(context, v))\n\t\t\treturn value;\n\t\tfor (ctx in stack) {\n\t\t\tvalue = Reflect.getProperty(ctx, v);\n\t\t\tif (value != null || Reflect.hasField(ctx, v))\n\t\t\t\treturn value;\n\t\t}\n\t\treturn Reflect.field(globals, v);\n\t}\n\n\tfunction parseTokens(data:String) {\n\t\tvar tokens = new List<Token>();\n\t\twhile (splitter.match(data)) {\n\t\t\tvar p = splitter.matchedPos();\n\t\t\tif (p.pos > 0)\n\t\t\t\ttokens.add({p: data.substr(0, p.pos), s: true, l: null});\n\n\t\t\t// : ?\n\t\t\tif (data.charCodeAt(p.pos) == 58) {\n\t\t\t\ttokens.add({p: data.substr(p.pos + 2, p.len - 4), s: false, l: null});\n\t\t\t\tdata = splitter.matchedRight();\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// macro parse\n\t\t\tvar parp = p.pos + p.len;\n\t\t\tvar npar = 1;\n\t\t\tvar params = [];\n\t\t\tvar part = \"\";\n\t\t\twhile (true) {\n\t\t\t\tvar c = data.charCodeAt(parp);\n\t\t\t\tparp++;\n\t\t\t\tif (c == 40) {\n\t\t\t\t\tnpar++;\n\t\t\t\t} else if (c == 41) {\n\t\t\t\t\tnpar--;\n\t\t\t\t\tif (npar <= 0)\n\t\t\t\t\t\tbreak;\n\t\t\t\t} else if (c == null) {\n\t\t\t\t\tthrow \"Unclosed macro parenthesis\";\n\t\t\t\t}\n\t\t\t\tif (c == 44 && npar == 1) {\n\t\t\t\t\tparams.push(part);\n\t\t\t\t\tpart = \"\";\n\t\t\t\t} else {\n\t\t\t\t\tpart += String.fromCharCode(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\tparams.push(part);\n\t\t\ttokens.add({p: splitter.matched(2), s: false, l: params});\n\t\t\tdata = data.substr(parp, data.length - parp);\n\t\t}\n\t\tif (data.length > 0)\n\t\t\ttokens.add({p: data, s: true, l: null});\n\t\treturn tokens;\n\t}\n\n\tfunction parseBlock(tokens:List<Token>) {\n\t\tvar l = new List();\n\t\twhile (true) {\n\t\t\tvar t = tokens.first();\n\t\t\tif (t == null)\n\t\t\t\tbreak;\n\t\t\tif (!t.s && (t.p == \"end\" || t.p == \"else\" || t.p.substr(0, 7) == \"elseif \"))\n\t\t\t\tbreak;\n\t\t\tl.add(parse(tokens));\n\t\t}\n\t\tif (l.length == 1)\n\t\t\treturn l.first();\n\t\treturn OpBlock(l);\n\t}\n\n\tfunction parse(tokens:List<Token>) {\n\t\tvar t = tokens.pop();\n\t\tvar p = t.p;\n\t\tif (t.s)\n\t\t\treturn OpStr(p);\n\t\t// macro\n\t\tif (t.l != null) {\n\t\t\tvar pe = new List();\n\t\t\tfor (p in t.l)\n\t\t\t\tpe.add(parseBlock(parseTokens(p)));\n\t\t\treturn OpMacro(p, pe);\n\t\t}\n\t\tfunction kwdEnd(kwd:String):Int {\n\t\t\tvar pos = -1;\n\t\t\tvar length = kwd.length;\n\t\t\tif (p.substr(0, length) == kwd) {\n\t\t\t\tpos = length;\n\t\t\t\tfor (c in p.substr(length)) {\n\t\t\t\t\tswitch c {\n\t\t\t\t\t\tcase ' '.code: pos++;\n\t\t\t\t\t\tcase _: break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn pos;\n\t\t}\n\t\t// 'end' , 'else', 'elseif' can't be found here\n\t\tvar pos = kwdEnd(\"if\");\n\t\tif (pos > 0) {\n\t\t\tp = p.substr(pos, p.length - pos);\n\t\t\tvar e = parseExpr(p);\n\t\t\tvar eif = parseBlock(tokens);\n\t\t\tvar t = tokens.first();\n\t\t\tvar eelse;\n\t\t\tif (t == null)\n\t\t\t\tthrow \"Unclosed 'if'\";\n\t\t\tif (t.p == \"end\") {\n\t\t\t\ttokens.pop();\n\t\t\t\teelse = null;\n\t\t\t} else if (t.p == \"else\") {\n\t\t\t\ttokens.pop();\n\t\t\t\teelse = parseBlock(tokens);\n\t\t\t\tt = tokens.pop();\n\t\t\t\tif (t == null || t.p != \"end\")\n\t\t\t\t\tthrow \"Unclosed 'else'\";\n\t\t\t} else { // elseif\n\t\t\t\tt.p = t.p.substr(4, t.p.length - 4);\n\t\t\t\teelse = parse(tokens);\n\t\t\t}\n\t\t\treturn OpIf(e, eif, eelse);\n\t\t}\n\t\tvar pos = kwdEnd(\"foreach\");\n\t\tif (pos >= 0) {\n\t\t\tp = p.substr(pos, p.length - pos);\n\t\t\tvar e = parseExpr(p);\n\t\t\tvar efor = parseBlock(tokens);\n\t\t\tvar t = tokens.pop();\n\t\t\tif (t == null || t.p != \"end\")\n\t\t\t\tthrow \"Unclosed 'foreach'\";\n\t\t\treturn OpForeach(e, efor);\n\t\t}\n\t\tif (expr_splitter.match(p))\n\t\t\treturn OpExpr(parseExpr(p));\n\t\treturn OpVar(p);\n\t}\n\n\tfunction parseExpr(data:String) {\n\t\tvar l = new List<ExprToken>();\n\t\tvar expr = data;\n\t\twhile (expr_splitter.match(data)) {\n\t\t\tvar p = expr_splitter.matchedPos();\n\t\t\tvar k = p.pos + p.len;\n\t\t\tif (p.pos != 0)\n\t\t\t\tl.add({p: data.substr(0, p.pos), s: true});\n\t\t\tvar p = expr_splitter.matched(0);\n\t\t\tl.add({p: p, s: p.indexOf('\"') >= 0});\n\t\t\tdata = expr_splitter.matchedRight();\n\t\t}\n\t\tif (data.length != 0) {\n\t\t\tfor (i => c in data) {\n\t\t\t\tswitch c {\n\t\t\t\t\tcase ' '.code:\n\t\t\t\t\tcase _:\n\t\t\t\t\t\tl.add({p: data.substr(i), s: true});\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar e:Void->Dynamic;\n\t\ttry {\n\t\t\te = makeExpr(l);\n\t\t\tif (!l.isEmpty())\n\t\t\t\tthrow l.first().p;\n\t\t} catch (s:String) {\n\t\t\tthrow \"Unexpected '\" + s + \"' in \" + expr;\n\t\t}\n\t\treturn function() {\n\t\t\ttry {\n\t\t\t\treturn e();\n\t\t\t} catch (exc:Dynamic) {\n\t\t\t\tthrow \"Error : \" + Std.string(exc) + \" in \" + expr;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction makeConst(v:String):Void->Dynamic {\n\t\texpr_trim.match(v);\n\t\tv = expr_trim.matched(1);\n\t\tif (v.charCodeAt(0) == 34) {\n\t\t\tvar str = v.substr(1, v.length - 2);\n\t\t\treturn function() return str;\n\t\t}\n\t\tif (expr_int.match(v)) {\n\t\t\tvar i = Std.parseInt(v);\n\t\t\treturn function() {\n\t\t\t\treturn i;\n\t\t\t};\n\t\t}\n\t\tif (expr_float.match(v)) {\n\t\t\tvar f = Std.parseFloat(v);\n\t\t\treturn function() {\n\t\t\t\treturn f;\n\t\t\t};\n\t\t}\n\t\tvar me = this;\n\t\treturn function() {\n\t\t\treturn me.resolve(v);\n\t\t};\n\t}\n\n\tfunction makePath(e:Void->Dynamic, l:List<ExprToken>) {\n\t\tvar p = l.first();\n\t\tif (p == null || p.p != \".\")\n\t\t\treturn e;\n\t\tl.pop();\n\t\tvar field = l.pop();\n\t\tif (field == null || !field.s)\n\t\t\tthrow field.p;\n\t\tvar f = field.p;\n\t\texpr_trim.match(f);\n\t\tf = expr_trim.matched(1);\n\t\treturn makePath(function() {\n\t\t\treturn Reflect.field(e(), f);\n\t\t}, l);\n\t}\n\n\tfunction makeExpr(l) {\n\t\treturn makePath(makeExpr2(l), l);\n\t}\n\n\tfunction skipSpaces(l:List<ExprToken>) {\n\t\tvar p = l.first();\n\t\twhile (p != null) {\n\t\t\tfor (c in p.p) {\n\t\t\t\tif (c != \" \".code) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tl.pop();\n\t\t\tp = l.first();\n\t\t}\n\t}\n\n\tfunction makeExpr2(l:List<ExprToken>):Void->Dynamic {\n\t\tskipSpaces(l);\n\t\tvar p = l.pop();\n\t\tskipSpaces(l);\n\t\tif (p == null)\n\t\t\tthrow \"<eof>\";\n\t\tif (p.s)\n\t\t\treturn makeConst(p.p);\n\t\tswitch (p.p) {\n\t\t\tcase \"(\":\n\t\t\t\tskipSpaces(l);\n\t\t\t\tvar e1:Dynamic = makeExpr(l);\n\t\t\t\tskipSpaces(l);\n\t\t\t\tvar p = l.pop();\n\t\t\t\tif (p == null || p.s)\n\t\t\t\t\tthrow p;\n\t\t\t\tif (p.p == \")\")\n\t\t\t\t\treturn e1;\n\t\t\t\tskipSpaces(l);\n\t\t\t\tvar e2:Dynamic = makeExpr(l);\n\t\t\t\tskipSpaces(l);\n\t\t\t\tvar p2 = l.pop();\n\t\t\t\tskipSpaces(l);\n\t\t\t\tif (p2 == null || p2.p != \")\")\n\t\t\t\t\tthrow p2;\n\t\t\t\treturn switch (p.p) {\n\t\t\t\t\tcase \"+\": function() {\n\t\t\t\t\t\t\treturn cast e1() + e2();\n\t\t\t\t\t\t};\n\t\t\t\t\tcase \"-\": function() {\n\t\t\t\t\t\t\treturn cast e1() - e2();\n\t\t\t\t\t\t};\n\t\t\t\t\tcase \"*\": function() {\n\t\t\t\t\t\t\treturn cast e1() * e2();\n\t\t\t\t\t\t};\n\t\t\t\t\tcase \"/\": function() {\n\t\t\t\t\t\t\treturn cast e1() / e2();\n\t\t\t\t\t\t};\n\t\t\t\t\tcase \">\": function() {\n\t\t\t\t\t\t\treturn cast e1() > e2();\n\t\t\t\t\t\t};\n\t\t\t\t\tcase \"<\": function() {\n\t\t\t\t\t\t\treturn cast e1() < e2();\n\t\t\t\t\t\t};\n\t\t\t\t\tcase \">=\": function() {\n\t\t\t\t\t\t\treturn cast e1() >= e2();\n\t\t\t\t\t\t};\n\t\t\t\t\tcase \"<=\": function() {\n\t\t\t\t\t\t\treturn cast e1() <= e2();\n\t\t\t\t\t\t};\n\t\t\t\t\tcase \"==\": function() {\n\t\t\t\t\t\t\treturn cast e1() == e2();\n\t\t\t\t\t\t};\n\t\t\t\t\tcase \"!=\": function() {\n\t\t\t\t\t\t\treturn cast e1() != e2();\n\t\t\t\t\t\t};\n\t\t\t\t\tcase \"&&\": function() {\n\t\t\t\t\t\t\treturn cast e1() && e2();\n\t\t\t\t\t\t};\n\t\t\t\t\tcase \"||\": function() {\n\t\t\t\t\t\t\treturn cast e1() || e2();\n\t\t\t\t\t\t};\n\t\t\t\t\tdefault: throw \"Unknown operation \" + p.p;\n\t\t\t\t}\n\t\t\tcase \"!\":\n\t\t\t\tvar e:Void->Dynamic = makeExpr(l);\n\t\t\t\treturn function() {\n\t\t\t\t\tvar v:Dynamic = e();\n\t\t\t\t\treturn (v == null || v == false);\n\t\t\t\t};\n\t\t\tcase \"-\":\n\t\t\t\tvar e = makeExpr(l);\n\t\t\t\treturn function() {\n\t\t\t\t\treturn -e();\n\t\t\t\t};\n\t\t}\n\t\tthrow p.p;\n\t}\n\n\tfunction run(e:TemplateExpr) {\n\t\tswitch (e) {\n\t\t\tcase OpVar(v):\n\t\t\t\tbuf.add(Std.string(resolve(v)));\n\t\t\tcase OpExpr(e):\n\t\t\t\tbuf.add(Std.string(e()));\n\t\t\tcase OpIf(e, eif, eelse):\n\t\t\t\tvar v:Dynamic = e();\n\t\t\t\tif (v == null || v == false) {\n\t\t\t\t\tif (eelse != null)\n\t\t\t\t\t\trun(eelse);\n\t\t\t\t} else\n\t\t\t\t\trun(eif);\n\t\t\tcase OpStr(str):\n\t\t\t\tbuf.add(str);\n\t\t\tcase OpBlock(l):\n\t\t\t\tfor (e in l)\n\t\t\t\t\trun(e);\n\t\t\tcase OpForeach(e, loop):\n\t\t\t\tvar v:Dynamic = e();\n\t\t\t\ttry {\n\t\t\t\t\tvar x:Dynamic = v.iterator();\n\t\t\t\t\tif (x.hasNext == null)\n\t\t\t\t\t\tthrow null;\n\t\t\t\t\tv = x;\n\t\t\t\t} catch (e:Dynamic)\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (v.hasNext == null)\n\t\t\t\t\t\t\tthrow null;\n\t\t\t\t\t} catch (e:Dynamic) {\n\t\t\t\t\t\tthrow \"Cannot iter on \" + v;\n\t\t\t\t\t}\n\t\t\t\tstack.push(context);\n\t\t\t\tvar v:Iterator<Dynamic> = v;\n\t\t\t\tfor (ctx in v) {\n\t\t\t\t\tcontext = ctx;\n\t\t\t\t\trun(loop);\n\t\t\t\t}\n\t\t\t\tcontext = stack.pop();\n\t\t\tcase OpMacro(m, params):\n\t\t\t\tvar v:Dynamic = Reflect.field(macros, m);\n\t\t\t\tvar pl = new Array<Dynamic>();\n\t\t\t\tvar old = buf;\n\t\t\t\tpl.push(resolve);\n\t\t\t\tfor (p in params) {\n\t\t\t\t\tswitch (p) {\n\t\t\t\t\t\tcase OpVar(v): pl.push(resolve(v));\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbuf = new StringBuf();\n\t\t\t\t\t\t\trun(p);\n\t\t\t\t\t\t\tpl.push(buf.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbuf = old;\n\t\t\t\ttry {\n\t\t\t\t\tbuf.add(Std.string(Reflect.callMethod(macros, v, pl)));\n\t\t\t\t} catch (e:Dynamic) {\n\t\t\t\t\tvar plstr = try pl.join(\",\") catch (e:Dynamic) \"???\";\n\t\t\t\t\tvar msg = \"Macro call \" + m + \"(\" + plstr + \") failed (\" + Std.string(e) + \")\";\n\t\t\t\t\t#if neko\n\t\t\t\t\tneko.Lib.rethrow(msg);\n\t\t\t\t\t#else\n\t\t\t\t\tthrow msg;\n\t\t\t\t\t#end\n\t\t\t\t}\n\t\t}\n\t}\n}\n"]}