{"sourceRoot":"","names":[],"mappings":"QA2BA;QCtBA;QCAA;QCgBU;;;;;;;;;;;ACmBV;AAAA;CA8BC,SAAgC,CAC/B;EAAA,WAAW,IACX;EAAA,eAAU,GACV;EAAA,cAAS,GACT;EAAA,mBAAc;;CA1Bf;;;;;;;;;;;CAoCA,uBAAqD,CACpD,AAAU;EAAA,WAAI;EAAA,8BAAd;EAAA,MAAK,CAAK,KAAI,KAAd,CAAU;GAAA,aACT;GAAA,GAAI,cAAQ,WAAW,MAAM,CAC5B;IAAA,aAAQ,KAAK,CAAO,cAAa,gBACjC;IAAA;;IAGF;EAAA,kBAAa,CAAO,cAAa;;CAMlC,yBACC;EAAA,kBAAa,CAAO,gBAAe;;;;;;;;;;CAapC,0BAAwD,CACvD,AAAU;EAAA,WAAI;EAAA,6BAAd;EAAA,MAAK,CAAK,KAAI,KAAd,CAAU;GAAA,aACT;GAAA,GAAI,aAAO,WAAW,MAAM,CAC3B;IAAA,YAAO,KAAK,CAAO,cAAa,gBAChC;IAAA;;IAGF;EAAA,iBAAY,CAAO,cAAa;;CAMjC,0BACC;EAAA,iBAAY,CAAO,cAAa;;;;;;;;;;;;;CAgBjC,kBAA+C,CAC9C;EAAA,gBAAW,KACX;EAAA,iBAAY;;;;;;;;;;;;;CAgBb,mBAA+C,CAC9C;EAAA,iBAAY,KACZ;EAAA,gBAAW;;;;;;;;;;;;;;;;;;;;CAuBZ,qBACC;EAAA,uBAAM;;;;;;;;;;CAUP,aAA4C;;;;;;;;;;CAS5C,cAA4C;;;;;;;;;;CAS5C,aAA4C;;;;;;;;;;CAS5C,iBAA6C;;;;;;CAK7C,YACC;EAAA,AAAO,QAAC,uBAAuB,kCAAQ;;CAGxC,cAA6B,CAC5B;EAAA,qBAAgB,KAChB;EAAA,wBAAmB,KACnB;EAAA,GAAI,mBACH;GAAA,YAAO;IAER;EAAA,aAAQ;;CAGT,mBAA4B,CAC3B;EAAA,GAAI,0BAAoB,QAAQ,sBAAiB,MAIhD;GAAA,wBAAmB,6BAAwB,GAAG,2BAAsB;IAGrE;EAAA,AAAO","version":3,"file":"HttpBase.js.map","sources":["../../../../../../../haxe/versions/4.1.0/std/haxe/io/Encoding.hx","../../../../../../../haxe/versions/4.1.0/std/js/_std/haxe/Exception.hx","../../../../../../../haxe/haxe_libraries/genes/0.3.2/github/c0832e2c0971599e5139e57795981c7a450426d6/src/genes/Register.hx","../../../../../../../haxe/versions/4.1.0/std/js/_std/Reflect.hx","../../../../../../../haxe/versions/4.1.0/std/haxe/http/HttpBase.hx"],"sourcesContent":["/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.io;\n\n/**\n\tString binary encoding supported by Haxe I/O\n**/\nenum Encoding {\n\tUTF8;\n\n\t/**\n\t\tOutput the string the way the platform represent it in memory. This is the most efficient but is platform-specific\n\t**/\n\tRawNative;\n}\n","package haxe;\n\nimport js.lib.Error;\n\n@:coreApi\nclass Exception extends NativeException {\n\tpublic var message(get,never):String;\n\tpublic var stack(get,never):CallStack;\n\tpublic var previous(get,never):Null<Exception>;\n\tpublic var native(get,never):Any;\n\n\t@:ifFeature(\"haxe.Exception.get_stack\")\n\t@:noCompletion var __skipStack:Int;\n\t@:noCompletion var __exceptionStack(get,set):Null<CallStack>;\n\t@:noCompletion var __nativeException:Any;\n\t@:noCompletion var __previousException:Null<Exception>;\n\n\tstatic function caught(value:Any):Exception {\n\t\tif(Std.isOfType(value, Exception)) {\n\t\t\treturn value;\n\t\t} else if(Std.isOfType(value, Error)) {\n\t\t\treturn new Exception((cast value:Error).message, null, value);\n\t\t} else {\n\t\t\treturn new ValueException(value, null, value);\n\t\t}\n\t}\n\n\tstatic function thrown(value:Any):Any {\n\t\tif(Std.isOfType(value, Exception)) {\n\t\t\treturn (value:Exception).native;\n\t\t} else if(Std.isOfType(value, Error)) {\n\t\t\treturn value;\n\t\t} else {\n\t\t\tvar e = new ValueException(value);\n\t\t\tuntyped __feature__(\"haxe.Exception.get_stack\", e.__shiftStack());\n\t\t\treturn e;\n\t\t}\n\t}\n\n\tpublic function new(message:String, ?previous:Exception, ?native:Any) {\n\t\tsuper(message);\n\t\t(cast this).message = message;\n\t\t__previousException = previous;\n\t\t__nativeException = native != null ? native : this;\n\t\tuntyped __feature__('haxe.Exception.stack', {\n\t\t\t__skipStack = 0;\n\t\t\tvar old = js.Syntax.code('Error.prepareStackTrace');\n\t\t\tjs.Syntax.code('Error.prepareStackTrace = function(e) { return e.stack; }');\n\t\t\tif(Std.isOfType(native, Error)) {\n\t\t\t\t(cast this).stack = native.stack;\n\t\t\t} else {\n\t\t\t\tvar e:Error = null;\n\t\t\t\tif ((cast Error).captureStackTrace) {\n\t\t\t\t\t(cast Error).captureStackTrace(this, Exception);\n\t\t\t\t\te = cast this;\n\t\t\t\t} else {\n\t\t\t\t\te = new Error();\n\t\t\t\t\t//Internet Explorer provides call stack only if error was thrown\n\t\t\t\t\tif(js.Syntax.typeof(e.stack) == \"undefined\") {\n\t\t\t\t\t\tjs.Syntax.code('try { throw {0}; } catch(_) {}', e);\n\t\t\t\t\t\t__skipStack++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t(cast this).stack = e.stack;\n\t\t\t}\n\t\t\tjs.Syntax.code('Error.prepareStackTrace = {0}', old);\n\t\t});\n\t}\n\n\tfunction unwrap():Any {\n\t\treturn __nativeException;\n\t}\n\n\tpublic function toString():String {\n\t\treturn message;\n\t}\n\n\tpublic function details():String {\n\t\treturn inline CallStack.exceptionToString(this);\n\t}\n\n\t@:noCompletion\n\t@:ifFeature(\"haxe.Exception.get_stack\")\n\tinline function __shiftStack():Void {\n\t\t__skipStack++;\n\t}\n\n\tfunction get_message():String {\n\t\treturn (cast this:Error).message;\n\t}\n\n\tfunction get_previous():Null<Exception> {\n\t\treturn __previousException;\n\t}\n\n\tfinal function get_native():Any {\n\t\treturn __nativeException;\n\t}\n\n\tfunction get_stack():CallStack {\n\t\treturn switch __exceptionStack {\n\t\t\tcase null:\n\t\t\t\t__exceptionStack = NativeStackTrace.toHaxe(NativeStackTrace.normalize((cast this).stack), __skipStack);\n\t\t\tcase s: s;\n\t\t}\n\t}\n\n\t@:noCompletion\n\tfunction setProperty(name:String, value:Any):Void {\n\t\ttry {\n\t\t\tjs.lib.Object.defineProperty(this, name, {value:value});\n\t\t} catch(e:Exception) {\n\t\t\tjs.Syntax.code('{0}[{1}] = {2}', this, name, value);\n\t\t}\n\t}\n\n\t@:noCompletion\n\tinline function get___exceptionStack():CallStack {\n\t\treturn (cast this).__exceptionStack;\n\t}\n\n\t@:noCompletion\n\tinline function set___exceptionStack(value:CallStack):CallStack {\n\t\tsetProperty('__exceptionStack', value);\n\t\treturn value;\n\t}\n\n\t@:noCompletion\n\tinline function get___skipStack():Int {\n\t\treturn (cast this).__skipStack;\n\t}\n\n\t@:noCompletion\n\tinline function set___skipStack(value:Int):Int {\n\t\tsetProperty('__skipStack', value);\n\t\treturn value;\n\t}\n\n\t@:noCompletion\n\tinline function get___nativeException():Any {\n\t\treturn (cast this).__nativeException;\n\t}\n\n\t@:noCompletion\n\tinline function set___nativeException(value:Any):Any {\n\t\tsetProperty('__nativeException', value);\n\t\treturn value;\n\t}\n\n\t@:noCompletion\n\tinline function get___previousException():Null<Exception> {\n\t\treturn (cast this).__previousException;\n\t}\n\n\t@:noCompletion\n\tinline function set___previousException(value:Null<Exception>):Null<Exception> {\n\t\tsetProperty('__previousException', value);\n\t\treturn value;\n\t}\n}\n\n@:dox(hide)\n@:noCompletion\n@:native('Error')\nprivate extern class NativeException {\n\t// private var message:String; //redefined in haxe.Exception\n\t// private var stack(default, null):String; //redefined in haxe.Exception\n\n\tfunction new(?message:String);\n}\n","package genes;\n\nimport js.lib.Object;\nimport js.Syntax;\n\nclass Register {\n  @:keep @:native(\"$global\")\n  public static final _global = js.Syntax.code('typeof window != \"undefined\" ? window : typeof global != \"undefined\" ? global : typeof self != \"undefined\" ? self : this');\n\n  static final globals = {}\n\n  @:keep public static function global(name) {\n    return untyped globals[name] ? globals[name] : globals[name] = {};\n  }\n\n  @:keep public static function createStatic<T>(obj: {}, name: String,\n      get: () -> T) {\n    var value: T = null;\n    inline function init() {\n      if (get != null) {\n        value = get();\n        get = null;\n      }\n    }\n    Object.defineProperty(obj, name, {\n      enumerable: true,\n      get: () -> {\n        init();\n        return value;\n      },\n      set: v -> {\n        init();\n        value = v;\n      }\n    });\n  }\n\n  @:keep public static function iter<T>(a: Array<T>): Iterator<T> {\n    return untyped if (!Array.isArray(a))\n      js.Syntax.code('a.iterator()')\n    else untyped {\n      cur: 0,\n      arr: a,\n      hasNext: function() {\n        return __this__.cur < __this__.arr.length;\n      },\n      next: function() {\n        return __this__.arr[__this__.cur++];\n      }\n    }\n  }\n\n  @:keep public static function extend(superClass) {\n    Syntax.code('\n      function res() {\n        this.new.apply(this, arguments)\n      }\n      Object.setPrototypeOf(res.prototype, superClass.prototype)\n      return res\n    ');\n  }\n\n  @:keep public static function inherits(resolve, defer = false) {\n    Syntax.code('\n      function res() {\n        if (defer && resolve && res.__init__) res.__init__()\n        this.new.apply(this, arguments)\n      }\n      if (!defer) {\n        if (resolve && resolve.__init__) {\n          defer = true\n          res.__init__ = () => {\n            resolve.__init__()\n            Object.setPrototypeOf(res.prototype, resolve.prototype)\n            res.__init__ = undefined\n          } \n        } else if (resolve) {\n          Object.setPrototypeOf(res.prototype, resolve.prototype)\n        }\n      } else {\n        res.__init__ = () => {\n          const superClass = resolve()\n          if (superClass.__init__) superClass.__init__()\n          Object.setPrototypeOf(res.prototype, superClass.prototype)\n          res.__init__ = undefined\n        } \n      }\n      return res\n    ');\n  }\n\n  static var fid = 0;\n\n  @:keep public static function bind(o: Dynamic, m: Dynamic) {\n    if (m == null)\n      return null;\n    if (m.__id__ == null)\n      m.__id__ = fid++;\n    var f = null;\n    if (o.hx__closures__ == null)\n      o.hx__closures__ = {}\n    else\n      f = o.hx__closures__[m.__id__];\n    if (f == null) {\n      f = m.bind(o);\n      o.hx__closures__[m.__id__] = f;\n    }\n    return f;\n  }\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\t@:pure\n\tpublic inline static function hasField(o:Dynamic, field:String):Bool {\n\t\treturn js.lib.Object.prototype.hasOwnProperty.call(o, field);\n\t}\n\n\t@:pure\n\tpublic static function field(o:Dynamic, field:String):Dynamic {\n\t\ttry\n\t\t\treturn o[cast field]\n\t\tcatch (e:Dynamic)\n\t\t\treturn null;\n\t}\n\n\tpublic inline static function setField(o:Dynamic, field:String, value:Dynamic):Void {\n\t\to[cast field] = value;\n\t}\n\n\tpublic static function getProperty(o:Dynamic, field:String):Dynamic\n\t\tuntyped {\n\t\t\tvar tmp;\n\t\t\treturn if (o == null) __define_feature__(\"Reflect.getProperty\",\n\t\t\t\tnull) else if (o.__properties__ && (tmp = o.__properties__[\"get_\" + field])) o[tmp]() else o[field];\n\t\t}\n\n\tpublic static function setProperty(o:Dynamic, field:String, value:Dynamic):Void\n\t\tuntyped {\n\t\t\tvar tmp;\n\t\t\tif (o.__properties__ && (tmp = o.__properties__[\"set_\" + field]))\n\t\t\t\to[tmp](value)\n\t\t\telse\n\t\t\t\to[field] = __define_feature__(\"Reflect.setProperty\", value);\n\t\t}\n\n\tpublic inline static function callMethod(o:Dynamic, func:haxe.Constraints.Function, args:Array<Dynamic>):Dynamic {\n\t\treturn (cast func : js.lib.Function).apply(o, args);\n\t}\n\n\tpublic static function fields(o:Dynamic):Array<String> {\n\t\tvar a = [];\n\t\tif (o != null)\n\t\t\tuntyped {\n\t\t\t\tvar hasOwnProperty = js.lib.Object.prototype.hasOwnProperty;\n\t\t\t\tjs.Syntax.code(\"for( var f in o ) {\");\n\t\t\t\tif (f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f))\n\t\t\t\t\ta.push(f);\n\t\t\t\tjs.Syntax.code(\"}\");\n\t\t\t}\n\t\treturn a;\n\t}\n\n\t@:access(js.Boot)\n\tpublic static function isFunction(f:Dynamic):Bool {\n\t\treturn js.Syntax.typeof(f) == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>(a:T, b:T):Int {\n\t\treturn (a == b) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods(f1:Dynamic, f2:Dynamic):Bool {\n\t\tif (f1 == f2)\n\t\t\treturn true;\n\t\tif (!isFunction(f1) || !isFunction(f2))\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\t@:access(js.Boot)\n\tpublic static function isObject(v:Dynamic):Bool {\n\t\tif (v == null)\n\t\t\treturn false;\n\t\tvar t = js.Syntax.typeof(v);\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null))\n\t\t\t|| (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue(v:Dynamic):Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField(o:Dynamic, field:String):Bool {\n\t\tif (!hasField(o, field))\n\t\t\treturn false;\n\t\tjs.Syntax.delete(o, field);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>(o:Null<T>):Null<T> {\n\t\tif (o == null)\n\t\t\treturn null;\n\t\tvar o2:Dynamic = {};\n\t\tfor (f in Reflect.fields(o))\n\t\t\tReflect.setField(o2, f, Reflect.field(o, f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function(f:Array<Dynamic>->Void):Dynamic {})\n\tpublic static function makeVarArgs(f:Array<Dynamic>->Dynamic):Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(js.Syntax.code(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.http;\n\nimport haxe.io.Bytes;\n\nprivate typedef StringKeyValue = {\n\tvar name:String;\n\tvar value:String;\n}\n\n/**\n\tThis class can be used to handle Http requests consistently across\n\tplatforms. There are two intended usages:\n\n\t- call `haxe.Http.requestUrl(url)` and receive the result as a `String`\n\t(not available on flash)\n\t- create a `new haxe.Http(url)`, register your callbacks for `onData`,\n\t`onError` and `onStatus`, then call `request()`.\n**/\nclass HttpBase {\n\t/**\n\t\tThe url of `this` request. It is used only by the `request()` method and\n\t\tcan be changed in order to send the same request to different target\n\t\tUrls.\n\t**/\n\tpublic var url:String;\n\n\tpublic var responseData(get,never):Null<String>;\n\tpublic var responseBytes(default,null):Null<Bytes>;\n\n\tvar responseAsString:Null<String>;\n\tvar postData:Null<String>;\n\tvar postBytes:Null<Bytes>;\n\tvar headers:Array<StringKeyValue>;\n\tvar params:Array<StringKeyValue>;\n\n\tfinal emptyOnData:(String)->Void;\n\n\t/**\n\t\tCreates a new Http instance with `url` as parameter.\n\n\t\tThis does not do a request until `request()` is called.\n\n\t\tIf `url` is null, the field url must be set to a value before making the\n\t\tcall to `request()`, or the result is unspecified.\n\n\t\t(Php) Https (SSL) connections are allowed only if the OpenSSL extension\n\t\tis enabled.\n\t**/\n\tpublic function new(url:String) {\n\t\tthis.url = url;\n\t\theaders = [];\n\t\tparams = [];\n\t\temptyOnData = onData;\n\t}\n\n\t/**\n\t\tSets the header identified as `header` to value `value`.\n\n\t\tIf `header` or `value` are null, the result is unspecified.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setHeader(name:String, value:String) {\n\t\tfor (i in 0...headers.length) {\n\t\t\tif (headers[i].name == name) {\n\t\t\t\theaders[i] = {name: name, value: value};\n\t\t\t\treturn #if hx3compat this #end;\n\t\t\t}\n\t\t}\n\t\theaders.push({name: name, value: value});\n\t\t#if hx3compat\n\t\treturn this;\n\t\t#end\n\t}\n\n\tpublic function addHeader(header:String, value:String) {\n\t\theaders.push({name: header, value: value});\n\t\t#if hx3compat\n\t\treturn this;\n\t\t#end\n\t}\n\n\t/**\n\t\tSets the parameter identified as `param` to value `value`.\n\n\t\tIf `header` or `value` are null, the result is unspecified.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setParameter(name:String, value:String) {\n\t\tfor (i in 0...params.length) {\n\t\t\tif (params[i].name == name) {\n\t\t\t\tparams[i] = {name: name, value: value};\n\t\t\t\treturn #if hx3compat this #end;\n\t\t\t}\n\t\t}\n\t\tparams.push({name: name, value: value});\n\t\t#if hx3compat\n\t\treturn this;\n\t\t#end\n\t}\n\n\tpublic function addParameter(name:String, value:String) {\n\t\tparams.push({name: name, value: value});\n\t\t#if hx3compat\n\t\treturn this;\n\t\t#end\n\t}\n\n\t/**\n\t\tSets the post data of `this` Http request to `data` string.\n\n\t\tThere can only be one post data per request. Subsequent calls to\n\t\tthis method or to `setPostBytes()` overwrite the previously set value.\n\n\t\tIf `data` is null, the post data is considered to be absent.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setPostData(data:Null<String>) {\n\t\tpostData = data;\n\t\tpostBytes = null;\n\t\t#if hx3compat\n\t\treturn this;\n\t\t#end\n\t}\n\n\t/**\n\t\tSets the post data of `this` Http request to `data` bytes.\n\n\t\tThere can only be one post data per request. Subsequent calls to\n\t\tthis method or to `setPostData()` overwrite the previously set value.\n\n\t\tIf `data` is null, the post data is considered to be absent.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setPostBytes(data:Null<Bytes>) {\n\t\tpostBytes = data;\n\t\tpostData = null;\n\t\t#if hx3compat\n\t\treturn this;\n\t\t#end\n\t}\n\n\t/**\n\t\tSends `this` Http request to the Url specified by `this.url`.\n\n\t\tIf `post` is true, the request is sent as POST request, otherwise it is\n\t\tsent as GET request.\n\n\t\tDepending on the outcome of the request, this method calls the\n\t\t`onStatus()`, `onError()`, `onData()` or `onBytes()` callback functions.\n\n\t\tIf `this.url` is null, the result is unspecified.\n\n\t\tIf `this.url` is an invalid or inaccessible Url, the `onError()` callback\n\t\tfunction is called.\n\n\t\t[js] If `this.async` is false, the callback functions are called before\n\t\tthis method returns.\n\t**/\n\tpublic function request(?post:Bool):Void {\n\t\tthrow \"not implemented\";\n\t}\n\n\t/**\n\t\tThis method is called upon a successful request, with `data` containing\n\t\tthe result String.\n\n\t\tThe intended usage is to bind it to a custom function:\n\t\t`httpInstance.onData = function(data) { // handle result }`\n\t**/\n\tpublic dynamic function onData(data:String) {}\n\n\t/**\n\t\tThis method is called upon a successful request, with `data` containing\n\t\tthe result String.\n\n\t\tThe intended usage is to bind it to a custom function:\n\t\t`httpInstance.onBytes = function(data) { // handle result }`\n\t**/\n\tpublic dynamic function onBytes(data:Bytes) {}\n\n\t/**\n\t\tThis method is called upon a request error, with `msg` containing the\n\t\terror description.\n\n\t\tThe intended usage is to bind it to a custom function:\n\t\t`httpInstance.onError = function(msg) { // handle error }`\n\t**/\n\tpublic dynamic function onError(msg:String) {}\n\n\t/**\n\t\tThis method is called upon a Http status change, with `status` being the\n\t\tnew status.\n\n\t\tThe intended usage is to bind it to a custom function:\n\t\t`httpInstance.onStatus = function(status) { // handle status }`\n\t**/\n\tpublic dynamic function onStatus(status:Int) {}\n\n\t/**\n\t\tOverride this if extending `haxe.Http` with overriding `onData`\n\t**/\n\tfunction hasOnData():Bool {\n\t\treturn !Reflect.compareMethods(onData, emptyOnData);\n\t}\n\n\tfunction success(data:Bytes) {\n\t\tresponseBytes = data;\n\t\tresponseAsString = null;\n\t\tif (hasOnData()) {\n\t\t\tonData(responseData);\n\t\t}\n\t\tonBytes(responseBytes);\n\t}\n\n\tfunction get_responseData() {\n\t\tif (responseAsString == null && responseBytes != null) {\n\t\t\t#if neko\n\t\t\tresponseAsString = neko.Lib.stringReference(responseBytes);\n\t\t\t#else\n\t\t\tresponseAsString = responseBytes.getString(0, responseBytes.length, UTF8);\n\t\t\t#end\n\t\t}\n\t\treturn responseAsString;\n\t}\n}\n"]}