{"sourceRoot":"","names":[],"mappings":"QA0BA;QCAA;QCAA;;ACEA,gCACC,0BCRgB,4BHKjB,4BIOO,QHPP,0BCIC,0BCTgB,yBCYV,QLPP","version":3,"file":"IdentityProvider.d.ts.map","sources":["../../../../../../../../haxe/versions/4.1.0/std/js/html/rtc/IdentityValidationResult.hx","../../../../../../../../haxe/versions/4.1.0/std/js/html/rtc/IdentityProviderOptions.hx","../../../../../../../../haxe/versions/4.1.0/std/js/html/rtc/IdentityAssertionResult.hx","../../../../../../../../haxe/versions/4.1.0/std/js/html/rtc/IdentityProvider.hx","../../../../../../../../haxe/versions/4.1.0/std/js/_std/String.hx","../../../../../../../../haxe/versions/4.1.0/std/js/lib/Promise.hx"],"sourcesContent":["/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla\\RTCIdentityProvider.webidl. Do not edit!\n\npackage js.html.rtc;\n\ntypedef IdentityValidationResult = {\n\tvar contents : String;\n\tvar identity : String;\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla\\RTCIdentityProvider.webidl. Do not edit!\n\npackage js.html.rtc;\n\ntypedef IdentityProviderOptions = {\n\tvar ?peerIdentity : String;\n\tvar ?protocol : String;\n\tvar ?usernameHint : String;\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla\\RTCIdentityProvider.webidl. Do not edit!\n\npackage js.html.rtc;\n\ntypedef IdentityAssertionResult = {\n\tvar assertion : String;\n\tvar idp : IdentityProviderDetails;\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla\\RTCIdentityProvider.webidl. Do not edit!\n\npackage js.html.rtc;\n\nimport js.lib.Promise;\n\ntypedef IdentityProvider = {\n\tvar generateAssertion : String -> String -> IdentityProviderOptions -> Promise<IdentityAssertionResult>;\n\tvar validateAssertion : String -> String -> Promise<IdentityValidationResult>;\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi extern class String {\n\tvar length(default, null):Int;\n\n\t@:pure function new(string:String):Void;\n\t@:pure function toUpperCase():String;\n\t@:pure function toLowerCase():String;\n\t@:pure function charAt(index:Int):String;\n\t@:pure function indexOf(str:String, ?startIndex:Int):Int;\n\t@:pure function lastIndexOf(str:String, ?startIndex:Int):Int;\n\t@:pure function split(delimiter:String):Array<String>;\n\t@:pure function toString():String;\n\t@:pure function substring(startIndex:Int, ?endIndex:Int):String;\n\n\t@:pure inline function charCodeAt(index:Int):Null<Int> {\n\t\treturn @:privateAccess HxOverrides.cca(this, index);\n\t}\n\n\t@:pure inline function substr(pos:Int, ?len:Int):String {\n\t\treturn @:privateAccess HxOverrides.substr(this, pos, len);\n\t}\n\n\t@:pure static inline function fromCharCode(code:Int):String {\n\t\treturn untyped __define_feature__('String.fromCharCode', js.Syntax.code(\"String.fromCodePoint({0})\", code));\n\t}\n\n\tstatic function __init__():Void {\n\t\tuntyped __feature__('String.fromCharCode',\n\t\t\tjs.Syntax.code(\"if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }\"));\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.lib;\n\nimport haxe.extern.EitherType;\n\n/**\n\tThe Promise object represents the eventual completion (or failure) of an\n\tasynchronous operation and its resulting value.\n\n\tDocumentation [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n**/\n@:native(\"Promise\")\nextern class Promise<T> {\n\t/**\n\t\tReturns a Promise object that is resolved with the given value. If the\n\t\tvalue is Thenable, the returned promise will \"follow\" that\n\t\tthenable, adopting its eventual state;\n\t\totherwise the returned promise will be fulfilled with the value.\n\t\tGenerally, when it's unknown when value is a promise or not,\n\t\tuse `Promise.resolve(value)` instead and work with the return value as\n\t\ta promise.\n\t**/\n\t@:overload(function<T>(?value:T):Promise<T> {})\n\tstatic function resolve<T>(thenable:Thenable<T>):Promise<T>;\n\n\t/**\n\t\tReturns a Promise object that is rejected with the given reason.\n\t**/\n\tstatic function reject<T>(?reason:Dynamic):Promise<T>;\n\n\t/**\n\t\tReturns a promise that either fulfills when all of the promises in the\n\t\titerable argument have fulfilled or rejects as soon as one of the\n\t\tpromises in the iterable argument rejects. If the returned promise\n\t\tfulfills, it is fulfilled with an array of the values from the\n\t\tfulfilled promises in the same order as defined in the iterable.\n\t\tIf the returned promise rejects, it is rejected with the reason from\n\t\tthe first promise in the iterable that rejected. This method can be\n\t\tuseful for aggregating results of multiple promises.\n\t**/\n\tstatic function all(iterable:Array<Dynamic>):Promise<Array<Dynamic>>;\n\n\t/**\n\t\tReturns a promise that fulfills or rejects as soon as one of the\n\t\tpromises in the iterable fulfills or rejects, with the value or reason\n\t\tfrom that promise.\n\t**/\n\tstatic function race(iterable:Array<Dynamic>):Promise<Dynamic>;\n\n\t/** @throws DOMError */\n\tfunction new(init:(resolve:(value:T) -> Void, reject:(reason:Dynamic) -> Void) -> Void):Void;\n\n\t/**\n\t\tAppends fulfillment and rejection handlers to the promise and returns a\n\t\tnew promise resolving to the return value of the called handler, or to\n\t\tits original settled value if the promise was not handled\n\t\t(i.e. if the relevant handler onFulfilled or onRejected is not a function).\n\t**/\n\tfunction then<TOut>(onFulfilled:Null<PromiseHandler<T, TOut>>, ?onRejected:PromiseHandler<Dynamic, TOut>):Promise<TOut>;\n\n\t/**\n\t\tAppends a rejection handler callback to the promise, and returns a new\n\t\tpromise resolving to the return value of the callback if it is called,\n\t\tor to its original fulfillment value if the promise is instead fulfilled.\n\t**/\n\t@:native(\"catch\")\n\tfunction catchError<TOut>(onRejected:PromiseHandler<Dynamic, TOut>):Promise<TOut>;\n}\n\n/**\n\tHandler type for the Promise object.\n**/\nabstract PromiseHandler<T, TOut>(T->Dynamic) // T->Dynamic, so the compiler always knows the type of the argument and can infer it for then/catch callbacks\n\tfrom T->TOut // order is important, because Promise<TOut> return must have priority\n\tfrom T->Thenable<TOut> // although the checking order seems to be reversed at the moment, see https://github.com/HaxeFoundation/haxe/issues/7656\n\tfrom T->Promise<TOut> // support Promise explicitly as it doesn't work transitively through Thenable at the moment\n{}\n\n/**\n\tA value with a `then` method.\n**/\n@:forward\nabstract Thenable<T>(ThenableStruct<T>)\n\tfrom ThenableStruct<T> {} // abstract wrapping prevents compiler hanging, see https://github.com/HaxeFoundation/haxe/issues/5785\n\ntypedef ThenableStruct<T> = {\n\tfunction then<TOut>(onFulfilled:Null<PromiseHandler<T, TOut>>, ?onRejected:PromiseHandler<Dynamic, TOut>):Thenable<TOut>;\n}\n"]}