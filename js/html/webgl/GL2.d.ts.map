{"sourceRoot":"","names":[],"mappings":";YAyBA,MCSO","version":3,"file":"GL2.d.ts.map","sources":["../../../../../../../../haxe/versions/4.0.3/std/js/html/webgl/GL2.hx","../../../../../../../../haxe/versions/4.0.3/std/js/html/webgl/WebGL2RenderingContext.hx"],"sourcesContent":["/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.html.webgl;\n\n/** An alias for accessing GL constants more naturally. */\ntypedef GL2 = WebGL2RenderingContext;\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla\\WebGL2RenderingContext.webidl. Do not edit!\n\npackage js.html.webgl;\n\n/**\n\tThe WebGL2RenderingContext interface provides the OpenGL ES 3.0 rendering context for the drawing surface of an HTML `canvas` element.\n\n\tDocumentation [WebGL2RenderingContext](https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n\n\t@see <https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext>\n**/\n@:native(\"WebGL2RenderingContext\")\nextern class WebGL2RenderingContext extends RenderingContext {\n\tstatic inline var READ_BUFFER : Int = 3074;\n\tstatic inline var UNPACK_ROW_LENGTH : Int = 3314;\n\tstatic inline var UNPACK_SKIP_ROWS : Int = 3315;\n\tstatic inline var UNPACK_SKIP_PIXELS : Int = 3316;\n\tstatic inline var PACK_ROW_LENGTH : Int = 3330;\n\tstatic inline var PACK_SKIP_ROWS : Int = 3331;\n\tstatic inline var PACK_SKIP_PIXELS : Int = 3332;\n\tstatic inline var COLOR : Int = 6144;\n\tstatic inline var DEPTH : Int = 6145;\n\tstatic inline var STENCIL : Int = 6146;\n\tstatic inline var RED : Int = 6403;\n\tstatic inline var RGB8 : Int = 32849;\n\tstatic inline var RGBA8 : Int = 32856;\n\tstatic inline var RGB10_A2 : Int = 32857;\n\tstatic inline var TEXTURE_BINDING_3D : Int = 32874;\n\tstatic inline var UNPACK_SKIP_IMAGES : Int = 32877;\n\tstatic inline var UNPACK_IMAGE_HEIGHT : Int = 32878;\n\tstatic inline var TEXTURE_3D : Int = 32879;\n\tstatic inline var TEXTURE_WRAP_R : Int = 32882;\n\tstatic inline var MAX_3D_TEXTURE_SIZE : Int = 32883;\n\tstatic inline var UNSIGNED_INT_2_10_10_10_REV : Int = 33640;\n\tstatic inline var MAX_ELEMENTS_VERTICES : Int = 33000;\n\tstatic inline var MAX_ELEMENTS_INDICES : Int = 33001;\n\tstatic inline var TEXTURE_MIN_LOD : Int = 33082;\n\tstatic inline var TEXTURE_MAX_LOD : Int = 33083;\n\tstatic inline var TEXTURE_BASE_LEVEL : Int = 33084;\n\tstatic inline var TEXTURE_MAX_LEVEL : Int = 33085;\n\tstatic inline var MIN : Int = 32775;\n\tstatic inline var MAX : Int = 32776;\n\tstatic inline var DEPTH_COMPONENT24 : Int = 33190;\n\tstatic inline var MAX_TEXTURE_LOD_BIAS : Int = 34045;\n\tstatic inline var TEXTURE_COMPARE_MODE : Int = 34892;\n\tstatic inline var TEXTURE_COMPARE_FUNC : Int = 34893;\n\tstatic inline var CURRENT_QUERY : Int = 34917;\n\tstatic inline var QUERY_RESULT : Int = 34918;\n\tstatic inline var QUERY_RESULT_AVAILABLE : Int = 34919;\n\tstatic inline var STREAM_READ : Int = 35041;\n\tstatic inline var STREAM_COPY : Int = 35042;\n\tstatic inline var STATIC_READ : Int = 35045;\n\tstatic inline var STATIC_COPY : Int = 35046;\n\tstatic inline var DYNAMIC_READ : Int = 35049;\n\tstatic inline var DYNAMIC_COPY : Int = 35050;\n\tstatic inline var MAX_DRAW_BUFFERS : Int = 34852;\n\tstatic inline var DRAW_BUFFER0 : Int = 34853;\n\tstatic inline var DRAW_BUFFER1 : Int = 34854;\n\tstatic inline var DRAW_BUFFER2 : Int = 34855;\n\tstatic inline var DRAW_BUFFER3 : Int = 34856;\n\tstatic inline var DRAW_BUFFER4 : Int = 34857;\n\tstatic inline var DRAW_BUFFER5 : Int = 34858;\n\tstatic inline var DRAW_BUFFER6 : Int = 34859;\n\tstatic inline var DRAW_BUFFER7 : Int = 34860;\n\tstatic inline var DRAW_BUFFER8 : Int = 34861;\n\tstatic inline var DRAW_BUFFER9 : Int = 34862;\n\tstatic inline var DRAW_BUFFER10 : Int = 34863;\n\tstatic inline var DRAW_BUFFER11 : Int = 34864;\n\tstatic inline var DRAW_BUFFER12 : Int = 34865;\n\tstatic inline var DRAW_BUFFER13 : Int = 34866;\n\tstatic inline var DRAW_BUFFER14 : Int = 34867;\n\tstatic inline var DRAW_BUFFER15 : Int = 34868;\n\tstatic inline var MAX_FRAGMENT_UNIFORM_COMPONENTS : Int = 35657;\n\tstatic inline var MAX_VERTEX_UNIFORM_COMPONENTS : Int = 35658;\n\tstatic inline var SAMPLER_3D : Int = 35679;\n\tstatic inline var SAMPLER_2D_SHADOW : Int = 35682;\n\tstatic inline var FRAGMENT_SHADER_DERIVATIVE_HINT : Int = 35723;\n\tstatic inline var PIXEL_PACK_BUFFER : Int = 35051;\n\tstatic inline var PIXEL_UNPACK_BUFFER : Int = 35052;\n\tstatic inline var PIXEL_PACK_BUFFER_BINDING : Int = 35053;\n\tstatic inline var PIXEL_UNPACK_BUFFER_BINDING : Int = 35055;\n\tstatic inline var FLOAT_MAT2x3 : Int = 35685;\n\tstatic inline var FLOAT_MAT2x4 : Int = 35686;\n\tstatic inline var FLOAT_MAT3x2 : Int = 35687;\n\tstatic inline var FLOAT_MAT3x4 : Int = 35688;\n\tstatic inline var FLOAT_MAT4x2 : Int = 35689;\n\tstatic inline var FLOAT_MAT4x3 : Int = 35690;\n\tstatic inline var SRGB : Int = 35904;\n\tstatic inline var SRGB8 : Int = 35905;\n\tstatic inline var SRGB8_ALPHA8 : Int = 35907;\n\tstatic inline var COMPARE_REF_TO_TEXTURE : Int = 34894;\n\tstatic inline var RGBA32F : Int = 34836;\n\tstatic inline var RGB32F : Int = 34837;\n\tstatic inline var RGBA16F : Int = 34842;\n\tstatic inline var RGB16F : Int = 34843;\n\tstatic inline var VERTEX_ATTRIB_ARRAY_INTEGER : Int = 35069;\n\tstatic inline var MAX_ARRAY_TEXTURE_LAYERS : Int = 35071;\n\tstatic inline var MIN_PROGRAM_TEXEL_OFFSET : Int = 35076;\n\tstatic inline var MAX_PROGRAM_TEXEL_OFFSET : Int = 35077;\n\tstatic inline var MAX_VARYING_COMPONENTS : Int = 35659;\n\tstatic inline var TEXTURE_2D_ARRAY : Int = 35866;\n\tstatic inline var TEXTURE_BINDING_2D_ARRAY : Int = 35869;\n\tstatic inline var R11F_G11F_B10F : Int = 35898;\n\tstatic inline var UNSIGNED_INT_10F_11F_11F_REV : Int = 35899;\n\tstatic inline var RGB9_E5 : Int = 35901;\n\tstatic inline var UNSIGNED_INT_5_9_9_9_REV : Int = 35902;\n\tstatic inline var TRANSFORM_FEEDBACK_BUFFER_MODE : Int = 35967;\n\tstatic inline var MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS : Int = 35968;\n\tstatic inline var TRANSFORM_FEEDBACK_VARYINGS : Int = 35971;\n\tstatic inline var TRANSFORM_FEEDBACK_BUFFER_START : Int = 35972;\n\tstatic inline var TRANSFORM_FEEDBACK_BUFFER_SIZE : Int = 35973;\n\tstatic inline var TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN : Int = 35976;\n\tstatic inline var RASTERIZER_DISCARD : Int = 35977;\n\tstatic inline var MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS : Int = 35978;\n\tstatic inline var MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS : Int = 35979;\n\tstatic inline var INTERLEAVED_ATTRIBS : Int = 35980;\n\tstatic inline var SEPARATE_ATTRIBS : Int = 35981;\n\tstatic inline var TRANSFORM_FEEDBACK_BUFFER : Int = 35982;\n\tstatic inline var TRANSFORM_FEEDBACK_BUFFER_BINDING : Int = 35983;\n\tstatic inline var RGBA32UI : Int = 36208;\n\tstatic inline var RGB32UI : Int = 36209;\n\tstatic inline var RGBA16UI : Int = 36214;\n\tstatic inline var RGB16UI : Int = 36215;\n\tstatic inline var RGBA8UI : Int = 36220;\n\tstatic inline var RGB8UI : Int = 36221;\n\tstatic inline var RGBA32I : Int = 36226;\n\tstatic inline var RGB32I : Int = 36227;\n\tstatic inline var RGBA16I : Int = 36232;\n\tstatic inline var RGB16I : Int = 36233;\n\tstatic inline var RGBA8I : Int = 36238;\n\tstatic inline var RGB8I : Int = 36239;\n\tstatic inline var RED_INTEGER : Int = 36244;\n\tstatic inline var RGB_INTEGER : Int = 36248;\n\tstatic inline var RGBA_INTEGER : Int = 36249;\n\tstatic inline var SAMPLER_2D_ARRAY : Int = 36289;\n\tstatic inline var SAMPLER_2D_ARRAY_SHADOW : Int = 36292;\n\tstatic inline var SAMPLER_CUBE_SHADOW : Int = 36293;\n\tstatic inline var UNSIGNED_INT_VEC2 : Int = 36294;\n\tstatic inline var UNSIGNED_INT_VEC3 : Int = 36295;\n\tstatic inline var UNSIGNED_INT_VEC4 : Int = 36296;\n\tstatic inline var INT_SAMPLER_2D : Int = 36298;\n\tstatic inline var INT_SAMPLER_3D : Int = 36299;\n\tstatic inline var INT_SAMPLER_CUBE : Int = 36300;\n\tstatic inline var INT_SAMPLER_2D_ARRAY : Int = 36303;\n\tstatic inline var UNSIGNED_INT_SAMPLER_2D : Int = 36306;\n\tstatic inline var UNSIGNED_INT_SAMPLER_3D : Int = 36307;\n\tstatic inline var UNSIGNED_INT_SAMPLER_CUBE : Int = 36308;\n\tstatic inline var UNSIGNED_INT_SAMPLER_2D_ARRAY : Int = 36311;\n\tstatic inline var DEPTH_COMPONENT32F : Int = 36012;\n\tstatic inline var DEPTH32F_STENCIL8 : Int = 36013;\n\tstatic inline var FLOAT_32_UNSIGNED_INT_24_8_REV : Int = 36269;\n\tstatic inline var FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING : Int = 33296;\n\tstatic inline var FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE : Int = 33297;\n\tstatic inline var FRAMEBUFFER_ATTACHMENT_RED_SIZE : Int = 33298;\n\tstatic inline var FRAMEBUFFER_ATTACHMENT_GREEN_SIZE : Int = 33299;\n\tstatic inline var FRAMEBUFFER_ATTACHMENT_BLUE_SIZE : Int = 33300;\n\tstatic inline var FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE : Int = 33301;\n\tstatic inline var FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE : Int = 33302;\n\tstatic inline var FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE : Int = 33303;\n\tstatic inline var FRAMEBUFFER_DEFAULT : Int = 33304;\n\tstatic inline var UNSIGNED_INT_24_8 : Int = 34042;\n\tstatic inline var DEPTH24_STENCIL8 : Int = 35056;\n\tstatic inline var UNSIGNED_NORMALIZED : Int = 35863;\n\tstatic inline var DRAW_FRAMEBUFFER_BINDING : Int = 36006;\n\tstatic inline var READ_FRAMEBUFFER : Int = 36008;\n\tstatic inline var DRAW_FRAMEBUFFER : Int = 36009;\n\tstatic inline var READ_FRAMEBUFFER_BINDING : Int = 36010;\n\tstatic inline var RENDERBUFFER_SAMPLES : Int = 36011;\n\tstatic inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER : Int = 36052;\n\tstatic inline var MAX_COLOR_ATTACHMENTS : Int = 36063;\n\tstatic inline var COLOR_ATTACHMENT1 : Int = 36065;\n\tstatic inline var COLOR_ATTACHMENT2 : Int = 36066;\n\tstatic inline var COLOR_ATTACHMENT3 : Int = 36067;\n\tstatic inline var COLOR_ATTACHMENT4 : Int = 36068;\n\tstatic inline var COLOR_ATTACHMENT5 : Int = 36069;\n\tstatic inline var COLOR_ATTACHMENT6 : Int = 36070;\n\tstatic inline var COLOR_ATTACHMENT7 : Int = 36071;\n\tstatic inline var COLOR_ATTACHMENT8 : Int = 36072;\n\tstatic inline var COLOR_ATTACHMENT9 : Int = 36073;\n\tstatic inline var COLOR_ATTACHMENT10 : Int = 36074;\n\tstatic inline var COLOR_ATTACHMENT11 : Int = 36075;\n\tstatic inline var COLOR_ATTACHMENT12 : Int = 36076;\n\tstatic inline var COLOR_ATTACHMENT13 : Int = 36077;\n\tstatic inline var COLOR_ATTACHMENT14 : Int = 36078;\n\tstatic inline var COLOR_ATTACHMENT15 : Int = 36079;\n\tstatic inline var FRAMEBUFFER_INCOMPLETE_MULTISAMPLE : Int = 36182;\n\tstatic inline var MAX_SAMPLES : Int = 36183;\n\tstatic inline var HALF_FLOAT : Int = 5131;\n\tstatic inline var RG : Int = 33319;\n\tstatic inline var RG_INTEGER : Int = 33320;\n\tstatic inline var R8 : Int = 33321;\n\tstatic inline var RG8 : Int = 33323;\n\tstatic inline var R16F : Int = 33325;\n\tstatic inline var R32F : Int = 33326;\n\tstatic inline var RG16F : Int = 33327;\n\tstatic inline var RG32F : Int = 33328;\n\tstatic inline var R8I : Int = 33329;\n\tstatic inline var R8UI : Int = 33330;\n\tstatic inline var R16I : Int = 33331;\n\tstatic inline var R16UI : Int = 33332;\n\tstatic inline var R32I : Int = 33333;\n\tstatic inline var R32UI : Int = 33334;\n\tstatic inline var RG8I : Int = 33335;\n\tstatic inline var RG8UI : Int = 33336;\n\tstatic inline var RG16I : Int = 33337;\n\tstatic inline var RG16UI : Int = 33338;\n\tstatic inline var RG32I : Int = 33339;\n\tstatic inline var RG32UI : Int = 33340;\n\tstatic inline var VERTEX_ARRAY_BINDING : Int = 34229;\n\tstatic inline var R8_SNORM : Int = 36756;\n\tstatic inline var RG8_SNORM : Int = 36757;\n\tstatic inline var RGB8_SNORM : Int = 36758;\n\tstatic inline var RGBA8_SNORM : Int = 36759;\n\tstatic inline var SIGNED_NORMALIZED : Int = 36764;\n\tstatic inline var COPY_READ_BUFFER : Int = 36662;\n\tstatic inline var COPY_WRITE_BUFFER : Int = 36663;\n\tstatic inline var COPY_READ_BUFFER_BINDING : Int = 36662;\n\tstatic inline var COPY_WRITE_BUFFER_BINDING : Int = 36663;\n\tstatic inline var UNIFORM_BUFFER : Int = 35345;\n\tstatic inline var UNIFORM_BUFFER_BINDING : Int = 35368;\n\tstatic inline var UNIFORM_BUFFER_START : Int = 35369;\n\tstatic inline var UNIFORM_BUFFER_SIZE : Int = 35370;\n\tstatic inline var MAX_VERTEX_UNIFORM_BLOCKS : Int = 35371;\n\tstatic inline var MAX_FRAGMENT_UNIFORM_BLOCKS : Int = 35373;\n\tstatic inline var MAX_COMBINED_UNIFORM_BLOCKS : Int = 35374;\n\tstatic inline var MAX_UNIFORM_BUFFER_BINDINGS : Int = 35375;\n\tstatic inline var MAX_UNIFORM_BLOCK_SIZE : Int = 35376;\n\tstatic inline var MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS : Int = 35377;\n\tstatic inline var MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS : Int = 35379;\n\tstatic inline var UNIFORM_BUFFER_OFFSET_ALIGNMENT : Int = 35380;\n\tstatic inline var ACTIVE_UNIFORM_BLOCKS : Int = 35382;\n\tstatic inline var UNIFORM_TYPE : Int = 35383;\n\tstatic inline var UNIFORM_SIZE : Int = 35384;\n\tstatic inline var UNIFORM_BLOCK_INDEX : Int = 35386;\n\tstatic inline var UNIFORM_OFFSET : Int = 35387;\n\tstatic inline var UNIFORM_ARRAY_STRIDE : Int = 35388;\n\tstatic inline var UNIFORM_MATRIX_STRIDE : Int = 35389;\n\tstatic inline var UNIFORM_IS_ROW_MAJOR : Int = 35390;\n\tstatic inline var UNIFORM_BLOCK_BINDING : Int = 35391;\n\tstatic inline var UNIFORM_BLOCK_DATA_SIZE : Int = 35392;\n\tstatic inline var UNIFORM_BLOCK_ACTIVE_UNIFORMS : Int = 35394;\n\tstatic inline var UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES : Int = 35395;\n\tstatic inline var UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER : Int = 35396;\n\tstatic inline var UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER : Int = 35398;\n\tstatic inline var INVALID_INDEX : Int = cast 4294967295;\n\tstatic inline var MAX_VERTEX_OUTPUT_COMPONENTS : Int = 37154;\n\tstatic inline var MAX_FRAGMENT_INPUT_COMPONENTS : Int = 37157;\n\tstatic inline var MAX_SERVER_WAIT_TIMEOUT : Int = 37137;\n\tstatic inline var OBJECT_TYPE : Int = 37138;\n\tstatic inline var SYNC_CONDITION : Int = 37139;\n\tstatic inline var SYNC_STATUS : Int = 37140;\n\tstatic inline var SYNC_FLAGS : Int = 37141;\n\tstatic inline var SYNC_FENCE : Int = 37142;\n\tstatic inline var SYNC_GPU_COMMANDS_COMPLETE : Int = 37143;\n\tstatic inline var UNSIGNALED : Int = 37144;\n\tstatic inline var SIGNALED : Int = 37145;\n\tstatic inline var ALREADY_SIGNALED : Int = 37146;\n\tstatic inline var TIMEOUT_EXPIRED : Int = 37147;\n\tstatic inline var CONDITION_SATISFIED : Int = 37148;\n\tstatic inline var WAIT_FAILED : Int = 37149;\n\tstatic inline var SYNC_FLUSH_COMMANDS_BIT : Int = 1;\n\tstatic inline var VERTEX_ATTRIB_ARRAY_DIVISOR : Int = 35070;\n\tstatic inline var ANY_SAMPLES_PASSED : Int = 35887;\n\tstatic inline var ANY_SAMPLES_PASSED_CONSERVATIVE : Int = 36202;\n\tstatic inline var SAMPLER_BINDING : Int = 35097;\n\tstatic inline var RGB10_A2UI : Int = 36975;\n\tstatic inline var INT_2_10_10_10_REV : Int = 36255;\n\tstatic inline var TRANSFORM_FEEDBACK : Int = 36386;\n\tstatic inline var TRANSFORM_FEEDBACK_PAUSED : Int = 36387;\n\tstatic inline var TRANSFORM_FEEDBACK_ACTIVE : Int = 36388;\n\tstatic inline var TRANSFORM_FEEDBACK_BINDING : Int = 36389;\n\tstatic inline var TEXTURE_IMMUTABLE_FORMAT : Int = 37167;\n\tstatic inline var MAX_ELEMENT_INDEX : Int = 36203;\n\tstatic inline var TEXTURE_IMMUTABLE_LEVELS : Int = 33503;\n\tstatic inline var TIMEOUT_IGNORED : Int = -1;\n\tstatic inline var MAX_CLIENT_WAIT_TIMEOUT_WEBGL : Int = 37447;\n\tstatic inline var DEPTH_BUFFER_BIT : Int = 256;\n\tstatic inline var STENCIL_BUFFER_BIT : Int = 1024;\n\tstatic inline var COLOR_BUFFER_BIT : Int = 16384;\n\tstatic inline var POINTS : Int = 0;\n\tstatic inline var LINES : Int = 1;\n\tstatic inline var LINE_LOOP : Int = 2;\n\tstatic inline var LINE_STRIP : Int = 3;\n\tstatic inline var TRIANGLES : Int = 4;\n\tstatic inline var TRIANGLE_STRIP : Int = 5;\n\tstatic inline var TRIANGLE_FAN : Int = 6;\n\tstatic inline var ZERO : Int = 0;\n\tstatic inline var ONE : Int = 1;\n\tstatic inline var SRC_COLOR : Int = 768;\n\tstatic inline var ONE_MINUS_SRC_COLOR : Int = 769;\n\tstatic inline var SRC_ALPHA : Int = 770;\n\tstatic inline var ONE_MINUS_SRC_ALPHA : Int = 771;\n\tstatic inline var DST_ALPHA : Int = 772;\n\tstatic inline var ONE_MINUS_DST_ALPHA : Int = 773;\n\tstatic inline var DST_COLOR : Int = 774;\n\tstatic inline var ONE_MINUS_DST_COLOR : Int = 775;\n\tstatic inline var SRC_ALPHA_SATURATE : Int = 776;\n\tstatic inline var FUNC_ADD : Int = 32774;\n\tstatic inline var BLEND_EQUATION : Int = 32777;\n\tstatic inline var BLEND_EQUATION_RGB : Int = 32777;\n\tstatic inline var BLEND_EQUATION_ALPHA : Int = 34877;\n\tstatic inline var FUNC_SUBTRACT : Int = 32778;\n\tstatic inline var FUNC_REVERSE_SUBTRACT : Int = 32779;\n\tstatic inline var BLEND_DST_RGB : Int = 32968;\n\tstatic inline var BLEND_SRC_RGB : Int = 32969;\n\tstatic inline var BLEND_DST_ALPHA : Int = 32970;\n\tstatic inline var BLEND_SRC_ALPHA : Int = 32971;\n\tstatic inline var CONSTANT_COLOR : Int = 32769;\n\tstatic inline var ONE_MINUS_CONSTANT_COLOR : Int = 32770;\n\tstatic inline var CONSTANT_ALPHA : Int = 32771;\n\tstatic inline var ONE_MINUS_CONSTANT_ALPHA : Int = 32772;\n\tstatic inline var BLEND_COLOR : Int = 32773;\n\tstatic inline var ARRAY_BUFFER : Int = 34962;\n\tstatic inline var ELEMENT_ARRAY_BUFFER : Int = 34963;\n\tstatic inline var ARRAY_BUFFER_BINDING : Int = 34964;\n\tstatic inline var ELEMENT_ARRAY_BUFFER_BINDING : Int = 34965;\n\tstatic inline var STREAM_DRAW : Int = 35040;\n\tstatic inline var STATIC_DRAW : Int = 35044;\n\tstatic inline var DYNAMIC_DRAW : Int = 35048;\n\tstatic inline var BUFFER_SIZE : Int = 34660;\n\tstatic inline var BUFFER_USAGE : Int = 34661;\n\tstatic inline var CURRENT_VERTEX_ATTRIB : Int = 34342;\n\tstatic inline var FRONT : Int = 1028;\n\tstatic inline var BACK : Int = 1029;\n\tstatic inline var FRONT_AND_BACK : Int = 1032;\n\tstatic inline var CULL_FACE : Int = 2884;\n\tstatic inline var BLEND : Int = 3042;\n\tstatic inline var DITHER : Int = 3024;\n\tstatic inline var STENCIL_TEST : Int = 2960;\n\tstatic inline var DEPTH_TEST : Int = 2929;\n\tstatic inline var SCISSOR_TEST : Int = 3089;\n\tstatic inline var POLYGON_OFFSET_FILL : Int = 32823;\n\tstatic inline var SAMPLE_ALPHA_TO_COVERAGE : Int = 32926;\n\tstatic inline var SAMPLE_COVERAGE : Int = 32928;\n\tstatic inline var NO_ERROR : Int = 0;\n\tstatic inline var INVALID_ENUM : Int = 1280;\n\tstatic inline var INVALID_VALUE : Int = 1281;\n\tstatic inline var INVALID_OPERATION : Int = 1282;\n\tstatic inline var OUT_OF_MEMORY : Int = 1285;\n\tstatic inline var CW : Int = 2304;\n\tstatic inline var CCW : Int = 2305;\n\tstatic inline var LINE_WIDTH : Int = 2849;\n\tstatic inline var ALIASED_POINT_SIZE_RANGE : Int = 33901;\n\tstatic inline var ALIASED_LINE_WIDTH_RANGE : Int = 33902;\n\tstatic inline var CULL_FACE_MODE : Int = 2885;\n\tstatic inline var FRONT_FACE : Int = 2886;\n\tstatic inline var DEPTH_RANGE : Int = 2928;\n\tstatic inline var DEPTH_WRITEMASK : Int = 2930;\n\tstatic inline var DEPTH_CLEAR_VALUE : Int = 2931;\n\tstatic inline var DEPTH_FUNC : Int = 2932;\n\tstatic inline var STENCIL_CLEAR_VALUE : Int = 2961;\n\tstatic inline var STENCIL_FUNC : Int = 2962;\n\tstatic inline var STENCIL_FAIL : Int = 2964;\n\tstatic inline var STENCIL_PASS_DEPTH_FAIL : Int = 2965;\n\tstatic inline var STENCIL_PASS_DEPTH_PASS : Int = 2966;\n\tstatic inline var STENCIL_REF : Int = 2967;\n\tstatic inline var STENCIL_VALUE_MASK : Int = 2963;\n\tstatic inline var STENCIL_WRITEMASK : Int = 2968;\n\tstatic inline var STENCIL_BACK_FUNC : Int = 34816;\n\tstatic inline var STENCIL_BACK_FAIL : Int = 34817;\n\tstatic inline var STENCIL_BACK_PASS_DEPTH_FAIL : Int = 34818;\n\tstatic inline var STENCIL_BACK_PASS_DEPTH_PASS : Int = 34819;\n\tstatic inline var STENCIL_BACK_REF : Int = 36003;\n\tstatic inline var STENCIL_BACK_VALUE_MASK : Int = 36004;\n\tstatic inline var STENCIL_BACK_WRITEMASK : Int = 36005;\n\tstatic inline var VIEWPORT : Int = 2978;\n\tstatic inline var SCISSOR_BOX : Int = 3088;\n\tstatic inline var COLOR_CLEAR_VALUE : Int = 3106;\n\tstatic inline var COLOR_WRITEMASK : Int = 3107;\n\tstatic inline var UNPACK_ALIGNMENT : Int = 3317;\n\tstatic inline var PACK_ALIGNMENT : Int = 3333;\n\tstatic inline var MAX_TEXTURE_SIZE : Int = 3379;\n\tstatic inline var MAX_VIEWPORT_DIMS : Int = 3386;\n\tstatic inline var SUBPIXEL_BITS : Int = 3408;\n\tstatic inline var RED_BITS : Int = 3410;\n\tstatic inline var GREEN_BITS : Int = 3411;\n\tstatic inline var BLUE_BITS : Int = 3412;\n\tstatic inline var ALPHA_BITS : Int = 3413;\n\tstatic inline var DEPTH_BITS : Int = 3414;\n\tstatic inline var STENCIL_BITS : Int = 3415;\n\tstatic inline var POLYGON_OFFSET_UNITS : Int = 10752;\n\tstatic inline var POLYGON_OFFSET_FACTOR : Int = 32824;\n\tstatic inline var TEXTURE_BINDING_2D : Int = 32873;\n\tstatic inline var SAMPLE_BUFFERS : Int = 32936;\n\tstatic inline var SAMPLES : Int = 32937;\n\tstatic inline var SAMPLE_COVERAGE_VALUE : Int = 32938;\n\tstatic inline var SAMPLE_COVERAGE_INVERT : Int = 32939;\n\tstatic inline var COMPRESSED_TEXTURE_FORMATS : Int = 34467;\n\tstatic inline var DONT_CARE : Int = 4352;\n\tstatic inline var FASTEST : Int = 4353;\n\tstatic inline var NICEST : Int = 4354;\n\tstatic inline var GENERATE_MIPMAP_HINT : Int = 33170;\n\tstatic inline var BYTE : Int = 5120;\n\tstatic inline var UNSIGNED_BYTE : Int = 5121;\n\tstatic inline var SHORT : Int = 5122;\n\tstatic inline var UNSIGNED_SHORT : Int = 5123;\n\tstatic inline var INT : Int = 5124;\n\tstatic inline var UNSIGNED_INT : Int = 5125;\n\tstatic inline var FLOAT : Int = 5126;\n\tstatic inline var DEPTH_COMPONENT : Int = 6402;\n\tstatic inline var ALPHA : Int = 6406;\n\tstatic inline var RGB : Int = 6407;\n\tstatic inline var RGBA : Int = 6408;\n\tstatic inline var LUMINANCE : Int = 6409;\n\tstatic inline var LUMINANCE_ALPHA : Int = 6410;\n\tstatic inline var UNSIGNED_SHORT_4_4_4_4 : Int = 32819;\n\tstatic inline var UNSIGNED_SHORT_5_5_5_1 : Int = 32820;\n\tstatic inline var UNSIGNED_SHORT_5_6_5 : Int = 33635;\n\tstatic inline var FRAGMENT_SHADER : Int = 35632;\n\tstatic inline var VERTEX_SHADER : Int = 35633;\n\tstatic inline var MAX_VERTEX_ATTRIBS : Int = 34921;\n\tstatic inline var MAX_VERTEX_UNIFORM_VECTORS : Int = 36347;\n\tstatic inline var MAX_VARYING_VECTORS : Int = 36348;\n\tstatic inline var MAX_COMBINED_TEXTURE_IMAGE_UNITS : Int = 35661;\n\tstatic inline var MAX_VERTEX_TEXTURE_IMAGE_UNITS : Int = 35660;\n\tstatic inline var MAX_TEXTURE_IMAGE_UNITS : Int = 34930;\n\tstatic inline var MAX_FRAGMENT_UNIFORM_VECTORS : Int = 36349;\n\tstatic inline var SHADER_TYPE : Int = 35663;\n\tstatic inline var DELETE_STATUS : Int = 35712;\n\tstatic inline var LINK_STATUS : Int = 35714;\n\tstatic inline var VALIDATE_STATUS : Int = 35715;\n\tstatic inline var ATTACHED_SHADERS : Int = 35717;\n\tstatic inline var ACTIVE_UNIFORMS : Int = 35718;\n\tstatic inline var ACTIVE_ATTRIBUTES : Int = 35721;\n\tstatic inline var SHADING_LANGUAGE_VERSION : Int = 35724;\n\tstatic inline var CURRENT_PROGRAM : Int = 35725;\n\tstatic inline var NEVER : Int = 512;\n\tstatic inline var LESS : Int = 513;\n\tstatic inline var EQUAL : Int = 514;\n\tstatic inline var LEQUAL : Int = 515;\n\tstatic inline var GREATER : Int = 516;\n\tstatic inline var NOTEQUAL : Int = 517;\n\tstatic inline var GEQUAL : Int = 518;\n\tstatic inline var ALWAYS : Int = 519;\n\tstatic inline var KEEP : Int = 7680;\n\tstatic inline var REPLACE : Int = 7681;\n\tstatic inline var INCR : Int = 7682;\n\tstatic inline var DECR : Int = 7683;\n\tstatic inline var INVERT : Int = 5386;\n\tstatic inline var INCR_WRAP : Int = 34055;\n\tstatic inline var DECR_WRAP : Int = 34056;\n\tstatic inline var VENDOR : Int = 7936;\n\tstatic inline var RENDERER : Int = 7937;\n\tstatic inline var VERSION : Int = 7938;\n\tstatic inline var NEAREST : Int = 9728;\n\tstatic inline var LINEAR : Int = 9729;\n\tstatic inline var NEAREST_MIPMAP_NEAREST : Int = 9984;\n\tstatic inline var LINEAR_MIPMAP_NEAREST : Int = 9985;\n\tstatic inline var NEAREST_MIPMAP_LINEAR : Int = 9986;\n\tstatic inline var LINEAR_MIPMAP_LINEAR : Int = 9987;\n\tstatic inline var TEXTURE_MAG_FILTER : Int = 10240;\n\tstatic inline var TEXTURE_MIN_FILTER : Int = 10241;\n\tstatic inline var TEXTURE_WRAP_S : Int = 10242;\n\tstatic inline var TEXTURE_WRAP_T : Int = 10243;\n\tstatic inline var TEXTURE_2D : Int = 3553;\n\tstatic inline var TEXTURE : Int = 5890;\n\tstatic inline var TEXTURE_CUBE_MAP : Int = 34067;\n\tstatic inline var TEXTURE_BINDING_CUBE_MAP : Int = 34068;\n\tstatic inline var TEXTURE_CUBE_MAP_POSITIVE_X : Int = 34069;\n\tstatic inline var TEXTURE_CUBE_MAP_NEGATIVE_X : Int = 34070;\n\tstatic inline var TEXTURE_CUBE_MAP_POSITIVE_Y : Int = 34071;\n\tstatic inline var TEXTURE_CUBE_MAP_NEGATIVE_Y : Int = 34072;\n\tstatic inline var TEXTURE_CUBE_MAP_POSITIVE_Z : Int = 34073;\n\tstatic inline var TEXTURE_CUBE_MAP_NEGATIVE_Z : Int = 34074;\n\tstatic inline var MAX_CUBE_MAP_TEXTURE_SIZE : Int = 34076;\n\tstatic inline var TEXTURE0 : Int = 33984;\n\tstatic inline var TEXTURE1 : Int = 33985;\n\tstatic inline var TEXTURE2 : Int = 33986;\n\tstatic inline var TEXTURE3 : Int = 33987;\n\tstatic inline var TEXTURE4 : Int = 33988;\n\tstatic inline var TEXTURE5 : Int = 33989;\n\tstatic inline var TEXTURE6 : Int = 33990;\n\tstatic inline var TEXTURE7 : Int = 33991;\n\tstatic inline var TEXTURE8 : Int = 33992;\n\tstatic inline var TEXTURE9 : Int = 33993;\n\tstatic inline var TEXTURE10 : Int = 33994;\n\tstatic inline var TEXTURE11 : Int = 33995;\n\tstatic inline var TEXTURE12 : Int = 33996;\n\tstatic inline var TEXTURE13 : Int = 33997;\n\tstatic inline var TEXTURE14 : Int = 33998;\n\tstatic inline var TEXTURE15 : Int = 33999;\n\tstatic inline var TEXTURE16 : Int = 34000;\n\tstatic inline var TEXTURE17 : Int = 34001;\n\tstatic inline var TEXTURE18 : Int = 34002;\n\tstatic inline var TEXTURE19 : Int = 34003;\n\tstatic inline var TEXTURE20 : Int = 34004;\n\tstatic inline var TEXTURE21 : Int = 34005;\n\tstatic inline var TEXTURE22 : Int = 34006;\n\tstatic inline var TEXTURE23 : Int = 34007;\n\tstatic inline var TEXTURE24 : Int = 34008;\n\tstatic inline var TEXTURE25 : Int = 34009;\n\tstatic inline var TEXTURE26 : Int = 34010;\n\tstatic inline var TEXTURE27 : Int = 34011;\n\tstatic inline var TEXTURE28 : Int = 34012;\n\tstatic inline var TEXTURE29 : Int = 34013;\n\tstatic inline var TEXTURE30 : Int = 34014;\n\tstatic inline var TEXTURE31 : Int = 34015;\n\tstatic inline var ACTIVE_TEXTURE : Int = 34016;\n\tstatic inline var REPEAT : Int = 10497;\n\tstatic inline var CLAMP_TO_EDGE : Int = 33071;\n\tstatic inline var MIRRORED_REPEAT : Int = 33648;\n\tstatic inline var FLOAT_VEC2 : Int = 35664;\n\tstatic inline var FLOAT_VEC3 : Int = 35665;\n\tstatic inline var FLOAT_VEC4 : Int = 35666;\n\tstatic inline var INT_VEC2 : Int = 35667;\n\tstatic inline var INT_VEC3 : Int = 35668;\n\tstatic inline var INT_VEC4 : Int = 35669;\n\tstatic inline var BOOL : Int = 35670;\n\tstatic inline var BOOL_VEC2 : Int = 35671;\n\tstatic inline var BOOL_VEC3 : Int = 35672;\n\tstatic inline var BOOL_VEC4 : Int = 35673;\n\tstatic inline var FLOAT_MAT2 : Int = 35674;\n\tstatic inline var FLOAT_MAT3 : Int = 35675;\n\tstatic inline var FLOAT_MAT4 : Int = 35676;\n\tstatic inline var SAMPLER_2D : Int = 35678;\n\tstatic inline var SAMPLER_CUBE : Int = 35680;\n\tstatic inline var VERTEX_ATTRIB_ARRAY_ENABLED : Int = 34338;\n\tstatic inline var VERTEX_ATTRIB_ARRAY_SIZE : Int = 34339;\n\tstatic inline var VERTEX_ATTRIB_ARRAY_STRIDE : Int = 34340;\n\tstatic inline var VERTEX_ATTRIB_ARRAY_TYPE : Int = 34341;\n\tstatic inline var VERTEX_ATTRIB_ARRAY_NORMALIZED : Int = 34922;\n\tstatic inline var VERTEX_ATTRIB_ARRAY_POINTER : Int = 34373;\n\tstatic inline var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING : Int = 34975;\n\tstatic inline var IMPLEMENTATION_COLOR_READ_TYPE : Int = 35738;\n\tstatic inline var IMPLEMENTATION_COLOR_READ_FORMAT : Int = 35739;\n\tstatic inline var COMPILE_STATUS : Int = 35713;\n\tstatic inline var LOW_FLOAT : Int = 36336;\n\tstatic inline var MEDIUM_FLOAT : Int = 36337;\n\tstatic inline var HIGH_FLOAT : Int = 36338;\n\tstatic inline var LOW_INT : Int = 36339;\n\tstatic inline var MEDIUM_INT : Int = 36340;\n\tstatic inline var HIGH_INT : Int = 36341;\n\tstatic inline var FRAMEBUFFER : Int = 36160;\n\tstatic inline var RENDERBUFFER : Int = 36161;\n\tstatic inline var RGBA4 : Int = 32854;\n\tstatic inline var RGB5_A1 : Int = 32855;\n\tstatic inline var RGB565 : Int = 36194;\n\tstatic inline var DEPTH_COMPONENT16 : Int = 33189;\n\tstatic inline var STENCIL_INDEX8 : Int = 36168;\n\tstatic inline var DEPTH_STENCIL : Int = 34041;\n\tstatic inline var RENDERBUFFER_WIDTH : Int = 36162;\n\tstatic inline var RENDERBUFFER_HEIGHT : Int = 36163;\n\tstatic inline var RENDERBUFFER_INTERNAL_FORMAT : Int = 36164;\n\tstatic inline var RENDERBUFFER_RED_SIZE : Int = 36176;\n\tstatic inline var RENDERBUFFER_GREEN_SIZE : Int = 36177;\n\tstatic inline var RENDERBUFFER_BLUE_SIZE : Int = 36178;\n\tstatic inline var RENDERBUFFER_ALPHA_SIZE : Int = 36179;\n\tstatic inline var RENDERBUFFER_DEPTH_SIZE : Int = 36180;\n\tstatic inline var RENDERBUFFER_STENCIL_SIZE : Int = 36181;\n\tstatic inline var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE : Int = 36048;\n\tstatic inline var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME : Int = 36049;\n\tstatic inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL : Int = 36050;\n\tstatic inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE : Int = 36051;\n\tstatic inline var COLOR_ATTACHMENT0 : Int = 36064;\n\tstatic inline var DEPTH_ATTACHMENT : Int = 36096;\n\tstatic inline var STENCIL_ATTACHMENT : Int = 36128;\n\tstatic inline var DEPTH_STENCIL_ATTACHMENT : Int = 33306;\n\tstatic inline var NONE : Int = 0;\n\tstatic inline var FRAMEBUFFER_COMPLETE : Int = 36053;\n\tstatic inline var FRAMEBUFFER_INCOMPLETE_ATTACHMENT : Int = 36054;\n\tstatic inline var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT : Int = 36055;\n\tstatic inline var FRAMEBUFFER_INCOMPLETE_DIMENSIONS : Int = 36057;\n\tstatic inline var FRAMEBUFFER_UNSUPPORTED : Int = 36061;\n\tstatic inline var FRAMEBUFFER_BINDING : Int = 36006;\n\tstatic inline var RENDERBUFFER_BINDING : Int = 36007;\n\tstatic inline var MAX_RENDERBUFFER_SIZE : Int = 34024;\n\tstatic inline var INVALID_FRAMEBUFFER_OPERATION : Int = 1286;\n\tstatic inline var UNPACK_FLIP_Y_WEBGL : Int = 37440;\n\tstatic inline var UNPACK_PREMULTIPLY_ALPHA_WEBGL : Int = 37441;\n\tstatic inline var CONTEXT_LOST_WEBGL : Int = 37442;\n\tstatic inline var UNPACK_COLORSPACE_CONVERSION_WEBGL : Int = 37443;\n\tstatic inline var BROWSER_DEFAULT_WEBGL : Int = 37444;\n\t\n\t\n\t/**\n\t\tInitializes and creates the buffer object's data store.\n\t**/\n\t@:overload( function( target : Int, size : Int, usage : Int ) : Void {} )\n\t@:overload( function( target : Int, srcData : js.lib.ArrayBuffer, usage : Int ) : Void {} )\n\t@:overload( function( target : Int, srcData : js.lib.ArrayBufferView, usage : Int ) : Void {} )\n\tfunction bufferData( target : Int, srcData : js.lib.ArrayBufferView, usage : Int, srcOffset : Int, length : Int = 0 ) : Void;\n\t\n\t/**\n\t\tUpdates a subset of a buffer object's data store.\n\t**/\n\t@:overload( function( target : Int, offset : Int, srcData : js.lib.ArrayBuffer ) : Void {} )\n\t@:overload( function( target : Int, offset : Int, srcData : js.lib.ArrayBufferView ) : Void {} )\n\tfunction bufferSubData( target : Int, dstByteOffset : Int, srcData : js.lib.ArrayBufferView, srcOffset : Int, length : Int = 0 ) : Void;\n\t\n\t/**\n\t\tCopies part of the data of a buffer to another buffer.\n\t**/\n\tfunction copyBufferSubData( readTarget : Int, writeTarget : Int, readOffset : Int, writeOffset : Int, size : Int ) : Void;\n\t\n\t/**\n\t\tReads data from a buffer and writes them to an `ArrayBuffer` or `SharedArrayBuffer`.\n\t**/\n\tfunction getBufferSubData( target : Int, srcByteOffset : Int, dstData : js.lib.ArrayBufferView, dstOffset : Int = 0, length : Int = 0 ) : Void;\n\t\n\t/**\n\t\tTransfers a block of pixels from the read framebuffer to the draw framebuffer.\n\t**/\n\tfunction blitFramebuffer( srcX0 : Int, srcY0 : Int, srcX1 : Int, srcY1 : Int, dstX0 : Int, dstY0 : Int, dstX1 : Int, dstY1 : Int, mask : Int, filter : Int ) : Void;\n\t\n\t/**\n\t\tAttaches a single layer of a texture to a framebuffer.\n\t**/\n\tfunction framebufferTextureLayer( target : Int, attachment : Int, texture : Texture, level : Int, layer : Int ) : Void;\n\t\n\t/**\n\t\tInvalidates the contents of attachments in a framebuffer.\n\t\t@throws DOMError\n\t**/\n\tfunction invalidateFramebuffer( target : Int, attachments : Array<Int> ) : Void;\n\t\n\t/**\n\t\tInvalidates portions of the contents of attachments in a framebuffer\n\t\t@throws DOMError\n\t**/\n\tfunction invalidateSubFramebuffer( target : Int, attachments : Array<Int>, x : Int, y : Int, width : Int, height : Int ) : Void;\n\t\n\t/**\n\t\tSelects a color buffer as the source for pixels.\n\t**/\n\tfunction readBuffer( src : Int ) : Void;\n\t\n\t/**\n\t\tReturns information about implementation-dependent support for internal formats.\n\t\t@throws DOMError\n\t**/\n\tfunction getInternalformatParameter( target : Int, internalformat : Int, pname : Int ) : Dynamic;\n\t\n\t/**\n\t\tCreates and initializes a renderbuffer object's data store and allows specifying the number of samples to be used.\n\t**/\n\tfunction renderbufferStorageMultisample( target : Int, samples : Int, internalformat : Int, width : Int, height : Int ) : Void;\n\t\n\t/**\n\t\tSpecifies all levels of two-dimensional texture storage.\n\t**/\n\tfunction texStorage2D( target : Int, levels : Int, internalformat : Int, width : Int, height : Int ) : Void;\n\t\n\t/**\n\t\tSpecifies all levels of a three-dimensional texture or two-dimensional array texture.\n\t**/\n\tfunction texStorage3D( target : Int, levels : Int, internalformat : Int, width : Int, height : Int, depth : Int ) : Void;\n\t/** @throws DOMError */\n\t@:overload( function( target : Int, level : Int, internalformat : Int, width : Int, height : Int, border : Int, format : Int, type : Int, pixels : js.lib.ArrayBufferView ) : Void {} )\n\t@:overload( function( target : Int, level : Int, internalformat : Int, format : Int, type : Int, source : js.html.CanvasElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, internalformat : Int, format : Int, type : Int, source : js.html.ImageElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, internalformat : Int, format : Int, type : Int, source : js.html.VideoElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, internalformat : Int, format : Int, type : Int, source : js.html.ImageBitmap ) : Void {} )\n\t@:overload( function( target : Int, level : Int, internalformat : Int, format : Int, type : Int, source : js.html.ImageData ) : Void {} )\n\t@:overload( function( target : Int, level : Int, internalformat : Int, width : Int, height : Int, border : Int, format : Int, type : Int, pboOffset : Int ) : Void {} )\n\t@:overload( function( target : Int, level : Int, internalformat : Int, width : Int, height : Int, border : Int, format : Int, type : Int, source : js.html.CanvasElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, internalformat : Int, width : Int, height : Int, border : Int, format : Int, type : Int, source : js.html.ImageElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, internalformat : Int, width : Int, height : Int, border : Int, format : Int, type : Int, source : js.html.VideoElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, internalformat : Int, width : Int, height : Int, border : Int, format : Int, type : Int, source : js.html.ImageBitmap ) : Void {} )\n\t@:overload( function( target : Int, level : Int, internalformat : Int, width : Int, height : Int, border : Int, format : Int, type : Int, source : js.html.ImageData ) : Void {} )\n\tfunction texImage2D( target : Int, level : Int, internalformat : Int, width : Int, height : Int, border : Int, format : Int, type : Int, srcData : js.lib.ArrayBufferView, srcOffset : Int ) : Void;\n\t/** @throws DOMError */\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, width : Int, height : Int, format : Int, type : Int, pixels : js.lib.ArrayBufferView ) : Void {} )\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, format : Int, type : Int, source : js.html.CanvasElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, format : Int, type : Int, source : js.html.ImageElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, format : Int, type : Int, source : js.html.VideoElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, format : Int, type : Int, source : js.html.ImageBitmap ) : Void {} )\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, format : Int, type : Int, source : js.html.ImageData ) : Void {} )\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, width : Int, height : Int, format : Int, type : Int, pboOffset : Int ) : Void {} )\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, width : Int, height : Int, format : Int, type : Int, source : js.html.CanvasElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, width : Int, height : Int, format : Int, type : Int, source : js.html.ImageElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, width : Int, height : Int, format : Int, type : Int, source : js.html.VideoElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, width : Int, height : Int, format : Int, type : Int, source : js.html.ImageBitmap ) : Void {} )\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, width : Int, height : Int, format : Int, type : Int, source : js.html.ImageData ) : Void {} )\n\tfunction texSubImage2D( target : Int, level : Int, xoffset : Int, yoffset : Int, width : Int, height : Int, format : Int, type : Int, srcData : js.lib.ArrayBufferView, srcOffset : Int ) : Void;\n\t\n\t/**\n\t\tSpecifies a three-dimensional texture image.\n\t\t@throws DOMError\n\t**/\n\t@:overload( function( target : Int, level : Int, internalformat : Int, width : Int, height : Int, depth : Int, border : Int, format : Int, type : Int, pboOffset : Int ) : Void {} )\n\t@:overload( function( target : Int, level : Int, internalformat : Int, width : Int, height : Int, depth : Int, border : Int, format : Int, type : Int, source : js.html.CanvasElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, internalformat : Int, width : Int, height : Int, depth : Int, border : Int, format : Int, type : Int, source : js.html.ImageElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, internalformat : Int, width : Int, height : Int, depth : Int, border : Int, format : Int, type : Int, source : js.html.VideoElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, internalformat : Int, width : Int, height : Int, depth : Int, border : Int, format : Int, type : Int, source : js.html.ImageBitmap ) : Void {} )\n\t@:overload( function( target : Int, level : Int, internalformat : Int, width : Int, height : Int, depth : Int, border : Int, format : Int, type : Int, source : js.html.ImageData ) : Void {} )\n\t@:overload( function( target : Int, level : Int, internalformat : Int, width : Int, height : Int, depth : Int, border : Int, format : Int, type : Int, srcData : js.lib.ArrayBufferView ) : Void {} )\n\tfunction texImage3D( target : Int, level : Int, internalformat : Int, width : Int, height : Int, depth : Int, border : Int, format : Int, type : Int, srcData : js.lib.ArrayBufferView, srcOffset : Int ) : Void;\n\t\n\t/**\n\t\tSpecifies a sub-rectangle of the current 3D texture.\n\t\t@throws DOMError\n\t**/\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : Int, height : Int, depth : Int, format : Int, type : Int, pboOffset : Int ) : Void {} )\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : Int, height : Int, depth : Int, format : Int, type : Int, source : js.html.CanvasElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : Int, height : Int, depth : Int, format : Int, type : Int, source : js.html.ImageElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : Int, height : Int, depth : Int, format : Int, type : Int, source : js.html.VideoElement ) : Void {} )\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : Int, height : Int, depth : Int, format : Int, type : Int, source : js.html.ImageBitmap ) : Void {} )\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : Int, height : Int, depth : Int, format : Int, type : Int, source : js.html.ImageData ) : Void {} )\n\tfunction texSubImage3D( target : Int, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : Int, height : Int, depth : Int, format : Int, type : Int, srcData : js.lib.ArrayBufferView, srcOffset : Int = 0 ) : Void;\n\t\n\t/**\n\t\tCopies pixels from the current `WebGLFramebuffer` into an existing 3D texture sub-image.\n\t**/\n\tfunction copyTexSubImage3D( target : Int, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, x : Int, y : Int, width : Int, height : Int ) : Void;\n\t@:overload( function( target : Int, level : Int, internalformat : Int, width : Int, height : Int, border : Int, imageSize : Int, offset : Int ) : Void {} )\n\tfunction compressedTexImage2D( target : Int, level : Int, internalformat : Int, width : Int, height : Int, border : Int, srcData : js.lib.ArrayBufferView, srcOffset : Int = 0, srcLengthOverride : Int = 0 ) : Void;\n\t\n\t/**\n\t\tSpecifies a three-dimensional texture image in a compressed format.\n\t**/\n\t@:overload( function( target : Int, level : Int, internalformat : Int, width : Int, height : Int, depth : Int, border : Int, imageSize : Int, offset : Int ) : Void {} )\n\tfunction compressedTexImage3D( target : Int, level : Int, internalformat : Int, width : Int, height : Int, depth : Int, border : Int, srcData : js.lib.ArrayBufferView, srcOffset : Int = 0, srcLengthOverride : Int = 0 ) : Void;\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, width : Int, height : Int, format : Int, imageSize : Int, offset : Int ) : Void {} )\n\tfunction compressedTexSubImage2D( target : Int, level : Int, xoffset : Int, yoffset : Int, width : Int, height : Int, format : Int, srcData : js.lib.ArrayBufferView, srcOffset : Int = 0, srcLengthOverride : Int = 0 ) : Void;\n\t\n\t/**\n\t\tSpecifies a three-dimensional sub-rectangle for a texture image in a compressed format.\n\t**/\n\t@:overload( function( target : Int, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : Int, height : Int, depth : Int, format : Int, imageSize : Int, offset : Int ) : Void {} )\n\tfunction compressedTexSubImage3D( target : Int, level : Int, xoffset : Int, yoffset : Int, zoffset : Int, width : Int, height : Int, depth : Int, format : Int, srcData : js.lib.ArrayBufferView, srcOffset : Int = 0, srcLengthOverride : Int = 0 ) : Void;\n\t\n\t/**\n\t\tReturns the binding of color numbers to user-defined varying out variables.\n\t**/\n\tfunction getFragDataLocation( program : Program, name : String ) : Int;\n\tfunction uniform1ui( location : UniformLocation, v0 : Int ) : Void;\n\tfunction uniform2ui( location : UniformLocation, v0 : Int, v1 : Int ) : Void;\n\tfunction uniform3ui( location : UniformLocation, v0 : Int, v1 : Int, v2 : Int ) : Void;\n\tfunction uniform4ui( location : UniformLocation, v0 : Int, v1 : Int, v2 : Int, v3 : Int ) : Void;\n\t@:overload( function( location : UniformLocation, data : Array<Float>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniform1fv( location : UniformLocation, data : js.lib.Float32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, data : Array<Float>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniform2fv( location : UniformLocation, data : js.lib.Float32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, data : Array<Float>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniform3fv( location : UniformLocation, data : js.lib.Float32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, data : Array<Float>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniform4fv( location : UniformLocation, data : js.lib.Float32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, data : Array<Int>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniform1iv( location : UniformLocation, data : js.lib.Int32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, data : Array<Int>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniform2iv( location : UniformLocation, data : js.lib.Int32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, data : Array<Int>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniform3iv( location : UniformLocation, data : js.lib.Int32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, data : Array<Int>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniform4iv( location : UniformLocation, data : js.lib.Int32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, data : Array<Int>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniform1uiv( location : UniformLocation, data : js.lib.Uint32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, data : Array<Int>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniform2uiv( location : UniformLocation, data : js.lib.Uint32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, data : Array<Int>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniform3uiv( location : UniformLocation, data : js.lib.Uint32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, data : Array<Int>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniform4uiv( location : UniformLocation, data : js.lib.Uint32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, transpose : Bool, data : Array<Float>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniformMatrix2fv( location : UniformLocation, transpose : Bool, data : js.lib.Float32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, transpose : Bool, data : Array<Float>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniformMatrix3x2fv( location : UniformLocation, transpose : Bool, data : js.lib.Float32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, transpose : Bool, data : Array<Float>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniformMatrix4x2fv( location : UniformLocation, transpose : Bool, data : js.lib.Float32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, transpose : Bool, data : Array<Float>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniformMatrix2x3fv( location : UniformLocation, transpose : Bool, data : js.lib.Float32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, transpose : Bool, data : Array<Float>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniformMatrix3fv( location : UniformLocation, transpose : Bool, data : js.lib.Float32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, transpose : Bool, data : Array<Float>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniformMatrix4x3fv( location : UniformLocation, transpose : Bool, data : js.lib.Float32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, transpose : Bool, data : Array<Float>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniformMatrix2x4fv( location : UniformLocation, transpose : Bool, data : js.lib.Float32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, transpose : Bool, data : Array<Float>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniformMatrix3x4fv( location : UniformLocation, transpose : Bool, data : js.lib.Float32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\t@:overload( function( location : UniformLocation, transpose : Bool, data : Array<Float>, srcOffset : Int = 0, srcLength : Int = 0) : Void {} )\n\tfunction uniformMatrix4fv( location : UniformLocation, transpose : Bool, data : js.lib.Float32Array, srcOffset : Int = 0, srcLength : Int = 0 ) : Void;\n\tfunction vertexAttribI4i( index : Int, x : Int, y : Int, z : Int, w : Int ) : Void;\n\t@:overload( function( index : Int, values : Array<Int>) : Void {} )\n\tfunction vertexAttribI4iv( index : Int, values : js.lib.Int32Array ) : Void;\n\tfunction vertexAttribI4ui( index : Int, x : Int, y : Int, z : Int, w : Int ) : Void;\n\t@:overload( function( index : Int, values : Array<Int>) : Void {} )\n\tfunction vertexAttribI4uiv( index : Int, values : js.lib.Uint32Array ) : Void;\n\t\n\t/**\n\t\tSpecifies integer data formats and locations of vertex attributes in a vertex attributes array.\n\t**/\n\tfunction vertexAttribIPointer( index : Int, size : Int, type : Int, stride : Int, offset : Int ) : Void;\n\t\n\t/**\n\t\tModifies the rate at which generic vertex attributes advance when rendering multiple instances of primitives with `WebGL2RenderingContext.drawArraysInstanced()` and `WebGL2RenderingContext.drawElementsInstanced()`.\n\t**/\n\tfunction vertexAttribDivisor( index : Int, divisor : Int ) : Void;\n\t\n\t/**\n\t\tRenders primitives from array data. In addition, it can execute multiple instances of the range of elements.\n\t**/\n\tfunction drawArraysInstanced( mode : Int, first : Int, count : Int, instanceCount : Int ) : Void;\n\t\n\t/**\n\t\tRenders primitives from array data. In addition, it can execute multiple instances of a set of elements.\n\t**/\n\tfunction drawElementsInstanced( mode : Int, count : Int, type : Int, offset : Int, instanceCount : Int ) : Void;\n\t\n\t/**\n\t\tRenders primitives from array data in a given range.\n\t**/\n\tfunction drawRangeElements( mode : Int, start : Int, end : Int, count : Int, type : Int, offset : Int ) : Void;\n\t/** @throws DOMError */\n\t@:overload( function( x : Int, y : Int, width : Int, height : Int, format : Int, type : Int, dstData : js.lib.ArrayBufferView ) : Void {} )\n\t@:overload( function( x : Int, y : Int, width : Int, height : Int, format : Int, type : Int, offset : Int ) : Void {} )\n\tfunction readPixels( x : Int, y : Int, width : Int, height : Int, format : Int, type : Int, dstData : js.lib.ArrayBufferView, dstOffset : Int ) : Void;\n\t\n\t/**\n\t\tSpecifies a list of color buffers to be drawn into.\n\t**/\n\tfunction drawBuffers( buffers : Array<Int> ) : Void;\n\t@:overload( function( buffer : Int, drawbuffer : Int, values : Array<Float>, srcOffset : Int = 0) : Void {} )\n\tfunction clearBufferfv( buffer : Int, drawbuffer : Int, values : js.lib.Float32Array, srcOffset : Int = 0 ) : Void;\n\t@:overload( function( buffer : Int, drawbuffer : Int, values : Array<Int>, srcOffset : Int = 0) : Void {} )\n\tfunction clearBufferiv( buffer : Int, drawbuffer : Int, values : js.lib.Int32Array, srcOffset : Int = 0 ) : Void;\n\t@:overload( function( buffer : Int, drawbuffer : Int, values : Array<Int>, srcOffset : Int = 0) : Void {} )\n\tfunction clearBufferuiv( buffer : Int, drawbuffer : Int, values : js.lib.Uint32Array, srcOffset : Int = 0 ) : Void;\n\tfunction clearBufferfi( buffer : Int, drawbuffer : Int, depth : Float, stencil : Int ) : Void;\n\t\n\t/**\n\t\tCreates a new `WebGLQuery` object.\n\t**/\n\tfunction createQuery() : Query;\n\t\n\t/**\n\t\tDeletes a given `WebGLQuery` object.\n\t**/\n\tfunction deleteQuery( query : Query ) : Void;\n\t\n\t/**\n\t\tReturns `true` if a given object is a valid `WebGLQuery` object.\n\t**/\n\tfunction isQuery( query : Query ) : Bool;\n\t\n\t/**\n\t\tBegins an asynchronous query.\n\t**/\n\tfunction beginQuery( target : Int, query : Query ) : Void;\n\t\n\t/**\n\t\tMarks the end of an asynchronous query.\n\t**/\n\tfunction endQuery( target : Int ) : Void;\n\t\n\t/**\n\t\tReturns a `WebGLQuery` object for a given target.\n\t**/\n\tfunction getQuery( target : Int, pname : Int ) : Dynamic;\n\t\n\t/**\n\t\tReturns information about a query.\n\t**/\n\tfunction getQueryParameter( query : Query, pname : Int ) : Dynamic;\n\t\n\t/**\n\t\tCreates a new `WebGLSampler` object.\n\t**/\n\tfunction createSampler() : Sampler;\n\t\n\t/**\n\t\tDeletes a given `WebGLSampler` object.\n\t**/\n\tfunction deleteSampler( sampler : Sampler ) : Void;\n\t\n\t/**\n\t\tReturns `true` if a given object is a valid `WebGLSampler` object.\n\t**/\n\tfunction isSampler( sampler : Sampler ) : Bool;\n\t\n\t/**\n\t\tBinds a given `WebGLSampler` to a texture unit.\n\t**/\n\tfunction bindSampler( unit : Int, sampler : Sampler ) : Void;\n\tfunction samplerParameteri( sampler : Sampler, pname : Int, param : Int ) : Void;\n\tfunction samplerParameterf( sampler : Sampler, pname : Int, param : Float ) : Void;\n\t\n\t/**\n\t\tReturns sampler parameter information.\n\t**/\n\tfunction getSamplerParameter( sampler : Sampler, pname : Int ) : Dynamic;\n\t\n\t/**\n\t\tCreates a new `WebGLSync` object and inserts it into the GL command stream.\n\t**/\n\tfunction fenceSync( condition : Int, flags : Int ) : Sync;\n\t\n\t/**\n\t\tReturns `true` if the passed object is a valid `WebGLSync` object.\n\t**/\n\tfunction isSync( sync : Sync ) : Bool;\n\t\n\t/**\n\t\tDeletes a given `WebGLSync` object.\n\t**/\n\tfunction deleteSync( sync : Sync ) : Void;\n\t\n\t/**\n\t\t\n\t\t Blocks and waits for a `WebGLSync` object to become signaled or a given timeout to be passed.\n\t\t \n\t**/\n\tfunction clientWaitSync( sync : Sync, flags : Int, timeout : Int ) : Int;\n\t\n\t/**\n\t\tReturns immediately, but waits on the GL server until the given `WebGLSync` object is signaled.\n\t**/\n\tfunction waitSync( sync : Sync, flags : Int, timeout : Int ) : Void;\n\t\n\t/**\n\t\tReturns parameter information of a `WebGLSync` object.\n\t**/\n\tfunction getSyncParameter( sync : Sync, pname : Int ) : Dynamic;\n\t\n\t/**\n\t\tCreates and initializes `WebGLTransformFeedback` objects.\n\t**/\n\tfunction createTransformFeedback() : TransformFeedback;\n\t\n\t/**\n\t\tDeletes a given `WebGLTransformFeedback` object.\n\t**/\n\tfunction deleteTransformFeedback( tf : TransformFeedback ) : Void;\n\t\n\t/**\n\t\tReturns `true` if the passed object is a valid `WebGLTransformFeedback` object.\n\t**/\n\tfunction isTransformFeedback( tf : TransformFeedback ) : Bool;\n\t\n\t/**\n\t\tBinds a passed `WebGLTransformFeedback` object to the current GL state.\n\t**/\n\tfunction bindTransformFeedback( target : Int, tf : TransformFeedback ) : Void;\n\t\n\t/**\n\t\tStarts a transform feedback operation.\n\t**/\n\tfunction beginTransformFeedback( primitiveMode : Int ) : Void;\n\t\n\t/**\n\t\tEnds a transform feedback operation.\n\t**/\n\tfunction endTransformFeedback() : Void;\n\t\n\t/**\n\t\tSpecifies values to record in `WebGLTransformFeedback` buffers.\n\t**/\n\tfunction transformFeedbackVaryings( program : Program, varyings : Array<String>, bufferMode : Int ) : Void;\n\t\n\t/**\n\t\tReturns information about varying variables from `WebGLTransformFeedback` buffers.\n\t**/\n\tfunction getTransformFeedbackVarying( program : Program, index : Int ) : ActiveInfo;\n\t\n\t/**\n\t\tPauses a transform feedback operation.\n\t**/\n\tfunction pauseTransformFeedback() : Void;\n\t\n\t/**\n\t\tResumes a transform feedback operation.\n\t**/\n\tfunction resumeTransformFeedback() : Void;\n\t\n\t/**\n\t\tBinds a given `WebGLBuffer` to a given binding point (`target`) at a given `index`.\n\t**/\n\tfunction bindBufferBase( target : Int, index : Int, buffer : Buffer ) : Void;\n\t\n\t/**\n\t\tBinds a range of a given `WebGLBuffer` to a given binding point (`target`) at a given `index`.\n\t**/\n\tfunction bindBufferRange( target : Int, index : Int, buffer : Buffer, offset : Int, size : Int ) : Void;\n\t\n\t/**\n\t\tReturns the indexed value for the given `target`.\n\t\t@throws DOMError\n\t**/\n\tfunction getIndexedParameter( target : Int, index : Int ) : Dynamic;\n\t\n\t/**\n\t\t\n\t\t Retrieves the indices of a number of uniforms within a `WebGLProgram`.\n\t\t \n\t**/\n\tfunction getUniformIndices( program : Program, uniformNames : Array<String> ) : Array<Int>;\n\t\n\t/**\n\t\tRetrieves information about active uniforms within a `WebGLProgram`.\n\t**/\n\tfunction getActiveUniforms( program : Program, uniformIndices : Array<Int>, pname : Int ) : Dynamic;\n\t\n\t/**\n\t\tRetrieves the index of a uniform block within a `WebGLProgram`.\n\t**/\n\tfunction getUniformBlockIndex( program : Program, uniformBlockName : String ) : Int;\n\t\n\t/**\n\t\tRetrieves information about an active uniform block within a `WebGLProgram`.\n\t\t@throws DOMError\n\t**/\n\tfunction getActiveUniformBlockParameter( program : Program, uniformBlockIndex : Int, pname : Int ) : Dynamic;\n\t\n\t/**\n\t\tRetrieves the name of the active uniform block at a given index within a `WebGLProgram`.\n\t**/\n\tfunction getActiveUniformBlockName( program : Program, uniformBlockIndex : Int ) : String;\n\t\n\t/**\n\t\tAssigns binding points for active uniform blocks.\n\t**/\n\tfunction uniformBlockBinding( program : Program, uniformBlockIndex : Int, uniformBlockBinding : Int ) : Void;\n\t\n\t/**\n\t\tCreates a new `WebGLVertexArrayObject`.\n\t**/\n\tfunction createVertexArray() : VertexArrayObject;\n\t\n\t/**\n\t\tDeletes a given `WebGLVertexArrayObject`.\n\t**/\n\tfunction deleteVertexArray( vertexArray : VertexArrayObject ) : Void;\n\t\n\t/**\n\t\tReturns `true` if a given object is a valid `WebGLVertexArrayObject`.\n\t**/\n\tfunction isVertexArray( vertexArray : VertexArrayObject ) : Bool;\n\t\n\t/**\n\t\tBinds a given `WebGLVertexArrayObject` to the buffer.\n\t**/\n\tfunction bindVertexArray( array : VertexArrayObject ) : Void;\n\tfunction getContextAttributes() : ContextAttributes;\n\tfunction isContextLost() : Bool;\n\tfunction getSupportedExtensions() : Array<String>;\n\t/** @throws DOMError */\n\tfunction getExtension<T>( name : Extension<T> ) : T;\n\tfunction activeTexture( texture : Int ) : Void;\n\tfunction attachShader( program : Program, shader : Shader ) : Void;\n\tfunction bindAttribLocation( program : Program, index : Int, name : String ) : Void;\n\tfunction bindBuffer( target : Int, buffer : Buffer ) : Void;\n\tfunction bindFramebuffer( target : Int, framebuffer : Framebuffer ) : Void;\n\tfunction bindRenderbuffer( target : Int, renderbuffer : Renderbuffer ) : Void;\n\tfunction bindTexture( target : Int, texture : Texture ) : Void;\n\tfunction blendColor( red : Float, green : Float, blue : Float, alpha : Float ) : Void;\n\tfunction blendEquation( mode : Int ) : Void;\n\tfunction blendEquationSeparate( modeRGB : Int, modeAlpha : Int ) : Void;\n\tfunction blendFunc( sfactor : Int, dfactor : Int ) : Void;\n\tfunction blendFuncSeparate( srcRGB : Int, dstRGB : Int, srcAlpha : Int, dstAlpha : Int ) : Void;\n\tfunction checkFramebufferStatus( target : Int ) : Int;\n\tfunction clear( mask : Int ) : Void;\n\tfunction clearColor( red : Float, green : Float, blue : Float, alpha : Float ) : Void;\n\tfunction clearDepth( depth : Float ) : Void;\n\tfunction clearStencil( s : Int ) : Void;\n\tfunction colorMask( red : Bool, green : Bool, blue : Bool, alpha : Bool ) : Void;\n\tfunction compileShader( shader : Shader ) : Void;\n\tfunction copyTexImage2D( target : Int, level : Int, internalformat : Int, x : Int, y : Int, width : Int, height : Int, border : Int ) : Void;\n\tfunction copyTexSubImage2D( target : Int, level : Int, xoffset : Int, yoffset : Int, x : Int, y : Int, width : Int, height : Int ) : Void;\n\tfunction createBuffer() : Buffer;\n\tfunction createFramebuffer() : Framebuffer;\n\tfunction createProgram() : Program;\n\tfunction createRenderbuffer() : Renderbuffer;\n\tfunction createShader( type : Int ) : Shader;\n\tfunction createTexture() : Texture;\n\tfunction cullFace( mode : Int ) : Void;\n\tfunction deleteBuffer( buffer : Buffer ) : Void;\n\tfunction deleteFramebuffer( framebuffer : Framebuffer ) : Void;\n\tfunction deleteProgram( program : Program ) : Void;\n\tfunction deleteRenderbuffer( renderbuffer : Renderbuffer ) : Void;\n\tfunction deleteShader( shader : Shader ) : Void;\n\tfunction deleteTexture( texture : Texture ) : Void;\n\tfunction depthFunc( func : Int ) : Void;\n\tfunction depthMask( flag : Bool ) : Void;\n\tfunction depthRange( zNear : Float, zFar : Float ) : Void;\n\tfunction detachShader( program : Program, shader : Shader ) : Void;\n\tfunction disable( cap : Int ) : Void;\n\tfunction disableVertexAttribArray( index : Int ) : Void;\n\tfunction drawArrays( mode : Int, first : Int, count : Int ) : Void;\n\tfunction drawElements( mode : Int, count : Int, type : Int, offset : Int ) : Void;\n\tfunction enable( cap : Int ) : Void;\n\tfunction enableVertexAttribArray( index : Int ) : Void;\n\tfunction finish() : Void;\n\tfunction flush() : Void;\n\tfunction framebufferRenderbuffer( target : Int, attachment : Int, renderbuffertarget : Int, renderbuffer : Renderbuffer ) : Void;\n\tfunction framebufferTexture2D( target : Int, attachment : Int, textarget : Int, texture : Texture, level : Int ) : Void;\n\tfunction frontFace( mode : Int ) : Void;\n\tfunction generateMipmap( target : Int ) : Void;\n\tfunction getActiveAttrib( program : Program, index : Int ) : ActiveInfo;\n\tfunction getActiveUniform( program : Program, index : Int ) : ActiveInfo;\n\tfunction getAttachedShaders( program : Program ) : Array<Shader>;\n\tfunction getAttribLocation( program : Program, name : String ) : Int;\n\tfunction getBufferParameter( target : Int, pname : Int ) : Dynamic;\n\t/** @throws DOMError */\n\tfunction getParameter( pname : Int ) : Dynamic;\n\tfunction getError() : Int;\n\t/** @throws DOMError */\n\tfunction getFramebufferAttachmentParameter( target : Int, attachment : Int, pname : Int ) : Dynamic;\n\tfunction getProgramParameter( program : Program, pname : Int ) : Dynamic;\n\tfunction getProgramInfoLog( program : Program ) : String;\n\tfunction getRenderbufferParameter( target : Int, pname : Int ) : Dynamic;\n\tfunction getShaderParameter( shader : Shader, pname : Int ) : Dynamic;\n\tfunction getShaderPrecisionFormat( shadertype : Int, precisiontype : Int ) : ShaderPrecisionFormat;\n\tfunction getShaderInfoLog( shader : Shader ) : String;\n\tfunction getShaderSource( shader : Shader ) : String;\n\tfunction getTexParameter( target : Int, pname : Int ) : Dynamic;\n\tfunction getUniform( program : Program, location : UniformLocation ) : Dynamic;\n\tfunction getUniformLocation( program : Program, name : String ) : UniformLocation;\n\t/** @throws DOMError */\n\tfunction getVertexAttrib( index : Int, pname : Int ) : Dynamic;\n\tfunction getVertexAttribOffset( index : Int, pname : Int ) : Int;\n\tfunction hint( target : Int, mode : Int ) : Void;\n\tfunction isBuffer( buffer : Buffer ) : Bool;\n\tfunction isEnabled( cap : Int ) : Bool;\n\tfunction isFramebuffer( framebuffer : Framebuffer ) : Bool;\n\tfunction isProgram( program : Program ) : Bool;\n\tfunction isRenderbuffer( renderbuffer : Renderbuffer ) : Bool;\n\tfunction isShader( shader : Shader ) : Bool;\n\tfunction isTexture( texture : Texture ) : Bool;\n\tfunction lineWidth( width : Float ) : Void;\n\tfunction linkProgram( program : Program ) : Void;\n\tfunction pixelStorei( pname : Int, param : Int ) : Void;\n\tfunction polygonOffset( factor : Float, units : Float ) : Void;\n\tfunction renderbufferStorage( target : Int, internalformat : Int, width : Int, height : Int ) : Void;\n\tfunction sampleCoverage( value : Float, invert : Bool ) : Void;\n\tfunction scissor( x : Int, y : Int, width : Int, height : Int ) : Void;\n\tfunction shaderSource( shader : Shader, source : String ) : Void;\n\tfunction stencilFunc( func : Int, ref : Int, mask : Int ) : Void;\n\tfunction stencilFuncSeparate( face : Int, func : Int, ref : Int, mask : Int ) : Void;\n\tfunction stencilMask( mask : Int ) : Void;\n\tfunction stencilMaskSeparate( face : Int, mask : Int ) : Void;\n\tfunction stencilOp( fail : Int, zfail : Int, zpass : Int ) : Void;\n\tfunction stencilOpSeparate( face : Int, fail : Int, zfail : Int, zpass : Int ) : Void;\n\tfunction texParameterf( target : Int, pname : Int, param : Float ) : Void;\n\tfunction texParameteri( target : Int, pname : Int, param : Int ) : Void;\n\tfunction uniform1f( location : UniformLocation, x : Float ) : Void;\n\tfunction uniform2f( location : UniformLocation, x : Float, y : Float ) : Void;\n\tfunction uniform3f( location : UniformLocation, x : Float, y : Float, z : Float ) : Void;\n\tfunction uniform4f( location : UniformLocation, x : Float, y : Float, z : Float, w : Float ) : Void;\n\tfunction uniform1i( location : UniformLocation, x : Int ) : Void;\n\tfunction uniform2i( location : UniformLocation, x : Int, y : Int ) : Void;\n\tfunction uniform3i( location : UniformLocation, x : Int, y : Int, z : Int ) : Void;\n\tfunction uniform4i( location : UniformLocation, x : Int, y : Int, z : Int, w : Int ) : Void;\n\tfunction useProgram( program : Program ) : Void;\n\tfunction validateProgram( program : Program ) : Void;\n\tfunction vertexAttrib1f( indx : Int, x : Float ) : Void;\n\t@:overload( function( indx : Int, values : Array<Float>) : Void {} )\n\tfunction vertexAttrib1fv( indx : Int, values : js.lib.Float32Array ) : Void;\n\tfunction vertexAttrib2f( indx : Int, x : Float, y : Float ) : Void;\n\t@:overload( function( indx : Int, values : Array<Float>) : Void {} )\n\tfunction vertexAttrib2fv( indx : Int, values : js.lib.Float32Array ) : Void;\n\tfunction vertexAttrib3f( indx : Int, x : Float, y : Float, z : Float ) : Void;\n\t@:overload( function( indx : Int, values : Array<Float>) : Void {} )\n\tfunction vertexAttrib3fv( indx : Int, values : js.lib.Float32Array ) : Void;\n\tfunction vertexAttrib4f( indx : Int, x : Float, y : Float, z : Float, w : Float ) : Void;\n\t@:overload( function( indx : Int, values : Array<Float>) : Void {} )\n\tfunction vertexAttrib4fv( indx : Int, values : js.lib.Float32Array ) : Void;\n\tfunction vertexAttribPointer( indx : Int, size : Int, type : Int, normalized : Bool, stride : Int, offset : Int ) : Void;\n\tfunction viewport( x : Int, y : Int, width : Int, height : Int ) : Void;\n}"]}