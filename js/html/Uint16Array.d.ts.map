{"sourceRoot":"","names":[],"mappings":";AAwBa,0BCWN","version":3,"file":"Uint16Array.d.ts.map","sources":["../../../../../../../haxe/versions/4.2.2/std/js/html/Uint16Array.hx","../../../../../../../haxe/versions/4.2.2/std/js/lib/Uint16Array.hx"],"sourcesContent":["/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.html;\n\n@:deprecated typedef Uint16Array = js.lib.Uint16Array;\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.lib;\n\nimport js.lib.intl.NumberFormat.NumberFormatOptions;\n\n/**\n\tThe `Uint16Array` typed array represents an array of 16-bit unsigned integers in the platform\n\tbyte order. If control over byte order is needed, use `DataView` instead. The contents are\n\tinitialized to `0`. Once established, you can reference elements in the array using the object's\n\tmethods, or using standard array index syntax (that is, using bracket notation).\n\n\tDocumentation [Uint16Array](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n**/\n@:native(\"Uint16Array\")\nextern class Uint16Array implements ArrayBufferView implements ArrayAccess<Int> {\n\t/**\n\t\tReturns a number value of the element size. 2 in the case of an `Uint16Array`.\n\t */\n\tstatic final BYTES_PER_ELEMENT:Int;\n\n\t/**\n\t\tCreates a new `Uint16Array` from an array-like or iterable object. See also [Array.from()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from).\n\t */\n\t@:overload(function(source:{}, ?mapFn:(value:Int) -> Int, ?thisArg:Any):Uint16Array {})\n\t@:pure static function from(source:{}, ?mapFn:(value:Int, index:Int) -> Int, ?thisArg:Any):Uint16Array;\n\n\t/**\n\t\tCreates a new `Uint16Array` with a variable number of arguments. See also [Array.of()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of).\n\t */\n\t@:pure static function of(elements:haxe.extern.Rest<Dynamic>):Uint16Array;\n\n\t/**\n\t\tReturns a number value of the element size.\n\t */\n\t@:native(\"BYTES_PER_ELEMENT\")\n\tfinal BYTES_PER_ELEMENT_:Int;\n\n\t/**\n\t\tReturns the `ArrayBuffer` referenced by the `Uint16Array` Fixed at construction time and thus read only.\n\t */\n\tfinal buffer:ArrayBuffer;\n\n\t/**\n\t\tReturns the length (in bytes) of the `Uint16Array` from the start of its `ArrayBuffer`. Fixed at construction time and thus read only.\n\t */\n\tfinal byteLength:Int;\n\n\t/**\n\t\tReturns the offset (in bytes) of the `Uint16Array` from the start of its `ArrayBuffer`. Fixed at construction time and thus read only.\n\t */\n\tfinal byteOffset:Int;\n\n\t/**\n\t\tReturns the number of elements hold in the `Uint16Array`. Fixed at construction time and thus read only.\n\t */\n\tfinal length:Int;\n\n\t/** @throws DOMError */\n\t@:overload(function(length:Int):Void {})\n\t@:overload(function(object:{}):Void {})\n\t@:pure function new(buffer:ArrayBuffer, ?byteOffset:Int, ?length:Int):Void;\n\n\t/**\n\t\tCopies a sequence of array elements within the array.\n\t\tSee also [Array.prototype.copyWithin()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin).\n\t */\n\tfunction copyWithin(target:Int, start:Int, ?end:Int):Uint16Array;\n\n\t/**\n\t\tReturns a new Array Iterator object that contains the key/value pairs for each index in the array.\n\t\tSee also [Array.prototype.entries()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/entries).\n\t */\n\t@:pure function entries():js.lib.Iterator<KeyValue<Int, Int>>;\n\n\t/**\n\t\tTests whether all elements in the array pass the test provided by a function.\n\t\tSee also [Array.prototype.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).\n\t */\n\t@:overload(function(callback:(currentValue:Int) -> Bool, ?thisArg:Any):Bool {})\n\t@:overload(function(callback:(currentValue:Int, index:Int) -> Bool, ?thisArg:Any):Bool {})\n\tfunction every(callback:(currentValue:Int, index:Int, array:Uint16Array) -> Bool, ?thisArg:Any):Bool;\n\n\t/**\n\t\tFills all the elements of an array from a start index to an end index with a static value.\n\t\tSee also [Array.prototype.fill()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/fill).\n\t */\n\tfunction fill(value:Int, ?start:Int, ?end:Int):Uint16Array;\n\n\t/**\n\t\tCreates a new array with all of the elements of this array for which the provided filtering function returns true.\n\t\tSee also [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter).\n\t */\n\t@:overload(function(callback:(element:Int) -> Bool, ?thisArg:Any):Uint16Array {})\n\t@:overload(function(callback:(element:Int, index:Int) -> Bool, ?thisArg:Any):Uint16Array {})\n\tfunction filter(callback:(element:Int, index:Int, array:Uint16Array) -> Bool, ?thisArg:Any):Uint16Array;\n\n\t/**\n\t\tReturns the found value in the array, if an element in the array satisfies the provided testing function or undefined if not found.\n\t\tSee also [Array.prototype.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).\n\t */\n\t@:overload(function(callback:(element:Int) -> Bool, ?thisArg:Any):Null<Int> {})\n\t@:overload(function(callback:(element:Int, index:Int) -> Bool, ?thisArg:Any):Null<Int> {})\n\tfunction find(callback:(element:Int, index:Int, array:Uint16Array) -> Bool, ?thisArg:Any):Null<Int>;\n\n\t/**\n\t\tReturns the found index in the array, if an element in the array satisfies the provided testing function or -1 if not found.\n\t\tSee also [Array.prototype.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex).\n\t */\n\t@:overload(function(callback:(element:Int) -> Bool, ?thisArg:Any):Int {})\n\t@:overload(function(callback:(element:Int, index:Int) -> Bool, ?thisArg:Any):Int {})\n\tfunction findIndex(callback:(element:Int, index:Int, array:Uint16Array) -> Bool, ?thisArg:Any):Int;\n\n\t/**\n\t\tCalls a function for each element in the array.\n\t\tSee also [Array.prototype.forEach()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach).\n\t */\n\t@:overload(function(callback:(element:Int) -> Void, ?thisArg:Any):Void {})\n\t@:overload(function(callback:(element:Int, index:Int) -> Void, ?thisArg:Any):Void {})\n\tfunction forEach(callback:(element:Int, index:Int, array:Uint16Array) -> Void, ?thisArg:Any):Void;\n\n\t/**\n\t\tDetermines whether a typed array includes a certain element, returning true or false as appropriate.\n\t\tSee also [Array.prototype.includes()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes).\n\t */\n\t@:pure function includes(searchElement:Int, ?fromIndex:Int):Bool;\n\n\t/**\n\t\tReturns the first (least) index of an element within the array equal to the specified value, or -1 if none is found.\n\t\tSee also [Array.prototype.indexOf()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf).\n\t */\n\t@:pure function indexOf(searchElement:Int, ?fromIndex:Int):Int;\n\n\t/**\n\t\tJoins all elements of an array into a string.\n\t\tSee also [Array.prototype.join()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/join).\n\t */\n\t@:pure function join(?separator:String):String;\n\n\t/**\n\t\tReturns a new Array Iterator that contains the keys for each index in the array.\n\t\tSee also [Array.prototype.keys()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/keys).\n\t */\n\t@:pure function keys():js.lib.Iterator<Int>;\n\n\t/**\n\t\tReturns the last (greatest) index of an element within the array equal to the specified value, or -1 if none is found.\n\t\tSee also [Array.prototype.lastIndexOf()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/lastIndexOf).\n\t */\n\t@:pure function lastIndexOf(searchElement:Int, ?fromIndex:Int):Int;\n\n\t/**\n\t\tCreates a new array with the results of calling a provided function on every element in this array.\n\t\tSee also [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).\n\t */\n\t@:overload(function(callback:(element:Int) -> Int, ?thisArg:Any):Uint16Array {})\n\t@:overload(function(callback:(element:Int, index:Int) -> Int, ?thisArg:Any):Uint16Array {})\n\tfunction map(callback:(element:Int, index:Int, array:Uint16Array) -> Int, ?thisArg:Any):Uint16Array;\n\n\t/**\n\t\tApply a function against an accumulator and each value of the array (from left-to-right) as to reduce it to a single value.\n\t\tSee also [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).\n\t */\n\t@:overload(function<T>(callback:(previousValue:T, currentValue:Int) -> T, initialValue:T):T {})\n\t@:overload(function<T>(callback:(previousValue:T, currentValue:Int, index:Int) -> T, initialValue:T):T {})\n\t@:overload(function(callbackfn:(previousValue:Int, currentValue:Int) -> Int):Int {})\n\t@:overload(function(callbackfn:(previousValue:Int, currentValue:Int, index:Int) -> Int):Int {})\n\t@:overload(function(callbackfn:(previousValue:Int, currentValue:Int, index:Int, array:Uint16Array) -> Int):Int {})\n\tfunction reduce<T>(callback:(previousValue:T, currentValue:Int, index:Int, array:Uint16Array) -> T, initialValue:T):T;\n\n\t/**\n\t\tApply a function against an accumulator and each value of the array (from right-to-left) as to reduce it to a single value.\n\t\tSee also [Array.prototype.reduceRight()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight).\n\t */\n\t@:overload(function<T>(callback:(previousValue:T, currentValue:Int) -> T, initialValue:T):T {})\n\t@:overload(function<T>(callback:(previousValue:T, currentValue:Int, index:Int) -> T, initialValue:T):T {})\n\t@:overload(function(callbackfn:(previousValue:Int, currentValue:Int) -> Int):Int {})\n\t@:overload(function(callbackfn:(previousValue:Int, currentValue:Int, index:Int) -> Int):Int {})\n\t@:overload(function(callbackfn:(previousValue:Int, currentValue:Int, index:Int, array:Uint16Array) -> Int):Int {})\n\tfunction reduceRight<T>(callback:(previousValue:T, currentValue:Int, index:Int, array:Uint16Array) -> T, initialValue:T):T;\n\n\t/**\n\t\tReverses the order of the elements of an array — the first becomes the last, and the last becomes the first.\n\t\tSee also [Array.prototype.reverse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse).\n\t */\n\tfunction reverse():Uint16Array;\n\n\t/**\n\t\tStores multiple values in the typed array, reading input values from a specified array.\n\t */\n\t@:overload(function(array:Int8Array, ?offset:Int):Void {})\n\t@:overload(function(array:Uint8Array, ?offset:Int):Void {})\n\t@:overload(function(array:Uint8ClampedArray, ?offset:Int):Void {})\n\t@:overload(function(array:Int16Array, ?offset:Int):Void {})\n\t@:overload(function(array:Uint16Array, ?offset:Int):Void {})\n\t@:overload(function(array:Int32Array, ?offset:Int):Void {})\n\t@:overload(function(array:Uint32Array, ?offset:Int):Void {})\n\t@:overload(function(array:Float32Array, ?offset:Int):Void {})\n\t@:overload(function(array:Float64Array, ?offset:Int):Void {})\n\tfunction set(array:Array<Int>, ?offset:Int):Void;\n\n\t/**\n\t\tExtracts a section of an array and returns a new array.\n\t\tSee also [Array.prototype.slice()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice).\n\t */\n\t@:pure function slice(?start:Int, ?end:Int):Uint16Array;\n\n\t/**\n\t\tReturns true if at least one element in this array satisfies the provided testing function.\n\t\tSee also [Array.prototype.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).\n\t */\n\t@:overload(function(callback:(element:Int) -> Bool, ?thisArg:Any):Bool {})\n\t@:overload(function(callback:(element:Int, index:Int) -> Bool, ?thisArg:Any):Bool {})\n\tfunction some(callback:(element:Int, index:Int, array:Uint16Array) -> Bool, ?thisArg:Any):Bool;\n\n\t/**\n\t\tSorts the elements of an array in place and returns the array.\n\t\tSee also [Array.prototype.sort()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort).\n\t */\n\tfunction sort(?compareFn:(x:Int, y:Int) -> Int):Uint16Array;\n\n\t/**\n\t\tReturns a new TypedArray from the given start and end element index.\n\t */\n\t@:pure function subarray(?begin:Int, ?end:Int):Uint16Array;\n\n\t/**\n\t\tReturns a new Array Iterator object that contains the values for each index in the array.\n\t\tSee also [Array.prototype.values()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/values).\n\t */\n\t@:pure function values():js.lib.Iterator<Int>;\n\n\t/**\n\t\tReturns a string representing the array and its elements.\n\t\tSee also [Array.prototype.toString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toString).\n\t */\n\t@:pure function toLocaleString(?locales:String, ?options:NumberFormatOptions):String;\n\n\t/**\n\t\tReturns a string representing the array and its elements.\n\t\tSee also [Array.prototype.toString()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toString).\n\t */\n\t@:pure function toString():String;\n}\n"]}