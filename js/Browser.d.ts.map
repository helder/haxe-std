{"sourceRoot":"","names":[],"mappings":";AA2BA;CAEC;;;;uBCOM;CDAN;;;;gBEAM;CFMN;;;;kBGRM;CHcN;;;;kBIdM;CJoBN;;;;mBKlBM;CLwBN;;;;iBM3BM;CNsCN;;;;;;;4BOsBmC;;;;;;QPXnC,mBOAD,OChDO;;;;;;QRmEN,qBQnEM;;;;;;QRsFN,wBStFM;;;;;QTmGN,eOtGU","version":3,"file":"Browser.d.ts.map","sources":["../../../../../../haxe/versions/4.2.1/std/js/Browser.hx","../../../../../../haxe/versions/4.2.1/std/js/html/WorkerGlobalScope.hx","../../../../../../haxe/versions/4.2.1/std/js/html/Window.hx","../../../../../../haxe/versions/4.2.1/std/js/html/HTMLDocument.hx","../../../../../../haxe/versions/4.2.1/std/js/html/Location.hx","../../../../../../haxe/versions/4.2.1/std/js/html/Navigator.hx","../../../../../../haxe/versions/4.2.1/std/js/html/ConsoleInstance.hx","../../../../../../haxe/versions/4.2.1/std/StdTypes.hx","../../../../../../haxe/versions/4.2.1/std/js/html/Storage.hx","../../../../../../haxe/versions/4.2.1/std/js/html/XMLHttpRequest.hx"],"sourcesContent":["/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js;\n\nimport js.html.Storage;\nimport js.html.XMLHttpRequest;\n\nclass Browser {\n\t/** The global scope typed with fields available only in a worker context. */\n\tpublic static var self(get, never):js.html.WorkerGlobalScope;\n\n\tstatic inline function get_self():js.html.WorkerGlobalScope {\n\t\treturn js.Lib.global;\n\t}\n\n\t/** The global window object. */\n\tpublic static var window(get, never):js.html.Window;\n\n\textern inline static function get_window()\n\t\treturn js.Syntax.code(\"window\");\n\n\t/** Shortcut to Window.document. */\n\tpublic static var document(get, never):js.html.HTMLDocument;\n\n\textern inline static function get_document()\n\t\treturn window.document;\n\n\t/** Shortcut to Window.location. */\n\tpublic static var location(get, never):js.html.Location;\n\n\textern inline static function get_location()\n\t\treturn js.Lib.global.location;\n\n\t/** Shortcut to Window.navigator. */\n\tpublic static var navigator(get, never):js.html.Navigator;\n\n\textern inline static function get_navigator()\n\t\treturn js.Lib.global.navigator;\n\n\t/** Shortcut to Window.console. */\n\tpublic static var console(get, never):js.html.ConsoleInstance;\n\n\textern inline static function get_console()\n\t\treturn js.Lib.global.console;\n\n\t/**\n\t * True if a window object exists, false otherwise.\n\t *\n\t * This can be used to check if the code is being executed in a non-browser\n\t * environment such as node.js.\n\t */\n\tpublic static var supported(get, never):Bool;\n\n\tstatic function get_supported()\n\t\treturn\n\t\t\tjs.Syntax.typeof(window) != \"undefined\" &&\n\t\t\tjs.Syntax.typeof(window.location) != \"undefined\" &&\n\t\t\tjs.Syntax.typeof(window.location.protocol) == \"string\";\n\t/**\n\t * Safely gets the browser's local storage, or returns null if localStorage is unsupported or\n\t * disabled.\n\t */\n\tpublic static function getLocalStorage():Null<Storage> {\n\t\ttry {\n\t\t\tvar s = window.localStorage;\n\t\t\ts.getItem(\"\");\n\t\t\tif (s.length == 0) {\n\t\t\t\tvar key = \"_hx_\" + Math.random();\n\t\t\t\ts.setItem(key, key);\n\t\t\t\ts.removeItem(key);\n\t\t\t}\n\t\t\treturn s;\n\t\t} catch (e:Dynamic) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Safely gets the browser's session storage, or returns null if sessionStorage is unsupported\n\t * or disabled.\n\t */\n\tpublic static function getSessionStorage():Storage {\n\t\ttry {\n\t\t\tvar s = window.sessionStorage;\n\t\t\ts.getItem(\"\");\n\t\t\tif (s.length == 0) {\n\t\t\t\tvar key = \"_hx_\" + Math.random();\n\t\t\t\ts.setItem(key, key);\n\t\t\t\ts.removeItem(key);\n\t\t\t}\n\t\t\treturn s;\n\t\t} catch (e:Dynamic) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Creates an XMLHttpRequest, with a fallback to ActiveXObject for ancient versions of Internet\n\t * Explorer.\n\t */\n\tpublic static function createXMLHttpRequest():XMLHttpRequest {\n\t\tif (js.Syntax.code(\"typeof XMLHttpRequest\") != \"undefined\") {\n\t\t\treturn new XMLHttpRequest();\n\t\t}\n\t\tif (js.Syntax.code(\"typeof ActiveXObject\") != \"undefined\") {\n\t\t\treturn js.Syntax.construct(\"ActiveXObject\", \"Microsoft.XMLHTTP\");\n\t\t}\n\t\tthrow \"Unable to create XMLHttpRequest object.\";\n\t}\n\n\t/**\n\t\tDisplay an alert message box containing the given message. See also `Window.alert()`.\n\t**/\n\tpublic static inline function alert(v:Dynamic) {\n\t\twindow.alert(Std.string(v));\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla\\WorkerGlobalScope.webidl. Do not edit!\n\npackage js.html;\n\nimport js.lib.Promise;\n\n/**\n\tThe `WorkerGlobalScope` interface of the Web Workers API is an interface representing the scope of any worker. Workers have no browsing context; this scope contains the information usually conveyed by `Window` objects — in this case event handlers, the console or the associated `WorkerNavigator` object. Each `WorkerGlobalScope` has its own event loop.\n\n\tDocumentation [WorkerGlobalScope](https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n\n\t@see <https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope>\n**/\n@:native(\"WorkerGlobalScope\")\nextern class WorkerGlobalScope extends EventTarget {\n\n\t/**\n\t\tReturns a reference to the `WorkerGlobalScope` itself. Most of the time it is a specific scope like `DedicatedWorkerGlobalScope`,  `SharedWorkerGlobalScope` or `ServiceWorkerGlobalScope`.\n\t**/\n\tvar self(default,null) : WorkerGlobalScope;\n\n\t/**\n\t\tReturns the `WorkerLocation` associated with the worker. It is a specific location object, mostly a subset of the `Location` for browsing scopes, but adapted to workers.\n\t**/\n\tvar location(default,null) : WorkerLocation;\n\tvar navigator(default,null) : WorkerNavigator;\n\n\t/**\n\t\tIs an `EventHandler` representing the code to be called when the `error` event is raised.\n\t**/\n\tvar onerror : haxe.extern.EitherType<Event,String> -> String -> Int -> Int -> Dynamic -> Dynamic;\n\n\t/**\n\t\tIs an `EventHandler` representing the code to be called when the `offline` event is raised.\n\t**/\n\tvar onoffline : haxe.Constraints.Function;\n\n\t/**\n\t\tIs an `EventHandler` representing the code to be called when the `online` event is raised.\n\t**/\n\tvar ononline : haxe.Constraints.Function;\n\n\t/**\n\t\tReturns the `Performance` associated with the worker. It is a regular performance object, except that only a subset of its property and methods are available to workers.\n\t**/\n\tvar performance(default,null) : Performance;\n\tvar crypto(default,null) : Crypto;\n\tvar origin(default,null) : String;\n\tvar isSecureContext(default,null) : Bool;\n\tvar indexedDB(default,null) : js.html.idb.Factory;\n\tvar caches(default,null) : CacheStorage;\n\n\n\t/**\n\t\tImports one or more scripts into the worker's scope. You can specify as many as you'd like, separated by commas. For example:` importScripts('foo.js', 'bar.js');`\n\t\t@throws DOMError\n\t**/\n\tfunction importScripts( urls : haxe.extern.Rest<String> ) : Void;\n\n\t/**\n\t\tAllows you to write a message to stdout — i.e. in your terminal. This is the same as Firefox's `window.dump`, but for workers.\n\t**/\n\tfunction dump( ?str : String ) : Void;\n\t/** @throws DOMError */\n\tfunction btoa( btoa : String ) : String;\n\t/** @throws DOMError */\n\tfunction atob( atob : String ) : String;\n\t/** @throws DOMError */\n\t@:overload( function( handler : haxe.Constraints.Function, timeout : Int = 0, arguments : haxe.extern.Rest<Dynamic> ) : Int {} )\n\tfunction setTimeout( handler : String, timeout : Int = 0, unused : haxe.extern.Rest<Dynamic> ) : Int;\n\tfunction clearTimeout( handle : Int = 0 ) : Void;\n\t/** @throws DOMError */\n\t@:overload( function( handler : haxe.Constraints.Function, timeout : Int = 0, arguments : haxe.extern.Rest<Dynamic> ) : Int {} )\n\tfunction setInterval( handler : String, timeout : Int = 0, unused : haxe.extern.Rest<Dynamic> ) : Int;\n\tfunction clearInterval( handle : Int = 0 ) : Void;\n\t/** @throws DOMError */\n\t@:overload( function( aImage : VideoElement) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : CanvasElement) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : Blob) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : ImageData) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : CanvasRenderingContext2D) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : ImageBitmap) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : js.lib.ArrayBufferView) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : js.lib.ArrayBuffer) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : VideoElement, aSx : Int, aSy : Int, aSw : Int, aSh : Int) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : CanvasElement, aSx : Int, aSy : Int, aSw : Int, aSh : Int) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : Blob, aSx : Int, aSy : Int, aSw : Int, aSh : Int) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : ImageData, aSx : Int, aSy : Int, aSw : Int, aSh : Int) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : CanvasRenderingContext2D, aSx : Int, aSy : Int, aSw : Int, aSh : Int) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : ImageBitmap, aSx : Int, aSy : Int, aSw : Int, aSh : Int) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : js.lib.ArrayBufferView, aSx : Int, aSy : Int, aSw : Int, aSh : Int) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : js.lib.ArrayBuffer, aSx : Int, aSy : Int, aSw : Int, aSh : Int) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : VideoElement, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout>) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : CanvasElement, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout>) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : Blob, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout>) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : ImageData, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout>) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : CanvasRenderingContext2D, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout>) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : ImageBitmap, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout>) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : js.lib.ArrayBufferView, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout>) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : js.lib.ArrayBuffer, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout>) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : ImageElement ) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : ImageElement, aSx : Int, aSy : Int, aSw : Int, aSh : Int ) : Promise<ImageBitmap> {} )\n\tfunction createImageBitmap( aImage : ImageElement, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout> ) : Promise<ImageBitmap>;\n\t@:overload( function( input : String, ?init : RequestInit) : Promise<Response> {} )\n\tfunction fetch( input : Request, ?init : RequestInit ) : Promise<Response>;\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla\\Window.webidl. Do not edit!\n\npackage js.html;\n\nimport js.lib.Promise;\n\n/**\n\tThe `Window` interface represents a window containing a DOM document; the `document` property points to the DOM document loaded in that window.\n\n\tDocumentation [Window](https://developer.mozilla.org/en-US/docs/Web/API/Window) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Window$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n\n\t@see <https://developer.mozilla.org/en-US/docs/Web/API/Window>\n**/\n@:native(\"Window\")\nextern class Window extends EventTarget {\n\n\t/**\n\t\tReturns a reference to the current window.\n\t**/\n\tvar window(default,null) : Window;\n\n\t/**\n\t\tReturns an object reference to the window object itself.\n\t**/\n\tvar self(default,null) : Window;\n\n\t/**\n\t\tReturns a reference to the document that the window contains.\n\t**/\n\tvar document(default,null) : HTMLDocument;\n\n\t/**\n\t\tGets/sets the name of the window.\n\t**/\n\tvar name : String;\n\n\t/**\n\t\tGets/sets the location, or current URL, of the window object.\n\t**/\n\tvar location(default,null) : Location;\n\n\t/**\n\t\tReturns a reference to the history object.\n\t**/\n\tvar history(default,null) : History;\n\n\t/**\n\t\tReturns the locationbar object, whose visibility can be toggled in the window.\n\t**/\n\tvar locationbar(default,null) : BarProp;\n\n\t/**\n\t\tReturns the menubar object, whose visibility can be toggled in the window.\n\t**/\n\tvar menubar(default,null) : BarProp;\n\n\t/**\n\t\tReturns the personalbar object, whose visibility can be toggled in the window.\n\t**/\n\tvar personalbar(default,null) : BarProp;\n\n\t/**\n\t\tReturns the scrollbars object, whose visibility can be toggled in the window.\n\t**/\n\tvar scrollbars(default,null) : BarProp;\n\n\t/**\n\t\tReturns the statusbar object, whose visibility can be toggled in the window.\n\t**/\n\tvar statusbar(default,null) : BarProp;\n\n\t/**\n\t\tReturns the toolbar object, whose visibility can be toggled in the window.\n\t**/\n\tvar toolbar(default,null) : BarProp;\n\n\t/**\n\t\tGets/sets the text in the statusbar at the bottom of the browser.\n\t**/\n\tvar status : String;\n\n\t/**\n\t\tThis property indicates whether the current window is closed or not.\n\t**/\n\tvar closed(default,null) : Bool;\n\n\t/**\n\t\tReturns the current event, which is the event currently being handled by the JavaScript code's context, or `undefined` if no event is currently being handled. The `Event` object passed directly to event handlers should be used instead whenever possible.\n\t**/\n\tvar event(default,null) : Dynamic;\n\n\t/**\n\t\tReturns an array of the subframes in the current window.\n\t**/\n\tvar frames(default,null) : Window;\n\n\t/**\n\t\tReturns the number of frames in the window. See also `window.frames`.\n\t**/\n\tvar length(default,null) : Int;\n\n\t/**\n\t\tReturns a reference to the topmost window in the window hierarchy. This property is read only.\n\t**/\n\tvar top(default,null) : Window;\n\n\t/**\n\t\tReturns a reference to the window that opened this current window.\n\t**/\n\tvar opener : Dynamic;\n\n\t/**\n\t\tReturns a reference to the parent of the current window or subframe.\n\t**/\n\tvar parent(default,null) : Window;\n\n\t/**\n\t\tReturns the element in which the window is embedded, or null if the window is not embedded.\n\t**/\n\tvar frameElement(default,null) : Element;\n\n\t/**\n\t\tReturns a reference to the navigator object.\n\t**/\n\tvar navigator(default,null) : Navigator;\n\n\t/**\n\t\tReturns a reference to the console object which provides access to the browser's debugging console.\n\t**/\n\tvar console(default,null) : ConsoleInstance;\n\n\t/**\n\t\tReturns a reference to the screen object associated with the window.\n\t**/\n\tvar screen(default,null) : Screen;\n\n\t/**\n\t\tGets the width of the content area of the browser window including, if rendered, the vertical scrollbar.\n\t**/\n\tvar innerWidth : Dynamic;\n\n\t/**\n\t\tGets the height of the content area of the browser window including, if rendered, the horizontal scrollbar.\n\t**/\n\tvar innerHeight : Dynamic;\n\n\t/**\n\t\tReturns the number of pixels that the document has already been scrolled horizontally.\n\t**/\n\tvar scrollX(default,null) : Float;\n\n\t/**\n\t\tAn alias for `window.scrollX`.\n\t**/\n\tvar pageXOffset(default,null) : Float;\n\n\t/**\n\t\tReturns the number of pixels that the document has already been scrolled vertically.\n\t**/\n\tvar scrollY(default,null) : Float;\n\n\t/**\n\t\tAn alias for `window.scrollY`\n\t**/\n\tvar pageYOffset(default,null) : Float;\n\n\t/**\n\t\tReturns the horizontal distance of the left border of the user's browser from the left side of the screen.\n\t**/\n\tvar screenX : Dynamic;\n\n\t/**\n\t\tReturns the vertical distance of the top border of the user's browser from the top side of the screen.\n\t**/\n\tvar screenY : Dynamic;\n\n\t/**\n\t\tGets the width of the outside of the browser window.\n\t**/\n\tvar outerWidth : Dynamic;\n\n\t/**\n\t\tGets the height of the outside of the browser window.\n\t**/\n\tvar outerHeight : Dynamic;\n\n\t/**\n\t\tReturns a `Performance` object, which includes the `Performance.timing` and `Performance.navigation` attributes, each of which is an object providing performance-related data. See also Using Navigation Timing for additional information and examples.\n\t**/\n\tvar performance(default,null) : Performance;\n\n\t/**\n\t\tReturns the ratio between physical pixels and device independent pixels in the current display.\n\t**/\n\tvar devicePixelRatio(default,null) : Float;\n\n\t/**\n\t\tThe maximum offset that the window can be scrolled to horizontally, that is the document width minus the viewport width.\n\t**/\n\tvar scrollMaxX(default,null) : Int;\n\n\t/**\n\t\tThe maximum offset that the window can be scrolled to vertically (i.e., the document height minus the viewport height).\n\t**/\n\tvar scrollMaxY(default,null) : Int;\n\n\t/**\n\t\tThis property indicates whether the window is displayed in full screen or not.\n\t**/\n\tvar fullScreen : Bool;\n\tvar ondevicemotion : haxe.Constraints.Function;\n\tvar ondeviceorientation : haxe.Constraints.Function;\n\tvar onabsolutedeviceorientation : haxe.Constraints.Function;\n\tvar ondeviceproximity : haxe.Constraints.Function;\n\tvar onuserproximity : haxe.Constraints.Function;\n\tvar ondevicelight : haxe.Constraints.Function;\n\n\t/**\n\t\tReturns a reference to the content element in the current window. Since Firefox 57 (initially Nightly-only), both versions are only available from chrome (privileged) code, and not available to the web anymore.\n\t**/\n\tvar content(default,null) : Dynamic;\n\n\t/**\n\t\tReturns the orientation in degrees (in 90 degree increments) of the viewport relative to the device's natural orientation.\n\t**/\n\tvar orientation(default,null) : Int;\n\tvar onorientationchange : haxe.Constraints.Function;\n\n\t/**\n\t\tReturns the browser crypto object.\n\t**/\n\tvar crypto(default,null) : Crypto;\n\tvar onabort : haxe.Constraints.Function;\n\tvar onblur : haxe.Constraints.Function;\n\tvar onfocus : haxe.Constraints.Function;\n\tvar onauxclick : haxe.Constraints.Function;\n\tvar oncanplay : haxe.Constraints.Function;\n\tvar oncanplaythrough : haxe.Constraints.Function;\n\tvar onchange : haxe.Constraints.Function;\n\tvar onclick : haxe.Constraints.Function;\n\tvar onclose : haxe.Constraints.Function;\n\tvar oncontextmenu : haxe.Constraints.Function;\n\tvar ondblclick : haxe.Constraints.Function;\n\tvar ondrag : haxe.Constraints.Function;\n\tvar ondragend : haxe.Constraints.Function;\n\tvar ondragenter : haxe.Constraints.Function;\n\tvar ondragexit : haxe.Constraints.Function;\n\tvar ondragleave : haxe.Constraints.Function;\n\tvar ondragover : haxe.Constraints.Function;\n\tvar ondragstart : haxe.Constraints.Function;\n\tvar ondrop : haxe.Constraints.Function;\n\tvar ondurationchange : haxe.Constraints.Function;\n\tvar onemptied : haxe.Constraints.Function;\n\tvar onended : haxe.Constraints.Function;\n\tvar oninput : haxe.Constraints.Function;\n\tvar oninvalid : haxe.Constraints.Function;\n\tvar onkeydown : haxe.Constraints.Function;\n\tvar onkeypress : haxe.Constraints.Function;\n\tvar onkeyup : haxe.Constraints.Function;\n\tvar onload : haxe.Constraints.Function;\n\tvar onloadeddata : haxe.Constraints.Function;\n\tvar onloadedmetadata : haxe.Constraints.Function;\n\tvar onloadend : haxe.Constraints.Function;\n\tvar onloadstart : haxe.Constraints.Function;\n\tvar onmousedown : haxe.Constraints.Function;\n\tvar onmouseenter : haxe.Constraints.Function;\n\tvar onmouseleave : haxe.Constraints.Function;\n\tvar onmousemove : haxe.Constraints.Function;\n\tvar onmouseout : haxe.Constraints.Function;\n\tvar onmouseover : haxe.Constraints.Function;\n\tvar onmouseup : haxe.Constraints.Function;\n\tvar onwheel : haxe.Constraints.Function;\n\tvar onpause : haxe.Constraints.Function;\n\tvar onplay : haxe.Constraints.Function;\n\tvar onplaying : haxe.Constraints.Function;\n\tvar onprogress : haxe.Constraints.Function;\n\tvar onratechange : haxe.Constraints.Function;\n\tvar onreset : haxe.Constraints.Function;\n\tvar onresize : haxe.Constraints.Function;\n\tvar onscroll : haxe.Constraints.Function;\n\tvar onseeked : haxe.Constraints.Function;\n\tvar onseeking : haxe.Constraints.Function;\n\tvar onselect : haxe.Constraints.Function;\n\tvar onshow : haxe.Constraints.Function;\n\tvar onstalled : haxe.Constraints.Function;\n\tvar onsubmit : haxe.Constraints.Function;\n\tvar onsuspend : haxe.Constraints.Function;\n\tvar ontimeupdate : haxe.Constraints.Function;\n\tvar onvolumechange : haxe.Constraints.Function;\n\tvar onwaiting : haxe.Constraints.Function;\n\tvar onselectstart : haxe.Constraints.Function;\n\tvar ontoggle : haxe.Constraints.Function;\n\tvar onpointercancel : haxe.Constraints.Function;\n\tvar onpointerdown : haxe.Constraints.Function;\n\tvar onpointerup : haxe.Constraints.Function;\n\tvar onpointermove : haxe.Constraints.Function;\n\tvar onpointerout : haxe.Constraints.Function;\n\tvar onpointerover : haxe.Constraints.Function;\n\tvar onpointerenter : haxe.Constraints.Function;\n\tvar onpointerleave : haxe.Constraints.Function;\n\tvar ongotpointercapture : haxe.Constraints.Function;\n\tvar onlostpointercapture : haxe.Constraints.Function;\n\tvar onanimationcancel : haxe.Constraints.Function;\n\tvar onanimationend : haxe.Constraints.Function;\n\tvar onanimationiteration : haxe.Constraints.Function;\n\tvar onanimationstart : haxe.Constraints.Function;\n\tvar ontransitioncancel : haxe.Constraints.Function;\n\tvar ontransitionend : haxe.Constraints.Function;\n\tvar ontransitionrun : haxe.Constraints.Function;\n\tvar ontransitionstart : haxe.Constraints.Function;\n\tvar onwebkitanimationend : haxe.Constraints.Function;\n\tvar onwebkitanimationiteration : haxe.Constraints.Function;\n\tvar onwebkitanimationstart : haxe.Constraints.Function;\n\tvar onwebkittransitionend : haxe.Constraints.Function;\n\tvar onerror : haxe.extern.EitherType<Event,String> -> String -> Int -> Int -> Dynamic -> Dynamic;\n\n\t/**\n\t\tReturns a `SpeechSynthesis` object, which is the entry point into using Web Speech API speech synthesis functionality.\n\t**/\n\tvar speechSynthesis(default,null) : SpeechSynthesis;\n\tvar ontouchstart : haxe.Constraints.Function;\n\tvar ontouchend : haxe.Constraints.Function;\n\tvar ontouchmove : haxe.Constraints.Function;\n\tvar ontouchcancel : haxe.Constraints.Function;\n\tvar onafterprint : haxe.Constraints.Function;\n\tvar onbeforeprint : haxe.Constraints.Function;\n\tvar onbeforeunload : Event -> Null<String>;\n\tvar onhashchange : haxe.Constraints.Function;\n\tvar onlanguagechange : haxe.Constraints.Function;\n\tvar onmessage : haxe.Constraints.Function;\n\tvar onmessageerror : haxe.Constraints.Function;\n\tvar onoffline : haxe.Constraints.Function;\n\tvar ononline : haxe.Constraints.Function;\n\tvar onpagehide : haxe.Constraints.Function;\n\tvar onpageshow : haxe.Constraints.Function;\n\tvar onpopstate : haxe.Constraints.Function;\n\tvar onstorage : haxe.Constraints.Function;\n\tvar onunload : haxe.Constraints.Function;\n\n\t/**\n\t\tReturns a reference to the local storage object used to store data that may only be accessed by the origin that created it.\n\t**/\n\tvar localStorage(default,null) : Storage;\n\tvar origin(default,null) : String;\n\n\t/**\n\t\tIndicates whether a context is capable of using features that require secure contexts.\n\t**/\n\tvar isSecureContext(default,null) : Bool;\n\tvar indexedDB(default,null) : js.html.idb.Factory;\n\tvar caches(default,null) : CacheStorage;\n\n\t/**\n\t\tReturns a reference to the session storage object used to store data that may only be accessed by the origin that created it.\n\t**/\n\tvar sessionStorage(default,null) : Storage;\n\n\n\t/**\n\t\tCloses the current window.\n\t\t@throws DOMError\n\t**/\n\tfunction close() : Void;\n\n\t/**\n\t\tThis method stops window loading.\n\t\t@throws DOMError\n\t**/\n\tfunction stop() : Void;\n\n\t/**\n\t\tSets focus on the current window.\n\t\t@throws DOMError\n\t**/\n\tfunction focus() : Void;\n\n\t/**\n\t\tSets focus away from the window.\n\t\t@throws DOMError\n\t**/\n\tfunction blur() : Void;\n\n\t/**\n\t\tOpens a new window.\n\t\t@throws DOMError\n\t**/\n\tfunction open( url : String = \"\", target : String = \"\", features : String = \"\" ) : Window;\n\n\t/**\n\t\tDisplays an alert dialog.\n\t\t@throws DOMError\n\t**/\n\t@:overload( function() : Void {} )\n\tfunction alert( message : String ) : Void;\n\n\t/**\n\t\tDisplays a dialog with a message that the user needs to respond to.\n\t\t@throws DOMError\n\t**/\n\tfunction confirm( message : String = \"\" ) : Bool;\n\n\t/**\n\t\tReturns the text entered by the user in a prompt dialog.\n\t\t@throws DOMError\n\t**/\n\tfunction prompt( message : String = \"\", default_ : String = \"\" ) : String;\n\n\t/**\n\t\tOpens the Print Dialog to print the current document.\n\t\t@throws DOMError\n\t**/\n\tfunction print() : Void;\n\n\t/**\n\t\tProvides a secure means for one window to send a string of data to another window, which need not be within the same domain as the first.\n\t\t@throws DOMError\n\t**/\n\tfunction postMessage( message : Dynamic, targetOrigin : String, ?transfer : Array<Dynamic> ) : Void;\n\n\t/**\n\t\tRegisters the window to capture all events of the specified type.\n\t**/\n\tfunction captureEvents() : Void;\n\n\t/**\n\t\tReleases the window from trapping events of a specific type.\n\t**/\n\tfunction releaseEvents() : Void;\n\n\t/**\n\t\tReturns the selection object representing the selected item(s).\n\t\t@throws DOMError\n\t**/\n\tfunction getSelection() : Selection;\n\n\t/**\n\t\tGets computed style for the specified element. Computed style indicates the computed values of all CSS properties of the element.\n\t\t@throws DOMError\n\t**/\n\tfunction getComputedStyle( elt : Element, pseudoElt : String = \"\" ) : CSSStyleDeclaration;\n\n\t/**\n\t\tReturns a `MediaQueryList` object representing the specified media query string.\n\t\t@throws DOMError\n\t**/\n\tfunction matchMedia( query : String ) : MediaQueryList;\n\n\t/**\n\t\tMoves the window to the specified coordinates.\n\t\t@throws DOMError\n\t**/\n\tfunction moveTo( x : Int, y : Int ) : Void;\n\n\t/**\n\t\tMoves the current window by a specified amount.\n\t\t@throws DOMError\n\t**/\n\tfunction moveBy( x : Int, y : Int ) : Void;\n\n\t/**\n\t\tDynamically resizes window.\n\t\t@throws DOMError\n\t**/\n\tfunction resizeTo( x : Int, y : Int ) : Void;\n\n\t/**\n\t\tResizes the current window by a certain amount.\n\t\t@throws DOMError\n\t**/\n\tfunction resizeBy( x : Int, y : Int ) : Void;\n\n\t/**\n\t\tScrolls the window to a particular place in the document.\n\t**/\n\t@:overload( function( x : Float, y : Float ) : Void {} )\n\tfunction scroll( ?options : ScrollToOptions ) : Void;\n\n\t/**\n\t\tScrolls to a particular set of coordinates in the document.\n\t**/\n\t@:overload( function( x : Float, y : Float ) : Void {} )\n\tfunction scrollTo( ?options : ScrollToOptions ) : Void;\n\n\t/**\n\t\tScrolls the document in the window by the given amount.\n\t**/\n\t@:overload( function( x : Float, y : Float ) : Void {} )\n\tfunction scrollBy( ?options : ScrollToOptions ) : Void;\n\n\t/**\n\t\tTells the browser that an animation is in progress, requesting that the browser schedule a repaint of the window for the next animation frame.\n\t\t@throws DOMError\n\t**/\n\tfunction requestAnimationFrame( callback : Float -> Void ) : Int;\n\n\t/**\n\t\tEnables you to cancel a callback previously scheduled with `Window.requestAnimationFrame`.\n\t\t@throws DOMError\n\t**/\n\tfunction cancelAnimationFrame( handle : Int ) : Void;\n\n\t/**\n\t\tGets default computed style for the specified element, ignoring author stylesheets.\n\t\t@throws DOMError\n\t**/\n\tfunction getDefaultComputedStyle( elt : Element, pseudoElt : String = \"\" ) : CSSStyleDeclaration;\n\n\t/**\n\t\tScrolls the document by the given number of lines.\n\t**/\n\tfunction scrollByLines( numLines : Int, ?options : ScrollOptions ) : Void;\n\n\t/**\n\t\tScrolls the current document by the specified number of pages.\n\t**/\n\tfunction scrollByPages( numPages : Int, ?options : ScrollOptions ) : Void;\n\n\t/**\n\t\tSizes the window according to its content.\n\t\t@throws DOMError\n\t**/\n\tfunction sizeToContent() : Void;\n\n\t/**\n\t\tUpdates the state of commands of the current chrome window (UI).\n\t**/\n\tfunction updateCommands( action : String, ?sel : Selection, reason : Int = 0 ) : Void;\n\n\t/**\n\t\tSearches for a given string in a window.\n\t\t@throws DOMError\n\t**/\n\tfunction find( str : String = \"\", caseSensitive : Bool = false, backwards : Bool = false, wrapAround : Bool = false, wholeWord : Bool = false, searchInFrames : Bool = false, showDialog : Bool = false ) : Bool;\n\n\t/**\n\t\tWrites a message to the console.\n\t**/\n\tfunction dump( str : String ) : Void;\n\n\t/**\n\t\tToggles a user's ability to resize a window.\n\t**/\n\tfunction setResizable( resizable : Bool ) : Void;\n\t/** @throws DOMError */\n\tfunction btoa( btoa : String ) : String;\n\t/** @throws DOMError */\n\tfunction atob( atob : String ) : String;\n\t/** @throws DOMError */\n\t@:overload( function( handler : haxe.Constraints.Function, timeout : Float = 0, arguments : haxe.extern.Rest<Dynamic> ) : Int {} )\n\tfunction setTimeout( handler : String, timeout : Float = 0, unused : haxe.extern.Rest<Dynamic> ) : Int;\n\tfunction clearTimeout( handle : Int = 0 ) : Void;\n\t/** @throws DOMError */\n\t@:overload( function( handler : haxe.Constraints.Function, timeout : Float = 0, arguments : haxe.extern.Rest<Dynamic> ) : Int {} )\n\tfunction setInterval( handler : String, timeout : Float = 0, unused : haxe.extern.Rest<Dynamic> ) : Int;\n\tfunction clearInterval( handle : Int = 0 ) : Void;\n\t/** @throws DOMError */\n\t@:overload( function( aImage : VideoElement) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : CanvasElement) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : Blob) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : ImageData) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : CanvasRenderingContext2D) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : ImageBitmap) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : js.lib.ArrayBufferView) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : js.lib.ArrayBuffer) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : VideoElement, aSx : Int, aSy : Int, aSw : Int, aSh : Int) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : CanvasElement, aSx : Int, aSy : Int, aSw : Int, aSh : Int) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : Blob, aSx : Int, aSy : Int, aSw : Int, aSh : Int) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : ImageData, aSx : Int, aSy : Int, aSw : Int, aSh : Int) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : CanvasRenderingContext2D, aSx : Int, aSy : Int, aSw : Int, aSh : Int) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : ImageBitmap, aSx : Int, aSy : Int, aSw : Int, aSh : Int) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : js.lib.ArrayBufferView, aSx : Int, aSy : Int, aSw : Int, aSh : Int) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : js.lib.ArrayBuffer, aSx : Int, aSy : Int, aSw : Int, aSh : Int) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : VideoElement, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout>) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : CanvasElement, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout>) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : Blob, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout>) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : ImageData, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout>) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : CanvasRenderingContext2D, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout>) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : ImageBitmap, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout>) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : js.lib.ArrayBufferView, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout>) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : js.lib.ArrayBuffer, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout>) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : ImageElement ) : Promise<ImageBitmap> {} )\n\t@:overload( function( aImage : ImageElement, aSx : Int, aSy : Int, aSw : Int, aSh : Int ) : Promise<ImageBitmap> {} )\n\tfunction createImageBitmap( aImage : ImageElement, aOffset : Int, aLength : Int, aFormat : ImageBitmapFormat, aLayout : Array<ChannelPixelLayout> ) : Promise<ImageBitmap>;\n\t@:overload( function( input : String, ?init : RequestInit) : Promise<Response> {} )\n\tfunction fetch( input : Request, ?init : RequestInit ) : Promise<Response>;\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla\\HTMLDocument.webidl. Do not edit!\n\npackage js.html;\n\n/**\n\t`HTMLDocument` is an abstract interface which extends the `Document` interface to add HTML-specific features to the document object. It represents the root of the HTML document, within which its entire DOM hierarchy resides.\n\n\tDocumentation [HTMLDocument](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDocument) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDocument$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n\n\t@see <https://developer.mozilla.org/en-US/docs/Web/API/HTMLDocument>\n**/\n@:native(\"HTMLDocument\")\nextern class HTMLDocument extends Document {\n\tvar domain : String;\n\tvar cookie : String;\n\tvar designMode : String;\n\tvar fgColor : String;\n\tvar linkColor : String;\n\tvar vlinkColor : String;\n\tvar alinkColor : String;\n\tvar bgColor : String;\n\tvar all(default,null) : HTMLAllCollection;\n\t\n\t/** @throws DOMError */\n\t@:overload( function( ?type : String, replace : String = \"\" ) : HTMLDocument {} )\n\tfunction open( url : String, name : String, features : String, replace : Bool = false ) : Window;\n\t/** @throws DOMError */\n\tfunction close() : Void;\n\t/** @throws DOMError */\n\tfunction write( text : haxe.extern.Rest<String> ) : Void;\n\t/** @throws DOMError */\n\tfunction writeln( text : haxe.extern.Rest<String> ) : Void;\n\t/** @throws DOMError */\n\tfunction execCommand( commandId : String, showUI : Bool = false, value : String = \"\" ) : Bool;\n\t/** @throws DOMError */\n\tfunction queryCommandEnabled( commandId : String ) : Bool;\n\t/** @throws DOMError */\n\tfunction queryCommandIndeterm( commandId : String ) : Bool;\n\t/** @throws DOMError */\n\tfunction queryCommandState( commandId : String ) : Bool;\n\tfunction queryCommandSupported( commandId : String ) : Bool;\n\t/** @throws DOMError */\n\tfunction queryCommandValue( commandId : String ) : String;\n\tfunction clear() : Void;\n\tfunction captureEvents() : Void;\n\tfunction releaseEvents() : Void;\n\t/** Shorthand for creating an HTML `<td>` element. */\n\tinline function createTableCellElement() : TableCellElement { return cast createElement(\"td\"); }\n\t/** Shorthand for creating an HTML `<select>` element. */\n\tinline function createSelectElement() : SelectElement { return cast createElement(\"select\"); }\n\t/** Shorthand for creating an HTML `<font>` element. */\n\tinline function createFontElement() : FontElement { return cast createElement(\"font\"); }\n\t/** Shorthand for creating an HTML `<dl>` element. */\n\tinline function createDListElement() : DListElement { return cast createElement(\"dl\"); }\n\t/** Shorthand for creating an HTML `<frame>` element. */\n\tinline function createFrameElement() : FrameElement { return cast createElement(\"frame\"); }\n\t/** Shorthand for creating an HTML `<ol>` element. */\n\tinline function createOListElement() : OListElement { return cast createElement(\"ol\"); }\n\t/** Shorthand for creating an HTML `<li>` element. */\n\tinline function createLIElement() : LIElement { return cast createElement(\"li\"); }\n\t/** Shorthand for creating an HTML `<hr>` element. */\n\tinline function createHRElement() : HRElement { return cast createElement(\"hr\"); }\n\t/** Shorthand for creating an HTML `<param>` element. */\n\tinline function createParamElement() : ParamElement { return cast createElement(\"param\"); }\n\t/** Shorthand for creating an HTML `<label>` element. */\n\tinline function createLabelElement() : LabelElement { return cast createElement(\"label\"); }\n\t/** Shorthand for creating an HTML `<track>` element. */\n\tinline function createTrackElement() : TrackElement { return cast createElement(\"track\"); }\n\t/** Shorthand for creating an HTML `<div>` element. */\n\tinline function createDivElement() : DivElement { return cast createElement(\"div\"); }\n\t/** Shorthand for creating an HTML `<title>` element. */\n\tinline function createTitleElement() : TitleElement { return cast createElement(\"title\"); }\n\t/** Shorthand for creating an HTML `<a>` element. */\n\tinline function createAnchorElement() : AnchorElement { return cast createElement(\"a\"); }\n\t/** Shorthand for creating an HTML `<style>` element. */\n\tinline function createStyleElement() : StyleElement { return cast createElement(\"style\"); }\n\t/** Shorthand for creating an HTML `<embed>` element. */\n\tinline function createEmbedElement() : EmbedElement { return cast createElement(\"embed\"); }\n\t/** Shorthand for creating an HTML `<meter>` element. */\n\tinline function createMeterElement() : MeterElement { return cast createElement(\"meter\"); }\n\t/** Shorthand for creating an HTML `<picture>` element. */\n\tinline function createPictureElement() : PictureElement { return cast createElement(\"picture\"); }\n\t/** Shorthand for creating an HTML `<pre>` element. */\n\tinline function createPreElement() : PreElement { return cast createElement(\"pre\"); }\n\t/** Shorthand for creating an HTML `<thead>` element. */\n\tinline function createTableSectionElement() : TableSectionElement { return cast createElement(\"thead\"); }\n\t/** Shorthand for creating an HTML `<head>` element. */\n\tinline function createHeadElement() : HeadElement { return cast createElement(\"head\"); }\n\t/** Shorthand for creating an HTML `<optgroup>` element. */\n\tinline function createOptGroupElement() : OptGroupElement { return cast createElement(\"optgroup\"); }\n\t/** Shorthand for creating an HTML `<audio>` element. */\n\tinline function createAudioElement() : AudioElement { return cast createElement(\"audio\"); }\n\t/** Shorthand for creating an HTML `<video>` element. */\n\tinline function createVideoElement() : VideoElement { return cast createElement(\"video\"); }\n\t/** Shorthand for creating an HTML `<legend>` element. */\n\tinline function createLegendElement() : LegendElement { return cast createElement(\"legend\"); }\n\t/** Shorthand for creating an HTML `<ul>` element. */\n\tinline function createUListElement() : UListElement { return cast createElement(\"ul\"); }\n\t/** Shorthand for creating an HTML `<dir>` element. */\n\tinline function createDirectoryElement() : DirectoryElement { return cast createElement(\"dir\"); }\n\t/** Shorthand for creating an HTML `<table>` element. */\n\tinline function createTableElement() : TableElement { return cast createElement(\"table\"); }\n\t/** Shorthand for creating an HTML `<slot>` element. */\n\tinline function createSlotElement() : SlotElement { return cast createElement(\"slot\"); }\n\t/** Shorthand for creating an HTML `<source>` element. */\n\tinline function createSourceElement() : SourceElement { return cast createElement(\"source\"); }\n\t/** Shorthand for creating an HTML `<link>` element. */\n\tinline function createLinkElement() : LinkElement { return cast createElement(\"link\"); }\n\t/** Shorthand for creating an HTML `<iframe>` element. */\n\tinline function createIFrameElement() : IFrameElement { return cast createElement(\"iframe\"); }\n\t/** Shorthand for creating an HTML `<media>` element. */\n\tinline function createMediaElement() : MediaElement { return cast createElement(\"media\"); }\n\t/** Shorthand for creating an HTML `<map>` element. */\n\tinline function createMapElement() : MapElement { return cast createElement(\"map\"); }\n\t/** Shorthand for creating an HTML `<form>` element. */\n\tinline function createFormElement() : FormElement { return cast createElement(\"form\"); }\n\t/** Shorthand for creating an HTML `<option>` element. */\n\tinline function createOptionElement() : OptionElement { return cast createElement(\"option\"); }\n\t/** Shorthand for creating an HTML `<meta>` element. */\n\tinline function createMetaElement() : MetaElement { return cast createElement(\"meta\"); }\n\t/** Shorthand for creating an HTML `<object>` element. */\n\tinline function createObjectElement() : ObjectElement { return cast createElement(\"object\"); }\n\t/** Shorthand for creating an HTML `<caption>` element. */\n\tinline function createTableCaptionElement() : TableCaptionElement { return cast createElement(\"caption\"); }\n\t/** Shorthand for creating an HTML `<img>` element. */\n\tinline function createImageElement() : ImageElement { return cast createElement(\"img\"); }\n\t/** Shorthand for creating an HTML `<textarea>` element. */\n\tinline function createTextAreaElement() : TextAreaElement { return cast createElement(\"textarea\"); }\n\t/** Shorthand for creating an HTML `<script>` element. */\n\tinline function createScriptElement() : ScriptElement { return cast createElement(\"script\"); }\n\t/** Shorthand for creating an HTML `<datalist>` element. */\n\tinline function createDataListElement() : DataListElement { return cast createElement(\"datalist\"); }\n\t/** Shorthand for creating an HTML `<mod>` element. */\n\tinline function createModElement() : ModElement { return cast createElement(\"mod\"); }\n\t/** Shorthand for creating an HTML `<output>` element. */\n\tinline function createOutputElement() : OutputElement { return cast createElement(\"output\"); }\n\t/** Shorthand for creating an HTML `<area>` element. */\n\tinline function createAreaElement() : AreaElement { return cast createElement(\"area\"); }\n\t/** Shorthand for creating an HTML `<progress>` element. */\n\tinline function createProgressElement() : ProgressElement { return cast createElement(\"progress\"); }\n\t/** Shorthand for creating an HTML `<button>` element. */\n\tinline function createButtonElement() : ButtonElement { return cast createElement(\"button\"); }\n\t/** Shorthand for creating an HTML `<fieldset>` element. */\n\tinline function createFieldSetElement() : FieldSetElement { return cast createElement(\"fieldset\"); }\n\t/** Shorthand for creating an HTML `<menu>` element. */\n\tinline function createMenuElement() : MenuElement { return cast createElement(\"menu\"); }\n\t/** Shorthand for creating an HTML `<br>` element. */\n\tinline function createBRElement() : BRElement { return cast createElement(\"br\"); }\n\t/** Shorthand for creating an HTML `<span>` element. */\n\tinline function createSpanElement() : SpanElement { return cast createElement(\"span\"); }\n\t/** Shorthand for creating an HTML `<details>` element. */\n\tinline function createDetailsElement() : DetailsElement { return cast createElement(\"details\"); }\n\t/** Shorthand for creating an HTML `<body>` element. */\n\tinline function createBodyElement() : BodyElement { return cast createElement(\"body\"); }\n\t/** Shorthand for creating an HTML `<input>` element. */\n\tinline function createInputElement() : InputElement { return cast createElement(\"input\"); }\n\t/** Shorthand for creating an HTML `<base>` element. */\n\tinline function createBaseElement() : BaseElement { return cast createElement(\"base\"); }\n\t/** Shorthand for creating an HTML `<quote>` element. */\n\tinline function createQuoteElement() : QuoteElement { return cast createElement(\"quote\"); }\n\t/** Shorthand for creating an HTML `<frameset>` element. */\n\tinline function createFrameSetElement() : FrameSetElement { return cast createElement(\"frameset\"); }\n\t/** Shorthand for creating an HTML `<canvas>` element. */\n\tinline function createCanvasElement() : CanvasElement { return cast createElement(\"canvas\"); }\n\t/** Shorthand for creating an HTML `<p>` element. */\n\tinline function createParagraphElement() : ParagraphElement { return cast createElement(\"p\"); }\n\t/** Shorthand for creating an HTML `<col>` element. */\n\tinline function createTableColElement() : TableColElement { return cast createElement(\"col\"); }\n\t/** Shorthand for creating an HTML `<tr>` element. */\n\tinline function createTableRowElement() : TableRowElement { return cast createElement(\"tr\"); }\n\t/** Shorthand for creating an HTML `<html>` element. */\n\tinline function createHtmlElement() : HtmlElement { return cast createElement(\"html\"); }\n\t\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla\\Location.webidl. Do not edit!\n\npackage js.html;\n\n/**\n\tThe `Location` interface represents the location (URL) of the object it is linked to. Changes done on it are reflected on the object it relates to. Both the `Document` and `Window` interface have such a linked `Location`, accessible via `Document.location` and `Window.location` respectively.\n\n\tDocumentation [Location](https://developer.mozilla.org/en-US/docs/Web/API/Location) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Location$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n\n\t@see <https://developer.mozilla.org/en-US/docs/Web/API/Location>\n**/\n@:native(\"Location\")\nextern class Location {\n\t\n\t/**\n\t\tIs a `DOMString` containing the entire URL. If changed, the associated document navigates to the new page. It can be set from a different origin than the associated document.\n\t**/\n\tvar href : String;\n\t\n\t/**\n\t\tReturns a `DOMString` containing the canonical form of the origin of the specific location.\n\t**/\n\tvar origin(default,null) : String;\n\t\n\t/**\n\t\tIs a `DOMString` containing the protocol scheme of the URL, including the final `':'`.\n\t**/\n\tvar protocol : String;\n\t\n\t/**\n\t\tIs a `DOMString` containing the host, that is the hostname, a `':'`, and the port of the URL.\n\t**/\n\tvar host : String;\n\t\n\t/**\n\t\tIs a `DOMString` containing the domain of the URL.\n\t**/\n\tvar hostname : String;\n\t\n\t/**\n\t\tIs a `DOMString` containing the port number of the URL.\n\t**/\n\tvar port : String;\n\t\n\t/**\n\t\tIs a `DOMString` containing an initial `'/'` followed by the path of the URL.\n\t**/\n\tvar pathname : String;\n\t\n\t/**\n\t\tIs a `DOMString` containing a `'?'` followed by the parameters or \"querystring\" of the URL. Modern browsers provide URLSearchParams and URL.searchParams to make it easy to parse out the parameters from the querystring.\n\t**/\n\tvar search : String;\n\t\n\t/**\n\t\tIs a `DOMString` containing a `'#'` followed by the fragment identifier of the URL.\n\t**/\n\tvar hash : String;\n\t\n\t\n\t/**\n\t\tLoads the resource at the URL provided in parameter.\n\t\t@throws DOMError\n\t**/\n\tfunction assign( url : String ) : Void;\n\t\n\t/**\n\t\tReplaces the current resource with the one at the provided URL. The difference from the `assign()` method is that after using `replace()` the current page will not be saved in session `History`, meaning the user won't be able to use the back button to navigate to it.\n\t\t@throws DOMError\n\t**/\n\tfunction replace( url : String ) : Void;\n\t\n\t/**\n\t\tReloads the resource from the current URL. Its optional unique parameter is a `Boolean`, which, when it is `true`, causes the page to always be reloaded from the server. If it is `false` or not specified, the browser may reload the page from its cache.\n\t\t@throws DOMError\n\t**/\n\tfunction reload( forceget : Bool = false ) : Void;\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla\\Navigator.webidl. Do not edit!\n\npackage js.html;\n\nimport js.lib.Promise;\n\n/**\n\tThe `Navigator` interface represents the state and the identity of the user agent. It allows scripts to query it and to register themselves to carry on some activities.\n\n\tDocumentation [Navigator](https://developer.mozilla.org/en-US/docs/Web/API/Navigator) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Navigator$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n\n\t@see <https://developer.mozilla.org/en-US/docs/Web/API/Navigator>\n**/\n@:native(\"Navigator\")\nextern class Navigator {\n\n\t/**\n\t\tReturns a `Permissions` object that can be used to query and update permission status of APIs covered by the Permissions API.\n\t**/\n\tvar permissions(default,null) : Permissions;\n\tvar mimeTypes(default,null) : MimeTypeArray;\n\tvar plugins(default,null) : PluginArray;\n\n\t/**\n\t\tReports the value of the user's do-not-track preference. When this value is \"yes\", your web site or application should not track the user.\n\t**/\n\tvar doNotTrack(default,null) : String;\n\tvar maxTouchPoints(default,null) : Int;\n\n\t/**\n\t\tReturns a string that represents the current operating system.\n\t**/\n\tvar oscpu(default,null) : String;\n\n\t/**\n\t\tReturns the vendor name of the current browser (e.g., \"Netscape6\").\n\t**/\n\tvar vendor(default,null) : String;\n\n\t/**\n\t\tReturns the vendor version number (e.g. \"6.1\").\n\t**/\n\tvar vendorSub(default,null) : String;\n\n\t/**\n\t\tReturns the build number of the current browser (e.g., \"20060909\").\n\t**/\n\tvar productSub(default,null) : String;\n\n\t/**\n\t\tReturns false if setting a cookie will be ignored and true otherwise.\n\t**/\n\tvar cookieEnabled(default,null) : Bool;\n\n\t/**\n\t\tReturns the build identifier of the browser (e.g., \"2006090803\").\n\t**/\n\tvar buildID(default,null) : String;\n\n\t/**\n\t\tReturns a reference to a `MediaDevices` object which can then be used to get information about available media devices (`MediaDevices.enumerateDevices()`), find out what constrainable properties are supported for media on the user's computer and user agent (`MediaDevices.getSupportedConstraints()`), and to request access to media using `MediaDevices.getUserMedia()`.\n\t**/\n\tvar mediaDevices(default,null) : MediaDevices;\n\n\t/**\n\t\tReturns a `ServiceWorkerContainer` object, which provides access to registration, removal, upgrade, and communication with the `ServiceWorker` objects for the associated document.\n\t**/\n\tvar serviceWorker(default,null) : ServiceWorkerContainer;\n\tvar clipboard(default,null) : Clipboard;\n\tvar hardwareConcurrency(default,null) : Int;\n\n\t/**\n\t\tReturns a `Geolocation` object allowing accessing the location of the device.\n\t**/\n\tvar geolocation(default,null) : Geolocation;\n\tvar appCodeName(default,null) : String;\n\tvar appName(default,null) : String;\n\tvar appVersion(default,null) : String;\n\tvar platform(default,null) : String;\n\tvar userAgent(default,null) : String;\n\tvar product(default,null) : String;\n\tvar language(default,null) : String;\n\tvar languages(default,null) : Array<String>;\n\tvar onLine(default,null) : Bool;\n\tvar storage(default,null) : StorageManager;\n\n\t@:overload( function( duration : Int ) : Bool {} )\n\tfunction vibrate( pattern : Array<Int> ) : Bool;\n\tfunction javaEnabled() : Bool;\n\t/** @throws DOMError */\n\tfunction getGamepads() : Array<Gamepad>;\n\t/** @throws DOMError */\n\tfunction requestMIDIAccess( ?options : js.html.midi.MIDIOptions ) : Promise<js.html.midi.MIDIAccess>;\n\t/** @throws DOMError */\n\t@:overload( function( url : String, ?data : js.lib.ArrayBufferView) : Bool {} )\n\t@:overload( function( url : String, ?data : js.lib.ArrayBuffer) : Bool {} )\n\t@:overload( function( url : String, ?data : FormData) : Bool {} )\n\t@:overload( function( url : String, ?data : URLSearchParams) : Bool {} )\n\t@:overload( function( url : String, ?data : String) : Bool {} )\n\tfunction sendBeacon( url : String, ?data : Blob ) : Bool;\n\tfunction requestMediaKeySystemAccess( keySystem : String, supportedConfigurations : Array<js.html.eme.MediaKeySystemConfiguration> ) : Promise<js.html.eme.MediaKeySystemAccess>;\n\tfunction taintEnabled() : Bool;\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla\\Console.webidl. Do not edit!\n\npackage js.html;\n\n/**\n\tThe `Console` object provides access to the browser's debugging console (e.g. the Web Console in Firefox). The specifics of how it works varies from browser to browser, but there is a de facto set of features that are typically provided.\n\n\tDocumentation [Console](https://developer.mozilla.org/en-US/docs/Web/API/Console) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Console$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n\n\t@see <https://developer.mozilla.org/en-US/docs/Web/API/Console>\n**/\nextern interface ConsoleInstance {\n\t\n\t/**\n\t\tLog a message and stack trace to console if the first argument is `false`.\n\t**/\n\tfunction assert( condition : Bool = false, data : haxe.extern.Rest<Dynamic> ) : Void;\n\t\n\t/**\n\t\tClear the console.\n\t**/\n\tfunction clear() : Void;\n\t\n\t/**\n\t\tLog the number of times this line has been called with the given label.\n\t**/\n\tfunction count( label : String = \"default\" ) : Void;\n\t\n\t/**\n\t\tResets the value of the counter with the given label.\n\t**/\n\tfunction countReset( label : String = \"default\" ) : Void;\n\t\n\t/**\n\t\tOutputs a message to the console with the log level `\"debug\"`.\n\t\t Note: Starting with Chromium 58 this method only appears in Chromium browser consoles when level \"Verbose\" is selected.\n\t\t \n\t**/\n\tfunction debug( data : haxe.extern.Rest<Dynamic> ) : Void;\n\t\n\t/**\n\t\tOutputs an error message. You may use string substitution and additional arguments with this method.\n\t**/\n\tfunction error( data : haxe.extern.Rest<Dynamic> ) : Void;\n\t\n\t/**\n\t\tInformative logging of information. You may use string substitution and additional arguments with this method.\n\t**/\n\tfunction info( data : haxe.extern.Rest<Dynamic> ) : Void;\n\t\n\t/**\n\t\tFor general output of logging information. You may use string substitution and additional arguments with this method.\n\t**/\n\tfunction log( data : haxe.extern.Rest<Dynamic> ) : Void;\n\t\n\t/**\n\t\tDisplays tabular data as a table.\n\t**/\n\tfunction table( data : haxe.extern.Rest<Dynamic> ) : Void;\n\t\n\t/**\n\t\tOutputs a stack trace.\n\t**/\n\tfunction trace( data : haxe.extern.Rest<Dynamic> ) : Void;\n\t\n\t/**\n\t\tOutputs a warning message. You may use string substitution and additional arguments with this method.\n\t**/\n\tfunction warn( data : haxe.extern.Rest<Dynamic> ) : Void;\n\t\n\t/**\n\t\tDisplays an interactive listing of the properties of a specified JavaScript object. This listing lets you use disclosure triangles to examine the contents of child objects.\n\t**/\n\tfunction dir( data : haxe.extern.Rest<Dynamic> ) : Void;\n\t\n\t/**\n\t\t\n\t\t Displays an XML/HTML Element representation of the specified object if possible or the JavaScript Object view if it is not possible.\n\t\t \n\t**/\n\tfunction dirxml( data : haxe.extern.Rest<Dynamic> ) : Void;\n\t\n\t/**\n\t\tCreates a new inline group, indenting all following output by another level. To move back out a level, call `groupEnd()`.\n\t**/\n\tfunction group( data : haxe.extern.Rest<Dynamic> ) : Void;\n\t\n\t/**\n\t\tCreates a new inline group, indenting all following output by another level. However, unlike `group()` this starts with the inline group collapsed requiring the use of a disclosure button to expand it. To move back out a level, call `groupEnd()`.\n\t**/\n\tfunction groupCollapsed( data : haxe.extern.Rest<Dynamic> ) : Void;\n\t\n\t/**\n\t\tExits the current inline group.\n\t**/\n\tfunction groupEnd() : Void;\n\t\n\t/**\n\t\tStarts a timer with a name specified as an input parameter. Up to 10,000 simultaneous timers can run on a given page.\n\t**/\n\tfunction time( label : String = \"default\" ) : Void;\n\t\n\t/**\n\t\tLogs the value of the specified timer to the console.\n\t**/\n\tfunction timeLog( label : String = \"default\", data : haxe.extern.Rest<Dynamic> ) : Void;\n\t\n\t/**\n\t\tStops the specified timer and logs the elapsed time in seconds since it started.\n\t**/\n\tfunction timeEnd( label : String = \"default\" ) : Void;\n\t\n\t/**\n\t\tAn alias for `error()`.\n\t**/\n\tfunction exception( data : haxe.extern.Rest<Dynamic> ) : Void;\n\t\n\t/**\n\t\tAdds a marker to the browser's Timeline or Waterfall tool.\n\t**/\n\tfunction timeStamp( ?data : Dynamic ) : Void;\n\t\n\t/**\n\t\tStarts the browser's built-in profiler (for example, the Firefox performance tool). You can specify an optional name for the profile.\n\t**/\n\tfunction profile( data : haxe.extern.Rest<Dynamic> ) : Void;\n\t\n\t/**\n\t\tStops the profiler. You can see the resulting profile in the browser's performance tool (for example, the Firefox performance tool).\n\t**/\n\tfunction profileEnd( data : haxe.extern.Rest<Dynamic> ) : Void;\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n// standard Haxe types\n\n/**\n\tThe standard `Void` type. Only `null` values can be of the type `Void`.\n\n\t@see https://haxe.org/manual/types-void.html\n**/\n#if jvm\n@:runtimeValue\n#end\n@:coreType abstract Void {}\n\n/**\n\tThe standard `Float` type, this is a double-precision IEEE 64bit float.\n\n\tOn static targets, `null` cannot be assigned to Float. If this is necessary,\n\t`Null<Float>` can be used instead.\n\n\t`Std.int` converts a `Float` to an `Int`, rounded towards 0.\n\t`Std.parseFloat` converts a `String` to a `Float`.\n\n\t@see https://haxe.org/manual/types-basic-types.html\n\t@see https://haxe.org/manual/types-nullability.html\n**/\n@:coreType @:notNull @:runtimeValue abstract Float {}\n\n/**\n\tThe standard `Int` type. Its precision depends on the platform.\n\n\tOn static targets, `null` cannot be assigned to `Int`. If this is necessary,\n\t`Null<Int>` can be used instead.\n\n\t`Std.int` converts a `Float` to an `Int`, rounded towards 0.\n\t`Std.parseInt` converts a `String` to an `Int`.\n\n\t@see https://haxe.org/manual/types-basic-types.html\n\t@see https://haxe.org/manual/std-math-integer-math.html\n\t@see https://haxe.org/manual/types-nullability.html\n**/\n@:coreType @:notNull @:runtimeValue abstract Int to Float {}\n\n#if (java || cs || hl || cpp)\n/**\n\tSingle-precision IEEE 32bit float (4-byte).\n**/\n@:coreType @:notNull @:runtimeValue abstract Single to Float from Float {}\n#end\n\n/**\n\t`Null<T>` is a wrapper that can be used to make the basic types `Int`,\n\t`Float` and `Bool` nullable on static targets.\n\n\tIf null safety is enabled, only types wrapped in `Null<T>` are nullable.\n\n\tOtherwise, it has no effect on non-basic-types, but it can be useful as a way to document\n\tthat `null` is an acceptable value for a method argument, return value or variable.\n\n\t@see https://haxe.org/manual/types-nullability.html\n**/\n@:forward\n@:coreType\nabstract Null<T> from T to T {}\n\n/**\n\tThe standard Boolean type, which can either be `true` or `false`.\n\n\tOn static targets, `null` cannot be assigned to `Bool`. If this is necessary,\n\t`Null<Bool>` can be used instead.\n\n\t@see https://haxe.org/manual/types-bool.html\n\t@see https://haxe.org/manual/types-nullability.html\n**/\n@:coreType @:notNull @:runtimeValue abstract Bool {}\n\n/**\n\t`Dynamic` is a special type which is compatible with all other types.\n\n\tUse of `Dynamic` should be minimized as it prevents several compiler\n\tchecks and optimizations. See `Any` type for a safer alternative for\n\trepresenting values of any type.\n\n\t@see https://haxe.org/manual/types-dynamic.html\n**/\n@:coreType @:runtimeValue abstract Dynamic<T> {}\n\n/**\n\tAn `Iterator` is a structure that permits iteration over elements of type `T`.\n\n\tAny class with matching `hasNext()` and `next()` fields is considered an `Iterator`\n\tand can then be used e.g. in `for`-loops. This makes it easy to implement\n\tcustom iterators.\n\n\t@see https://haxe.org/manual/lf-iterators.html\n**/\ntypedef Iterator<T> = {\n\t/**\n\t\tReturns `false` if the iteration is complete, `true` otherwise.\n\n\t\tUsually iteration is considered to be complete if all elements of the\n\t\tunderlying data structure were handled through calls to `next()`. However,\n\t\tin custom iterators any logic may be used to determine the completion\n\t\tstate.\n\t**/\n\tfunction hasNext():Bool;\n\n\t/**\n\t\tReturns the current item of the `Iterator` and advances to the next one.\n\n\t\tThis method is not required to check `hasNext()` first. A call to this\n\t\tmethod while `hasNext()` is `false` yields unspecified behavior.\n\n\t\tOn the other hand, iterators should not require a call to `hasNext()`\n\t\tbefore the first call to `next()` if an element is available.\n\t**/\n\tfunction next():T;\n}\n\n/**\n\tAn `Iterable` is a data structure which has an `iterator()` method.\n\tSee `Lambda` for generic functions on iterable structures.\n\n\t@see https://haxe.org/manual/lf-iterators.html\n**/\ntypedef Iterable<T> = {\n\tfunction iterator():Iterator<T>;\n}\n\n/**\n\tA `KeyValueIterator` is an `Iterator` that has a key and a value.\n**/\ntypedef KeyValueIterator<K, V> = Iterator<{key:K, value:V}>;\n\n/**\n\tA `KeyValueIterable` is a data structure which has a `keyValueIterator()`\n\tmethod to iterate over key-value-pairs.\n**/\ntypedef KeyValueIterable<K, V> = {\n\tfunction keyValueIterator():KeyValueIterator<K, V>;\n}\n\n/**\n\t`ArrayAccess` is used to indicate a class that can be accessed using brackets.\n\tThe type parameter represents the type of the elements stored.\n\n\tThis interface should be used for externs only. Haxe does not support custom\n\tarray access on classes. However, array access can be implemented for\n\tabstract types.\n\n\t@see https://haxe.org/manual/types-abstract-array-access.html\n**/\nextern interface ArrayAccess<T> {}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla\\Storage.webidl. Do not edit!\n\npackage js.html;\n\n/**\n\tThe `Storage` interface of the Web Storage API provides access to a particular domain's session or local storage. It allows, for example, the addition, modification, or deletion of stored data items.\n\n\tDocumentation [Storage](https://developer.mozilla.org/en-US/docs/Web/API/Storage) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/Storage$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n\n\t@see <https://developer.mozilla.org/en-US/docs/Web/API/Storage>\n**/\n@:native(\"Storage\")\nextern class Storage {\n\t\n\t/**\n\t\tReturns an integer representing the number of data items stored in the `Storage` object.\n\t**/\n\tvar length(default,null) : Int;\n\t\n\t\n\t/**\n\t\tWhen passed a number n, this method will return the name of the nth key in the storage.\n\t\t@throws DOMError\n\t**/\n\tfunction key( index : Int ) : String;\n\t\n\t/**\n\t\tWhen passed a key name, will return that key's value.\n\t\t@throws DOMError\n\t**/\n\tfunction getItem( key : String ) : String;\n\t\n\t/**\n\t\tWhen passed a key name and value, will add that key to the storage, or update that key's value if it already exists.\n\t\t@throws DOMError\n\t**/\n\tfunction setItem( key : String, value : String ) : Void;\n\t\n\t/**\n\t\tWhen passed a key name, will remove that key from the storage.\n\t\t@throws DOMError\n\t**/\n\tfunction removeItem( key : String ) : Void;\n\t\n\t/**\n\t\tWhen invoked, will empty all keys out of the storage.\n\t\t@throws DOMError\n\t**/\n\tfunction clear() : Void;\n}","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated from mozilla\\XMLHttpRequest.webidl. Do not edit!\n\npackage js.html;\n\n/**\n\tUse `XMLHttpRequest` (XHR) objects to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing.\n\n\tDocumentation [XMLHttpRequest](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n\n\t@see <https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest>\n**/\n@:native(\"XMLHttpRequest\")\nextern class XMLHttpRequest extends XMLHttpRequestEventTarget {\n\tstatic inline var UNSENT : Int = 0;\n\tstatic inline var OPENED : Int = 1;\n\tstatic inline var HEADERS_RECEIVED : Int = 2;\n\tstatic inline var LOADING : Int = 3;\n\tstatic inline var DONE : Int = 4;\n\t\n\t\n\t/**\n\t\tAn `EventHandler` that is called whenever the `readyState` attribute changes.\n\t**/\n\tvar onreadystatechange : haxe.Constraints.Function;\n\t\n\t/**\n\t\tReturns an `unsigned short`, the state of the request.\n\t**/\n\tvar readyState(default,null) : Int;\n\t\n\t/**\n\t\tIs an `unsigned long` representing the number of milliseconds a request can take before automatically being terminated.\n\t**/\n\tvar timeout : Int;\n\t\n\t/**\n\t\tIs a `Boolean` that indicates whether or not cross-site `Access-Control` requests should be made using credentials such as cookies or authorization headers.\n\t**/\n\tvar withCredentials : Bool;\n\t\n\t/**\n\t\tIs an `XMLHttpRequestUpload`, representing the upload process.\n\t**/\n\tvar upload(default,null) : XMLHttpRequestUpload;\n\t\n\t/**\n\t\tReturns the serialized URL of the response or the empty string if the URL is null.\n\t**/\n\tvar responseURL(default,null) : String;\n\t\n\t/**\n\t\tReturns an `unsigned short` with the status of the response of the request.\n\t**/\n\tvar status(default,null) : Int;\n\t\n\t/**\n\t\tReturns a `DOMString` containing the response string returned by the HTTP server. Unlike `XMLHTTPRequest.status`, this includes the entire text of the response message (\"`200 OK`\", for example).\n\t**/\n\tvar statusText(default,null) : String;\n\t\n\t/**\n\t\tIs an enumerated value that defines the response type.\n\t**/\n\tvar responseType : XMLHttpRequestResponseType;\n\t\n\t/**\n\t\tReturns an `ArrayBuffer`, `Blob`, `Document`, JavaScript object, or a `DOMString`, depending on the value of `XMLHttpRequest.responseType`. that contains the response entity body.\n\t**/\n\tvar response(default,null) : Dynamic;\n\t\n\t/**\n\t\tReturns a `DOMString` that contains the response to the request as text, or `null` if the request was unsuccessful or has not yet been sent.\n\t**/\n\tvar responseText(default,null) : String;\n\t\n\t/**\n\t\tReturns a `Document` containing the response to the request, or `null` if the request was unsuccessful, has not yet been sent, or cannot be parsed as XML or HTML.\n\t**/\n\tvar responseXML(default,null) : HTMLDocument;\n\t\n\t/** @throws DOMError */\n\t@:overload( function( ?params : Dynamic/*MISSING MozXMLHttpRequestParameters*/ ) : Void {} )\n\tfunction new( ignored : String ) : Void;\n\t\n\t/**\n\t\tInitializes a request. This method is to be used from JavaScript code; to initialize a request from native code, use `openRequest()` instead.\n\t\t@throws DOMError\n\t**/\n\t@:overload( function( method : String, url : String ) : Void {} )\n\tfunction open( method : String, url : String, async : Bool, ?user : String, ?password : String ) : Void;\n\t\n\t/**\n\t\tSets the value of an HTTP request header. You must call `setRequestHeader()`after `open()`, but before `send()`.\n\t\t@throws DOMError\n\t**/\n\tfunction setRequestHeader( header : String, value : String ) : Void;\n\t\n\t/**\n\t\tSends the request. If the request is asynchronous (which is the default), this method returns as soon as the request is sent.\n\t\t@throws DOMError\n\t**/\n\t@:overload( function( ?body : Blob) : Void {} )\n\t@:overload( function( ?body : js.lib.ArrayBufferView) : Void {} )\n\t@:overload( function( ?body : js.lib.ArrayBuffer) : Void {} )\n\t@:overload( function( ?body : FormData) : Void {} )\n\t@:overload( function( ?body : URLSearchParams) : Void {} )\n\t@:overload( function( ?body : String) : Void {} )\n\tfunction send( ?body : HTMLDocument ) : Void;\n\t\n\t/**\n\t\tAborts the request if it has already been sent.\n\t\t@throws DOMError\n\t**/\n\tfunction abort() : Void;\n\t\n\t/**\n\t\tReturns the string containing the text of the specified header, or `null` if either the response has not yet been received or the header doesn't exist in the response.\n\t\t@throws DOMError\n\t**/\n\tfunction getResponseHeader( header : String ) : String;\n\t\n\t/**\n\t\tReturns all the response headers, separated by CRLF, as a string, or `null` if no response has been received.\n\t\t@throws DOMError\n\t**/\n\tfunction getAllResponseHeaders() : String;\n\t\n\t/**\n\t\tOverrides the MIME type returned by the server.\n\t\t@throws DOMError\n\t**/\n\tfunction overrideMimeType( mime : String ) : Void;\n}"]}