{"sourceRoot":"","names":[],"mappings":";AAwBa,qBCCN","version":3,"file":"Symbol.d.ts.map","sources":["../../../../../../haxe/versions/4.2.1/std/js/Symbol.hx","../../../../../../haxe/versions/4.2.1/std/js/lib/Symbol.hx"],"sourcesContent":["/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js;\n\n@:deprecated typedef Symbol = js.lib.Symbol;\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.lib;\n\n@:native(\"Symbol\")\nextern class Symbol {\n\t/**\n\t\tTo create a new primitive symbol, use `new Symbol()` with an optional string as its `description`.\n\n\t\tNOTE: Unlike in plain JavaScript, `new Symbol()` syntax is used in Haxe. This generates a `Symbol(...)`\n\t\texpression as required by the JavaScript specification.\n\t**/\n\t@:pure @:selfCall function new(?description:String);\n\n\t/**\n\t\tSearches for existing symbols with the given key and returns it if found.\n\t\tOtherwise a new symbol gets created in the global symbol registry with this key.\n\t**/\n\t@:native(\"for\") static function for_(key:String):Symbol;\n\n\t/**\n\t\tRetrieves a shared symbol key from the global symbol registry for the given symbol.\n\t**/\n\t@:pure static function keyFor(sym:Symbol):Null<String>;\n\n\t/**\n\t\tReturns a string containing the description of the Symbol.\n\t**/\n\t@:pure function toString():String;\n\n\t/**\n\t\tA method returning the default iterator for an object.\n\t**/\n\tstatic var iterator(default, null):Symbol;\n\n\t/**\n\t\tA method that returns the default AsyncIterator for an object.\n\t**/\n\tstatic var asyncIterator(default, null):Symbol;\n\n\t/**\n\t\tRetrieve symbol from a given `object`.\n\n\t\tNOTE: This is a Haxe-specific method that generates an `object[symbol]` expression.\n\t**/\n\tinline function ofObject<T>(object:{}):Null<T>\n\t\treturn (cast object)[cast this];\n}\n"]}