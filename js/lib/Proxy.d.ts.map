{"sourceRoot":"","names":[],"mappings":"QAmMA;;YCzJA,aAAqB,MA2DpB,QCnBD,iBDxCqB,+BEjBd,gBFiFN,YCxBD,iBErD0B,oBDJnB,kBCImB,QFEf,ODwCV,iBCWD,iBDxCqB,aIrBJ,oBL8KjB,6BEtGoC,UDFnC,iBCTD,iBDxCqB,aIrBJ,WHwEmB,UDZnC,MCCD,iBDxCqB,aIrBJ,kBH6DjB,oBDhBC,2BCgBD,iBDxCqB,SIrBJ,WH6DjB,OFiHA,2BCrJC,iBCoCD,iBDxCqB,MCwCrB,YDNC,MCMD,iBDxCqB,SIrBJ,WHwEmB,UDrCnC,eC0BD,iBDxCqB,MCmDe,UDGnC,UCdD,iBDxCqB,MEjBd,AEJU,WJwChB,oBCqBD,iBDxCqB,MCmDe,UDPnC,MCJD,iBDxCqB,aIrBJ,8BH6DjB,cAWoC,UD1CnC,iBC+BD,iBDxCqB,cCwCrB,cAWoC;;YDgBpC,eAAuB,MAItB,OAhFM,MA4EgB,IAStB,cCvFU","version":3,"file":"Proxy.d.ts.map","sources":["../../../../../../../haxe/versions/4.1.2/std/js/lib/Object.hx","../../../../../../../haxe/versions/4.1.2/std/js/lib/Proxy.hx","../../../../../../../haxe/versions/4.1.2/std/StdTypes.hx","../../../../../../../haxe/versions/4.1.2/std/js/_std/Array.hx","../../../../../../../haxe/versions/4.1.2/std/Class.hx","../../../../../../../haxe/versions/4.1.2/std/js/_std/String.hx"],"sourcesContent":["/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.lib;\n\nimport haxe.extern.Rest;\nimport haxe.DynamicAccess;\n\n/**\n\tThe `js.lib.Object` constructor creates an object wrapper.\n\n\tDocumentation [Object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n**/\n@:native(\"Object\")\nextern class Object {\n\t/**\n\t\tCopies the values of all enumerable own properties from one or more\n\t\tsource objects to a target object.\n\t**/\n\tstatic function assign<T:{}>(target:T, sources:Rest<{}>):T;\n\n\t/**\n\t\tCreates a new object with the specified prototype object and properties.\n\t**/\n\t@:pure static function create<T>(proto:{}, ?propertiesObject:DynamicAccess<ObjectPropertyDescriptor>):T;\n\n\t/**\n\t\tAdds the named properties described by the given descriptors to an object.\n\t**/\n\tstatic function defineProperties<T:{}>(obj:T, props:DynamicAccess<ObjectPropertyDescriptor>):T;\n\n\t/**\n\t\tAdds the named property described by a given descriptor to an object.\n\t**/\n\tstatic function defineProperty<T:{}>(obj:T, prop:String, descriptor:ObjectPropertyDescriptor):T;\n\n\t/**\n\t\tReturns an array containing all of the [key, value] pairs of a given\n\t\tobject's own enumerable string properties.\n\t**/\n\t@:pure static function entries(obj:{}):Array<ObjectEntry>;\n\n\t/**\n\t\tFreezes an object: other code can't delete or change any properties.\n\t**/\n\tstatic function freeze<T:{}>(obj:T):T;\n\n\t/**\n\t\tReturns a new object from an iterable of key-value pairs\n\t\t(reverses Object.entries).\n\t**/\n\t@:pure static function fromEntries<T:{}>(iterable:Any):T;\n\n\t/**\n\t\tReturns a property descriptor for a named property on an object.\n\t**/\n\t@:pure static function getOwnPropertyDescriptor(obj:{}, prop:String):Null<ObjectPropertyDescriptor>;\n\n\t/**\n\t\tReturns an array containing the names of all of the given object's own\n\t\tenumerable and non-enumerable properties.\n\t**/\n\t@:pure static function getOwnPropertyNames(obj:{}):Array<String>;\n\n\t/**\n\t\tReturns an array of all symbol properties found directly upon a given object.\n\t**/\n\t@:pure static function getOwnPropertySymbols(obj:{}):Array<Symbol>;\n\n\t/**\n\t\tReturns the prototype of the specified object.\n\t**/\n\t@:pure static function getPrototypeOf<TProto:{}>(obj:{}):Null<TProto>;\n\n\t/**\n\t\tCompares if two values are the same value. Equates all NaN values\n\t\t(which differs from both Abstract Equality Comparison and\n\t\tStrict Equality Comparison).\n\t**/\n\t@:pure static function is<T>(value1:T, value2:T):Bool;\n\n\t/**\n\t\tDetermines if extending of an object is allowed.\n\t**/\n\t@:pure static function isExtensible(obj:{}):Bool;\n\n\t/**\n\t\tDetermines if an object was frozen.\n\t**/\n\t@:pure static function isFrozen(obj:{}):Bool;\n\n\t/**\n\t\tDetermines if an object is sealed.\n\t**/\n\t@:pure static function isSealed(obj:{}):Bool;\n\n\t/**\n\t\tReturns an array containing the names of all of the given object's own\n\t\tenumerable string properties.\n\t**/\n\t@:pure static function keys(obj:{}):Array<String>;\n\n\t/**\n\t\tPrevents any extensions of an object.\n\t**/\n\tstatic function preventExtensions<T:{}>(obj:T):T;\n\n\t/**\n\t\tPrevents other code from deleting properties of an object.\n\t**/\n\tstatic function seal<T:{}>(obj:T):T;\n\n\t/**\n\t\tSets the prototype (i.e., the internal Prototype property).\n\t**/\n\tstatic function setPrototypeOf<T:{}>(obj:T, prototype:Null<{}>):T;\n\n\t/**\n\t\tReturns an array containing the values that correspond to all of\n\t\ta given object's own enumerable string properties.\n\t**/\n\t@:pure static function values(obj:{}):Array<Any>;\n\n\t/**\n\t\tAllows the addition of properties to all objects of type Object.\n\t**/\n\tstatic var prototype(default, never):ObjectPrototype;\n\n\t/**\n\t\tThe Object constructor creates an object wrapper.\n\t**/\n\t@:pure function new(?value:Any);\n}\n\n/**\n\tType for\n\t@see <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object>\n**/\ntypedef ObjectPrototype = {\n\t/**\n\t\tReturns a boolean indicating whether an object contains the specified\n\t\tproperty as a direct property of that object and not inherited through\n\t\tthe prototype chain.\n\t**/\n\tvar hasOwnProperty(default, never):Function;\n\n\t/**\n\t\tReturns a boolean indicating whether the object this method is called\n\t\tupon is in the prototype chain of the specified object.\n\t**/\n\tvar isPrototypeOf(default, never):Function;\n\n\t/**\n\t\tReturns a boolean indicating if the internal enumerable attribute is set.\n\t**/\n\tvar propertyIsEnumerable(default, never):Function;\n\n\t/**\n\t\tCalls `toString()`.\n\t**/\n\tvar toLocaleString(default, never):Function;\n\n\t/**\n\t\tReturns a string representation of the object.\n\t**/\n\tvar toString(default, never):Function;\n\n\t/**\n\t\tReturns the primitive value of the specified object.\n\t**/\n\tvar valueOf(default, never):Function;\n}\n\n/**\n\t@see <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty>\n**/\ntypedef ObjectPropertyDescriptor = {\n\t/**\n\t\t`true` if and only if the type of this property descriptor may be\n\t\tchanged and if the property may be deleted from the corresponding object.\n\n\t\tDefaults to `false`.\n\t**/\n\tvar ?configurable:Bool;\n\n\t/**\n\t\t`true` if and only if this property shows up during enumeration of the\n\t\tproperties on the corresponding object.\n\n\t\tDefaults to `false`.\n\t**/\n\tvar ?enumerable:Bool;\n\n\t/**\n\t\tThe value associated with the property.\n\t\tCan be any valid JavaScript value (number, object, function, etc).\n\t**/\n\tvar ?value:Any;\n\n\t/**\n\t\t`true` if and only if the value associated with the property may be\n\t\tchanged with an assignment operator.\n\n\t\tDefaults to `false`.\n\t**/\n\tvar ?writable:Bool;\n\n\t/**\n\t\tA function which serves as a getter for the property, or `undefined` if\n\t\tthere is no getter. When the property is accessed, this function is\n\t\tcalled without arguments and with `this` set to the object through which\n\t\tthe property is accessed (this may not be the object on which the\n\t\tproperty is defined due to inheritance).\n\t\tThe return value will be used as the value of the property.\n\t**/\n\tvar ?get:Void->Any;\n\n\t/**\n\t\tA function which serves as a setter for the property, or undefined if\n\t\tthere is no setter. When the property is assigned to, this function\n\t\tis called with one argument (the value being assigned to the property)\n\t\tand with `this` set to the object through which the property is assigned.\n\t**/\n\tvar ?set:Any->Void;\n}\n\n/**\n\tKey/value access helper for `js.lib.Object.entries()`.\n**/\nabstract ObjectEntry(Array<Any>) {\n\tpublic var key(get, never):String;\n\tpublic var value(get, never):Any;\n\n\tinline function get_key():String\n\t\treturn this[0];\n\n\tinline function get_value():Any\n\t\treturn this[1];\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.lib;\n\nimport js.lib.Object;\n\n/**\n\tThe `Proxy` object is used to define custom behavior for fundamental operations\n\t(e.g. property lookup, assignment, enumeration, function invocation, etc).\n\n\tDocumentation [Proxy](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n**/\n@:native(\"Proxy\")\nextern class Proxy<T:{}> {\n\t@:pure function new(target:T, handler:ProxyHandler<T>);\n\n\t/**\n\t\tCreates a revocable `Proxy` object.\n\t**/\n\t@:pure static function revocable<T:{}>(target:T, handler:ProxyHandler<T>):RevocableProxy<T>;\n}\n\ntypedef ProxyHandler<T:{}> = {\n\t/**\n\t\tA trap for `Object.getPrototypeOf`.\n\t**/\n\tvar ?getPrototypeOf:(target:T) -> Null<{}>;\n\n\t/**\n\t\tA trap for `Object.setPrototypeOf`.\n\t**/\n\tvar ?setPrototypeOf:(target:T, prototype:Null<{}>) -> Bool;\n\n\t/**\n\t\tA trap for `Object.isExtensible`.\n\t**/\n\tvar ?isExtensible:(target:T) -> Bool;\n\n\t/**\n\t\tA trap for `Object.preventExtensions`.\n\t**/\n\tvar ?preventExtensions:(target:T) -> Bool;\n\n\t/**\n\t\tA trap for `Object.getOwnPropertyDescriptor`.\n\t**/\n\tvar ?getOwnPropertyDescriptor:(target:T, prop:String) -> Null<ObjectPropertyDescriptor>;\n\n\t/**\n\t\tA trap for `Object.defineProperty`.\n\t**/\n\tvar ?defineProperty:(target:T, property:String, descriptor:ObjectPropertyDescriptor) -> Bool;\n\n\t/**\n\t\tA trap for the `in` operator.\n\t**/\n\tvar ?has:(target:T, prop:String) -> Bool;\n\n\t/**\n\t\tA trap for getting property values.\n\t**/\n\tvar ?get:(target:T, property:String, receiver:Null<{}>) -> Any;\n\n\t/**\n\t\tA trap for setting property values.\n\t**/\n\tvar ?set:(target:T, property:String, value:Any, receiver:Null<{}>) -> Bool;\n\n\t/**\n\t\tA trap for the `delete` operator.\n\t**/\n\tvar ?deleteProperty:(target:T, property:String) -> Bool;\n\n\t/**\n\t\tA trap for `Object.getOwnPropertyNames` and `Object.getOwnPropertySymbols`.\n\t**/\n\tvar ?ownKeys:(target:T) -> Array<String>;\n\n\t/**\n\t\tA trap a function call.\n\t**/\n\tvar ?apply:(target:T, thisArg:{}, argumentsList:Array<Any>) -> Any;\n\n\t/**\n\t\tA trap for the `new` operator.\n\t**/\n\tvar ?construct:(target:Class<T>, argumentsList:Array<Any>, newTarget:Class<Any>) -> Void;\n}\n\ntypedef RevocableProxy<T:{}> = {\n\t/**\n\t\tA Proxy object created with `new Proxy(target, handler)` call.\n\t**/\n\tfinal proxy:Proxy<T>;\n\n\t/**\n\t\tA function with no argument to invalidate (switch off) the `proxy`.\n\t**/\n\tfunction revoke():Void;\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n// standard Haxe types\n\n/**\n\tThe standard `Void` type. Only `null` values can be of the type `Void`.\n\n\t@see https://haxe.org/manual/types-void.html\n**/\n#if jvm\n@:runtimeValue\n#end\n@:coreType abstract Void {}\n\n/**\n\tThe standard `Float` type, this is a double-precision IEEE 64bit float.\n\n\tOn static targets, `null` cannot be assigned to Float. If this is necessary,\n\t`Null<Float>` can be used instead.\n\n\t`Std.int` converts a `Float` to an `Int`, rounded towards 0.\n\t`Std.parseFloat` converts a `String` to a `Float`.\n\n\t@see https://haxe.org/manual/types-basic-types.html\n\t@see https://haxe.org/manual/types-nullability.html\n**/\n@:coreType @:notNull @:runtimeValue abstract Float {}\n\n/**\n\tThe standard `Int` type. Its precision depends on the platform.\n\n\tOn static targets, `null` cannot be assigned to `Int`. If this is necessary,\n\t`Null<Int>` can be used instead.\n\n\t`Std.int` converts a `Float` to an `Int`, rounded towards 0.\n\t`Std.parseInt` converts a `String` to an `Int`.\n\n\t@see https://haxe.org/manual/types-basic-types.html\n\t@see https://haxe.org/manual/std-math-integer-math.html\n\t@see https://haxe.org/manual/types-nullability.html\n**/\n@:coreType @:notNull @:runtimeValue abstract Int to Float {}\n\n#if (java || cs || hl || cpp)\n/**\n\tSingle-precision IEEE 32bit float (4-byte).\n**/\n@:coreType @:notNull @:runtimeValue abstract Single to Float from Float {}\n#end\n\n/**\n\t`Null<T>` is a wrapper that can be used to make the basic types `Int`,\n\t`Float` and `Bool` nullable on static targets.\n\n\tIf null safety is enabled, only types wrapped in `Null<T>` are nullable.\n\n\tOtherwise, it has no effect on non-basic-types, but it can be useful as a way to document\n\tthat `null` is an acceptable value for a method argument, return value or variable.\n\n\t@see https://haxe.org/manual/types-nullability.html\n**/\n@:forward\n@:coreType\nabstract Null<T> from T to T {}\n\n/**\n\tThe standard Boolean type, which can either be `true` or `false`.\n\n\tOn static targets, `null` cannot be assigned to `Bool`. If this is necessary,\n\t`Null<Bool>` can be used instead.\n\n\t@see https://haxe.org/manual/types-bool.html\n\t@see https://haxe.org/manual/types-nullability.html\n**/\n@:coreType @:notNull @:runtimeValue abstract Bool {}\n\n/**\n\t`Dynamic` is a special type which is compatible with all other types.\n\n\tUse of `Dynamic` should be minimized as it prevents several compiler\n\tchecks and optimizations. See `Any` type for a safer alternative for\n\trepresenting values of any type.\n\n\t@see https://haxe.org/manual/types-dynamic.html\n**/\n@:coreType @:runtimeValue abstract Dynamic<T> {}\n\n/**\n\tAn `Iterator` is a structure that permits iteration over elements of type `T`.\n\n\tAny class with matching `hasNext()` and `next()` fields is considered an `Iterator`\n\tand can then be used e.g. in `for`-loops. This makes it easy to implement\n\tcustom iterators.\n\n\t@see https://haxe.org/manual/lf-iterators.html\n**/\ntypedef Iterator<T> = {\n\t/**\n\t\tReturns `false` if the iteration is complete, `true` otherwise.\n\n\t\tUsually iteration is considered to be complete if all elements of the\n\t\tunderlying data structure were handled through calls to `next()`. However,\n\t\tin custom iterators any logic may be used to determine the completion\n\t\tstate.\n\t**/\n\tfunction hasNext():Bool;\n\n\t/**\n\t\tReturns the current item of the `Iterator` and advances to the next one.\n\n\t\tThis method is not required to check `hasNext()` first. A call to this\n\t\tmethod while `hasNext()` is `false` yields unspecified behavior.\n\n\t\tOn the other hand, iterators should not require a call to `hasNext()`\n\t\tbefore the first call to `next()` if an element is available.\n\t**/\n\tfunction next():T;\n}\n\n/**\n\tAn `Iterable` is a data structure which has an `iterator()` method.\n\tSee `Lambda` for generic functions on iterable structures.\n\n\t@see https://haxe.org/manual/lf-iterators.html\n**/\ntypedef Iterable<T> = {\n\tfunction iterator():Iterator<T>;\n}\n\n/**\n\tA `KeyValueIterator` is an `Iterator` that has a key and a value.\n**/\ntypedef KeyValueIterator<K, V> = Iterator<{key:K, value:V}>;\n\n/**\n\tA `KeyValueIterable` is a data structure which has a `keyValueIterator()`\n\tmethod to iterate over key-value-pairs.\n**/\ntypedef KeyValueIterable<K, V> = {\n\tfunction keyValueIterator():KeyValueIterator<K, V>;\n}\n\n/**\n\t`ArrayAccess` is used to indicate a class that can be accessed using brackets.\n\tThe type parameter represents the type of the elements stored.\n\n\tThis interface should be used for externs only. Haxe does not support custom\n\tarray access on classes. However, array access can be implemented for\n\tabstract types.\n\n\t@see https://haxe.org/manual/types-abstract-array-access.html\n**/\nextern interface ArrayAccess<T> {}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport haxe.iterators.ArrayKeyValueIterator;\n\n@:coreApi\nextern class Array<T> {\n\tvar length(default, null):Int;\n\n\tfunction new():Void;\n\tfunction concat(a:Array<T>):Array<T>;\n\tfunction join(sep:String):String;\n\tfunction pop():Null<T>;\n\tfunction push(x:T):Int;\n\tfunction reverse():Void;\n\tfunction shift():Null<T>;\n\tfunction slice(pos:Int, ?end:Int):Array<T>;\n\tfunction sort(f:T->T->Int):Void;\n\tfunction splice(pos:Int, len:Int):Array<T>;\n\tfunction toString():String;\n\tfunction unshift(x:T):Void;\n\n\tinline function insert(pos:Int, x:T):Void {\n\t\t(cast this).splice(pos, 0, x);\n\t}\n\n\tinline function remove(x:T):Bool {\n\t\treturn @:privateAccess HxOverrides.remove(this, x);\n\t}\n\n\tinline function contains(x:T):Bool {\n\t\t#if (js_es >= 6)\n\t\treturn (cast this).includes(x);\n\t\t#else\n\t\treturn this.indexOf(x) != -1;\n\t\t#end\n\t}\n\n\t#if (js_es >= 5)\n\t@:pure function indexOf(x:T, ?fromIndex:Int):Int;\n\t@:pure function lastIndexOf(x:T, ?fromIndex:Int):Int;\n\t#else\n\tinline function indexOf(x:T, ?fromIndex:Int):Int {\n\t\treturn @:privateAccess HxOverrides.indexOf(this, x, (fromIndex != null) ? fromIndex : 0);\n\t}\n\n\tinline function lastIndexOf(x:T, ?fromIndex:Int):Int {\n\t\treturn @:privateAccess HxOverrides.lastIndexOf(this, x, (fromIndex != null) ? fromIndex : length - 1);\n\t}\n\t#end\n\n\t@:pure\n\tinline function copy():Array<T> {\n\t\treturn (cast this).slice();\n\t}\n\n\t@:runtime inline function map<S>(f:T->S):Array<S> {\n\t\tvar result:Array<S> = js.Syntax.construct(Array, length);\n\t\tfor(i in 0...length) {\n\t\t\tresult[i] = f(this[i]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t@:runtime inline function filter(f:T->Bool):Array<T> {\n\t\treturn [for (v in this) if (f(v)) v];\n\t}\n\n\t@:runtime inline function iterator():haxe.iterators.ArrayIterator<T> {\n\t\treturn new haxe.iterators.ArrayIterator(this);\n\t}\n\n\t@:runtime inline function keyValueIterator():ArrayKeyValueIterator<T> {\n\t\treturn new ArrayKeyValueIterator(this);\n\t}\n\n\tinline function resize(len:Int):Void {\n\t\tthis.length = len;\n\t}\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tAn abstract type that represents a Class.\n\n\tSee `Type` for the Haxe Reflection API.\n\n\t@see https://haxe.org/manual/types-class-instance.html\n**/\n@:coreType @:runtimeValue abstract Class<T> {}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi extern class String {\n\tvar length(default, null):Int;\n\n\t@:pure function new(string:String):Void;\n\t@:pure function toUpperCase():String;\n\t@:pure function toLowerCase():String;\n\t@:pure function charAt(index:Int):String;\n\t@:pure function indexOf(str:String, ?startIndex:Int):Int;\n\t@:pure function lastIndexOf(str:String, ?startIndex:Int):Int;\n\t@:pure function split(delimiter:String):Array<String>;\n\t@:pure function toString():String;\n\t@:pure function substring(startIndex:Int, ?endIndex:Int):String;\n\n\t@:pure inline function charCodeAt(index:Int):Null<Int> {\n\t\treturn @:privateAccess HxOverrides.cca(this, index);\n\t}\n\n\t@:pure inline function substr(pos:Int, ?len:Int):String {\n\t\treturn @:privateAccess HxOverrides.substr(this, pos, len);\n\t}\n\n\t@:pure static inline function fromCharCode(code:Int):String {\n\t\treturn untyped __define_feature__('String.fromCharCode', js.Syntax.code(\"String.fromCodePoint({0})\", code));\n\t}\n\n\tstatic function __init__():Void {\n\t\tuntyped __feature__('String.fromCharCode',\n\t\t\tjs.Syntax.code(\"if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }\"));\n\t}\n}\n"]}