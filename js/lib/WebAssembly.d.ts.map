{"sourceRoot":"","names":[],"mappings":";YA4EA,iCAEC,UC5CM,sBD2CN,QE1CM","version":3,"file":"WebAssembly.d.ts.map","sources":["../../../../../../../haxe/versions/4.1.3/std/js/lib/WebAssembly.hx","../../../../../../../haxe/versions/4.1.3/std/js/lib/webassembly/Instance.hx","../../../../../../../haxe/versions/4.1.3/std/js/lib/webassembly/Module.hx"],"sourcesContent":["/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.lib;\n\nimport js.lib.webassembly.Module;\nimport js.lib.webassembly.Instance;\nimport js.html.Response;\n\n/**\n\tThe WebAssembly JavaScript object acts as the namespace for all WebAssembly-related functionality.\n\n\tDocumentation [WebAssembly](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n**/\n@:native(\"WebAssembly\")\nextern class WebAssembly {\n\t/**\n\t\tThe `WebAssembly.instantiate()` function allows you to compile and instantiate WebAssembly code.\n\t\tThis function has two overloads:\n\n\t\t- The primary overload takes the WebAssembly binary code, in the form of a typed array or ArrayBuffer,\n\t\t  and performs both compilation and instantiation in one step. The returned Promise resolves to both\n\t\t  a compiled WebAssembly.Module and its first WebAssembly.Instance.\n\n\t\t- The secondary overload takes an already-compiled WebAssembly.Module and returns a Promise that resolves\n\t\t  to an Instance of that Module. This overload is useful if the Module has already been compiled.\n\t**/\n\t@:overload(function(module:Module, importObject:{}):Promise<Instance> {})\n\t@:pure static function instantiate(bufferSource:BufferSource, importObject:{}):Promise<WebAssemblyInstantiatedSource>;\n\n\t/**\n\t\tThe `WebAssembly.instantiateStreaming()` function compiles and instantiates a WebAssembly module\n\t\tdirectly from a streamed underlying source. This is the most efficient, optimized way to load wasm code.\n\t**/\n\t@:pure static function instantiateStreaming(source:Response, importObject:{}):Promise<WebAssemblyInstantiatedSource>;\n\n\t/**\n\t\tThe `WebAssembly.compile()` function compiles a WebAssembly `Module` from WebAssembly binary code.\n\t\tThis function is useful if it is necessary to a compile a module before it can be instantiated\n\t\t(otherwise, the `WebAssembly.instantiate()` function should be used).\n\t**/\n\t@:pure static function compile(bufferSource:BufferSource):Promise<Module>;\n\n\t/**\n\t\tThe `WebAssembly.compileStreaming()` function compiles a WebAssembly `Module` directly from a streamed\n\t\tunderlying source. This function is useful if it is necessary to a compile a module before it can\n\t\tbe instantiated (otherwise, the `WebAssembly.instantiateStreaming()` function should be used).\n\t**/\n\t@:pure static function compileStreaming(source:Response):Promise<Module>;\n\n\t/**\n\t\tThe `WebAssembly.validate()` function validates a given typed array of WebAssembly binary code,\n\t\treturning whether the bytes form a valid wasm module (`true`) or not (`false`).\n\t**/\n\t@:pure static function validate(bufferSource:BufferSource):Bool;\n}\n\ntypedef WebAssemblyInstantiatedSource = {\n\tfinal module:Module;\n\tfinal instance:Instance;\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.lib.webassembly;\n\nimport haxe.Constraints.Function;\n\n/**\n\tA WebAssembly `Instance` object is a stateful, executable instance of a WebAssembly `Module`.\n\tInstance objects contain all the [Exported WebAssembly functions](https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions)\n\tthat allow calling into WebAssembly code from JavaScript.\n\n\tDocumentation [Instance](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Instance) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Instance$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n**/\n@:native(\"WebAssembly.Instance\")\nextern class Instance {\n\t/**\n\t\tReturns an object containing as its members all the functions exported from\n\t\tthe WebAssembly module instance, to allow them to be accessed and used by JavaScript.\n\t**/\n\tvar exports(default, never):Dynamic<Function>;\n\n\t@:pure function new(module:Module, ?importObject:{}):Void;\n}\n","/*\n * Copyright (C)2005-2019 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage js.lib.webassembly;\n\nimport js.lib.BufferSource;\n\n/**\n\tA WebAssembly `Module` object contains stateless WebAssembly code that has already\n\tbeen compiled by the browser and can be efficiently [shared with Workers](https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage),\n\tand instantiated multiple times. To instantiate the module, call\n\t[the secondary overload of `WebAssembly.instantiate()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiate#Secondary_overload_%E2%80%94_taking_a_module_object_instance).\n\n\tDocumentation [Module](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Module) by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Module$history), licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).\n**/\n@:native(\"WebAssembly.Module\")\nextern class Module {\n\t@:pure function new(bufferSource:BufferSource):Void;\n\n\t/**\n\t\tGiven a `Module` and string, returns a copy of the contents of all custom sections\n\t\tin the module with the given string name.\n\t**/\n\t@:pure static function customSections(module:Module, sectionName:String):Array<ArrayBuffer>;\n\n\t/**\n\t\tGiven a `Module`, returns an array containing descriptions of all the declared exports.\n\t**/\n\t@:pure static function exports(module:Module):Array<ModuleExportDescriptor>;\n\n\t/**\n\t\tGiven a `Module`, returns an array containing descriptions of all the declared imports.\n\t**/\n\t@:pure static function imports(module:Module):Array<ModuleImportDescriptor>;\n}\n\ntypedef ModuleExportDescriptor = {\n\tvar name:String;\n\tvar kind:ImportExportKind;\n}\n\ntypedef ModuleImportDescriptor = {\n\tvar module:String;\n\tvar name:String;\n\tvar kind:ImportExportKind;\n}\n\nenum abstract ImportExportKind(String) {\n\tvar Function = \"function\";\n\tvar Table = \"table\";\n\tvar Memory = \"memory\";\n\tvar Global = \"global\";\n}\n"]}