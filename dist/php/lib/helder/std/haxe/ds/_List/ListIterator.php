<?php
/**
 * Generated by Haxe 4.1.4
 */

namespace helder\std\haxe\ds\_List;

use \helder\std\php\Boot;

class ListIterator {
	/**
	 * @var ListNode
	 */
	public $head;

	/**
	 * @param ListNode $head
	 * 
	 * @return void
	 */
	public function __construct ($head) {
		#C:\Users\ben\AppData\Roaming/haxe/versions/4.1.4/std/haxe/ds/List.hx:281: characters 3-19
		$this->head = $head;
	}

	/**
	 * @return bool
	 */
	public function hasNext () {
		#C:\Users\ben\AppData\Roaming/haxe/versions/4.1.4/std/haxe/ds/List.hx:285: characters 3-22
		return $this->head !== null;
	}

	/**
	 * @return mixed
	 */
	public function next () {
		#C:\Users\ben\AppData\Roaming/haxe/versions/4.1.4/std/haxe/ds/List.hx:289: characters 3-23
		$val = $this->head->item;
		#C:\Users\ben\AppData\Roaming/haxe/versions/4.1.4/std/haxe/ds/List.hx:290: characters 3-19
		$this->head = $this->head->next;
		#C:\Users\ben\AppData\Roaming/haxe/versions/4.1.4/std/haxe/ds/List.hx:291: characters 3-13
		return $val;
	}
}

Boot::registerClass(ListIterator::class, 'haxe.ds._List.ListIterator');
